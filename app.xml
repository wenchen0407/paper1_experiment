<nesc xmlns="http://www.tinyos.net/nesC">
  <components>
    <component qname="TestNetworkAppC" loc="9:TestNetworkAppC.nc">
      <configuration/>
    </component>
    <component qname="TestNetworkC" loc="11:TestNetworkC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="39:/opt/tinyos-2.x/tos/platforms/micaz/sim/MainC.nc">
      <configuration/>
    </component>
    <component qname="PlatformC" loc="31:/opt/tinyos-2.x/tos/platforms/mica/sim/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id$&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:27">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:23">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:22">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:21">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:20">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:18">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="10:/opt/tinyos-2.x/tos/platforms/mica/sim/MeasureClockC.nc">
      <documentation loc="3:/opt/tinyos-2.x/tos/platforms/mica/sim/MeasureClockC.nc">
        <short>&#10; Simulation version of MeasureClockC for the mica platform.</short>
        <long>&#10; Simulation version of MeasureClockC for the mica platform. See &#10; tos/platforms/mica/MeasureClockC.nc for more details.&#10;&#10; @author Phil Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMainP" loc="35:/opt/tinyos-2.x/tos/lib/tossim/SimMainP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="34:/opt/tinyos-2.x/tos/lib/tossim/TinySchedulerC.nc">
      <documentation loc="24:/opt/tinyos-2.x/tos/lib/tossim/TinySchedulerC.nc">
        <short>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).</short>
        <long>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SimSchedulerBasicP" loc="39:/opt/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMoteP" loc="39:/opt/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/sim/CC2420.h">
        <short>&#10; Ideally, your receive history size should be equal to the number of&#10; RF neighbors your node will have&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaP" loc="3:/opt/tinyos-2.x/tos/chips/cc2420/csma/sim/CC2420CsmaP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="34:/Users/wangwenchen/wcps_apps/pure-tdma/sim/ActiveMessageC.nc">
      <documentation loc="25:/Users/wangwenchen/wcps_apps/pure-tdma/sim/ActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AsyncAdapterC" loc="29:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AsyncAdapterC.nc">
      <documentation loc="23:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AsyncAdapterC.nc">
        <short>&#10; Converts &#60;tt>AsyncReceive&#60;/tt> and &#60;tt>AsyncSend&#60;/tt> interfaces to&#10; synchronous &#60;tt>Receive&#60;/tt> and &#60;tt>Send&#60;/tt> interfaces.</short>
        <long>&#10; Converts &#60;tt>AsyncReceive&#60;/tt> and &#60;tt>AsyncSend&#60;/tt> interfaces to&#10; synchronous &#60;tt>Receive&#60;/tt> and &#60;tt>Send&#60;/tt> interfaces.&#10;&#10; @author Greg Hackmann&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AsyncReceiveAdapterP" loc="29:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AsyncReceiveAdapterP.nc" safe="">
      <documentation loc="23:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AsyncReceiveAdapterP.nc">
        <short>&#10; Converts an &#60;tt>AsyncReceive&#60;/tt> interface to a synchronous&#10; &#60;tt>Receive&#60;/tt> interface.</short>
        <long>&#10; Converts an &#60;tt>AsyncReceive&#60;/tt> interface to a synchronous&#10; &#60;tt>Receive&#60;/tt> interface.&#10;&#10; @author Greg Hackmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AsyncSendAdapterP" loc="29:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AsyncSendAdapterP.nc" safe="">
      <documentation loc="23:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AsyncSendAdapterP.nc">
        <short>&#10; Converts an &#60;tt>AsyncSend&#60;/tt> interface to a synchronous&#10; &#60;tt>Send&#60;/tt> interface.</short>
        <long>&#10; Converts an &#60;tt>AsyncSend&#60;/tt> interface to a synchronous&#10; &#60;tt>Send&#60;/tt> interface.&#10;&#10; @author Greg Hackmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MacC" loc="30:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/MacC.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/MacC.nc">
        <short>      &#10;&#10; </short>
        <long>      &#10;&#10; @author Octav Chipara&#10; @version $Revision: 1.2 $&#10; @date $Date: 2011/12/21 17:56:26 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PureTDMASchedulerC" loc="32:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Octav Chipara&#10; @version $Revision: 1.3 $&#10; @date $Date: 2011/12/21 17:56:26 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PureTDMASchedulerP" loc="13:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <module/>
    </component>
    <component qname="TDMASlotSenderC" loc="32:/opt/tinyos-2.x/apps/wustl/upma/system/TDMASlotSenderC.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/system/TDMASlotSenderC.nc">
        <short>&#10; This component transmits packets in pure tdma slot&#10; It should solve the clock drift issues&#10; &#10; </short>
        <long>&#10; This component transmits packets in pure tdma slot&#10; It should solve the clock drift issues&#10; &#10; @author Octav Chipara&#10; @version $Revision: 1.1 $&#10; @date $Date: 2007/11/06 23:59:00 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TDMASlotSenderC.TDMASlotSender" loc="30(TDMASlotSenderC.TDMASlotSender):/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderC.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderC.nc">
        <short>      &#10;&#10; </short>
        <long>      &#10;&#10; @author Octav Chipara&#10; @version $Revision: 1.2 $&#10; @date $Date: 2008/06/27 20:27:22 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GenericSlotSenderC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TDMASlotSenderC.TDMASlotSender.GenericSlotSenderP" loc="39(TDMASlotSenderC.TDMASlotSender.GenericSlotSenderP):/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderP.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderP.nc">
        <short>      &#10; The generic slot sender implements a generic slot as follows:&#10; &#10;      start&#10;       |&#10;       |           offset     initial backoff     send done      &#10;       |             |              |              |               &#10;       v             v              V              V               &#10;       |********************************************************|&#10;       |---START-----|---OFFSET-----|----SENT------|            | END &#10;  &#10; </short>
        <long>      &#10; The generic slot sender implements a generic slot as follows:&#10; &#10;      start&#10;       |&#10;       |           offset     initial backoff     send done      &#10;       |             |              |              |               &#10;       v             v              V              V               &#10;       |********************************************************|&#10;       |---START-----|---OFFSET-----|----SENT------|            | END &#10;  &#10; @author Octav Chipara&#10; @version $Revision: 1.4 $&#10; @date $Date: 2011/12/21 17:56:26 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GenericSlotSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMASlotSenderC.TDMASlotSender.Alarm32khz16C" loc="1(TDMASlotSenderC.TDMASlotSender.Alarm32khz16C):/Users/wangwenchen/wcps_apps/pure-tdma/sim/Alarm32khz16C.nc">
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMASlotSenderC.TDMASlotSender.Alarm32khz16C.AlarmMicro16C" loc="1(TDMASlotSenderC.TDMASlotSender.Alarm32khz16C.AlarmMicro16C):/Users/wangwenchen/wcps_apps/pure-tdma/sim/AlarmMicro16C.nc">
      <instance number="0">
        <component-ref qname="AlarmMicro16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMASlotSenderC.TDMASlotSender.Alarm32khz16C.AlarmMicro16C.AlarmMicro16P" loc="1(TDMASlotSenderC.TDMASlotSender.Alarm32khz16C.AlarmMicro16C.AlarmMicro16P):/Users/wangwenchen/wcps_apps/pure-tdma/sim/AlarmMicro16P.nc">
      <instance number="0">
        <component-ref qname="AlarmMicro16P"/>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro16C" loc="1:/Users/wangwenchen/wcps_apps/pure-tdma/sim/CounterMicro16C.nc">
      <configuration/>
    </component>
    <component qname="CounterMicro16P" loc="1:/Users/wangwenchen/wcps_apps/pure-tdma/sim/CounterMicro16P.nc">
      <module/>
    </component>
    <component qname="TDMASlotSenderC.TDMASlotSender.Alarm32khz16C.TransformAlarmC" loc="40(TDMASlotSenderC.TDMASlotSender.Alarm32khz16C.TransformAlarmC):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x110992cc0"/>
            <typename><typedef-ref name="T32khz" ref="0x11098b088"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x11098b498"/>
            <typename><typedef-ref name="TMicro" ref="0x11098b7f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="1:/Users/wangwenchen/wcps_apps/pure-tdma/sim/Counter32khz16C.nc">
      <configuration/>
    </component>
    <component qname="Counter32khz16C.TransformCounterC" loc="43(Counter32khz16C.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x110992cc0"/>
            <typename><typedef-ref name="T32khz" ref="0x11098b088"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x11098b498"/>
            <typename><typedef-ref name="TMicro" ref="0x11098b7f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="GenericSlotterC" loc="30:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotterC.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotterC.nc">
        <short>      &#10;&#10; </short>
        <long>      &#10;&#10; @author Octav Chipara&#10; @version $Revision: 1.2 $&#10; @date $Date: 2008/06/27 20:27:22 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="GenericSlotterP" loc="38:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotterP.nc">
        <short>      &#10;&#10; </short>
        <long>      &#10;&#10; @author Bo Li&#10; @version $WCP 2.0 $&#10; @date $Date: 2015/08/28  $&#10; change to match super long superframe length&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="GenericSlotterC.Alarm32khz32C" loc="1(GenericSlotterC.Alarm32khz32C):/Users/wangwenchen/wcps_apps/pure-tdma/sim/Alarm32khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="GenericSlotterC.Alarm32khz32C.AlarmMicro16C" loc="1(GenericSlotterC.Alarm32khz32C.AlarmMicro16C):/Users/wangwenchen/wcps_apps/pure-tdma/sim/AlarmMicro16C.nc">
      <instance number="1">
        <component-ref qname="AlarmMicro16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="GenericSlotterC.Alarm32khz32C.AlarmMicro16C.AlarmMicro16P" loc="1(GenericSlotterC.Alarm32khz32C.AlarmMicro16C.AlarmMicro16P):/Users/wangwenchen/wcps_apps/pure-tdma/sim/AlarmMicro16P.nc">
      <instance number="1">
        <component-ref qname="AlarmMicro16P"/>
      </instance>
      <module/>
    </component>
    <component qname="GenericSlotterC.Alarm32khz32C.TransformAlarmC" loc="40(GenericSlotterC.Alarm32khz32C.TransformAlarmC):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x110992cc0"/>
            <typename><typedef-ref name="T32khz" ref="0x11098b088"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
          </type-int>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x11098b498"/>
            <typename><typedef-ref name="TMicro" ref="0x11098b7f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="1:/Users/wangwenchen/wcps_apps/pure-tdma/sim/Counter32khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter32khz32C.TransformCounterC" loc="43(Counter32khz32C.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x110992cc0"/>
            <typename><typedef-ref name="T32khz" ref="0x11098b088"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
          </type-int>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x11098b498"/>
            <typename><typedef-ref name="TMicro" ref="0x11098b7f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenderDispatcherC" loc="30:/opt/tinyos-2.x/apps/wustl/upma/system/SenderDispatcherC.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/system/SenderDispatcherC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Octav Chipara&#10; @version $Revision: 1.1 $&#10; @date $Date: 2007/11/06 23:59:00 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SenderDispatcherP" loc="30:/opt/tinyos-2.x/apps/wustl/upma/system/SenderDispatcherP.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/system/SenderDispatcherP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Octav Chipara&#10; @version $Revision: 1.3 $&#10; @date $Date: 2011/12/21 17:56:26 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyChannelMonitorC" loc="30:/opt/tinyos-2.x/apps/wustl/upma/system/DummyChannelMonitorC.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/system/DummyChannelMonitorC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Octav Chipara&#10; @version $Revision: 1.3 $&#10; @date $Date: 2011/12/21 17:56:26 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BeaconSlotC" loc="30:/opt/tinyos-2.x/apps/wustl/upma/system/BeaconSlotC.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/system/BeaconSlotC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Octav Chipara&#10; @version $Revision: 1.1 $&#10; @date $Date: 2007/11/06 23:58:59 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BeaconSlotP" loc="39:/Users/wangwenchen/wcps_apps/pure-tdma/sim/BeaconSlotP.nc">
      <documentation loc="23:/Users/wangwenchen/wcps_apps/pure-tdma/sim/BeaconSlotP.nc">
        <short>&#10; This component handles time synchronization&#10;&#10; </short>
        <long>&#10; This component handles time synchronization&#10;&#10; @author Octav Chipara&#10; @version $Revision: 1.1 $&#10; @date $Date: 2007/11/06 23:58:59 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PureTDMASchedulerC.Alarm32khz32C" loc="1(PureTDMASchedulerC.Alarm32khz32C):/Users/wangwenchen/wcps_apps/pure-tdma/sim/Alarm32khz32C.nc">
      <instance number="1">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PureTDMASchedulerC.Alarm32khz32C.AlarmMicro16C" loc="1(PureTDMASchedulerC.Alarm32khz32C.AlarmMicro16C):/Users/wangwenchen/wcps_apps/pure-tdma/sim/AlarmMicro16C.nc">
      <instance number="2">
        <component-ref qname="AlarmMicro16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PureTDMASchedulerC.Alarm32khz32C.AlarmMicro16C.AlarmMicro16P" loc="1(PureTDMASchedulerC.Alarm32khz32C.AlarmMicro16C.AlarmMicro16P):/Users/wangwenchen/wcps_apps/pure-tdma/sim/AlarmMicro16P.nc">
      <instance number="2">
        <component-ref qname="AlarmMicro16P"/>
      </instance>
      <module/>
    </component>
    <component qname="PureTDMASchedulerC.Alarm32khz32C.TransformAlarmC" loc="40(PureTDMASchedulerC.Alarm32khz32C.TransformAlarmC):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x110992cc0"/>
            <typename><typedef-ref name="T32khz" ref="0x11098b088"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
          </type-int>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x11098b498"/>
            <typename><typedef-ref name="TMicro" ref="0x11098b7f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="2:/opt/tinyos-2.x/tos/chips/cc2420/control/sim/CC2420ControlC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="1:/opt/tinyos-2.x/tos/chips/cc2420/control/sim/CC2420ControlP.nc">
      <module/>
    </component>
    <component qname="CpmModelC" loc="53:/opt/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <module/>
    </component>
    <component qname="TossimPacketModelC" loc="52:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <documentation loc="24:/opt/tinyos-2.x/tos/lib/tossim/sim_csma.h">
        <short>&#10;&#10; Configuration parameters for a CSMA link.</short>
        <long>&#10;&#10; Configuration parameters for a CSMA link.&#10;&#10; @author Philip Levis&#10; @date   Dec 10 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TossimComPrintfC" loc="11:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimComPrintfC.nc">
      <configuration/>
    </component>
    <component qname="TossimComPrintfP" loc="13:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimComPrintfP.nc">
      <module/>
    </component>
    <component qname="MacControlC" loc="29:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/MacControlC.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/MacControlC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1 $&#10; @date $Date: 2007/11/06 23:58:58 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SyncAdapterC" loc="1:/Users/wangwenchen/wcps_apps/pure-tdma/sim/SyncAdapterC.nc">
      <configuration/>
    </component>
    <component qname="SyncReceiveAdapterP" loc="1:/Users/wangwenchen/wcps_apps/pure-tdma/sim/SyncReceiveAdapterP.nc" safe="">
      <module/>
    </component>
    <component qname="SyncSendAdapterP" loc="1:/Users/wangwenchen/wcps_apps/pure-tdma/sim/SyncSendAdapterP.nc" safe="">
      <module/>
    </component>
    <component qname="TossimActiveMessageC" loc="36:/opt/tinyos-2.x/tos/lib/tossim/TossimActiveMessageC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/tossim/TossimActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="45:/opt/tinyos-2.x/tos/lib/tossim/ActiveMessageAddressC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/lib/tossim/ActiveMessageAddressC.nc">
        <short>&#10; Accessor methods for Active Messages.</short>
        <long>&#10; Accessor methods for Active Messages.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestNetworkAppC.Sender" loc="39(TestNetworkAppC.Sender):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.Sender.AMQueueEntryP" loc="35(TestNetworkAppC.Sender.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x11090a4d8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkAppC.Receiver" loc="35(TestNetworkAppC.Receiver):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.AMReceiver" loc="35(TestNetworkAppC.AMReceiver):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.Alarm32khz32C" loc="1(TestNetworkAppC.Alarm32khz32C):/Users/wangwenchen/wcps_apps/pure-tdma/sim/Alarm32khz32C.nc">
      <instance number="2">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.Alarm32khz32C.AlarmMicro16C" loc="1(TestNetworkAppC.Alarm32khz32C.AlarmMicro16C):/Users/wangwenchen/wcps_apps/pure-tdma/sim/AlarmMicro16C.nc">
      <instance number="3">
        <component-ref qname="AlarmMicro16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.Alarm32khz32C.AlarmMicro16C.AlarmMicro16P" loc="1(TestNetworkAppC.Alarm32khz32C.AlarmMicro16C.AlarmMicro16P):/Users/wangwenchen/wcps_apps/pure-tdma/sim/AlarmMicro16P.nc">
      <instance number="3">
        <component-ref qname="AlarmMicro16P"/>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkAppC.Alarm32khz32C.TransformAlarmC" loc="40(TestNetworkAppC.Alarm32khz32C.TransformAlarmC):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x110992cc0"/>
            <typename><typedef-ref name="T32khz" ref="0x11098b088"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
          </type-int>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x11098b498"/>
            <typename><typedef-ref name="TMicro" ref="0x11098b7f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkAppC.SSTdmaSlotSenderC" loc="32(TestNetworkAppC.SSTdmaSlotSenderC):/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderC.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Bo Li&#10; @version $Revision: 0.1 $&#10; @date $Date: 2013/09/23$&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SSTdmaSlotSenderC"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
          <value cst="I:120">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
          <value cst="I:8">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.SSTdmaSlotSenderC.SSTdmaSlotSenderP" loc="40(TestNetworkAppC.SSTdmaSlotSenderC.SSTdmaSlotSenderP):/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderP.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderP.nc">
        <short>&#10; The generic slot sender implements a generic slot as follows:&#10; &#10;      start&#10;       |&#10;       |           offset     initial backoff     send done      &#10;       |             |              |              |               &#10;       v             v              V              V            &#10;       |****************************************************************|&#10;       |---START-----|---OFFSET-----|----SENT------|                    | END &#10;                                              &#10;&#10; </short>
        <long>&#10; The generic slot sender implements a generic slot as follows:&#10; &#10;      start&#10;       |&#10;       |           offset     initial backoff     send done      &#10;       |             |              |              |               &#10;       v             v              V              V            &#10;       |****************************************************************|&#10;       |---START-----|---OFFSET-----|----SENT------|                    | END &#10;                                              &#10;&#10; @author Bo Li&#10; @version $Revision: 0.1 $&#10; @date $Date: 2013/09/23$&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SSTdmaSlotSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkAppC.SSTdmaSlotSenderC.Alarm32khz32C" loc="1(TestNetworkAppC.SSTdmaSlotSenderC.Alarm32khz32C):/Users/wangwenchen/wcps_apps/pure-tdma/sim/Alarm32khz32C.nc">
      <instance number="3">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.SSTdmaSlotSenderC.Alarm32khz32C.AlarmMicro16C" loc="1(TestNetworkAppC.SSTdmaSlotSenderC.Alarm32khz32C.AlarmMicro16C):/Users/wangwenchen/wcps_apps/pure-tdma/sim/AlarmMicro16C.nc">
      <instance number="4">
        <component-ref qname="AlarmMicro16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.SSTdmaSlotSenderC.Alarm32khz32C.AlarmMicro16C.AlarmMicro16P" loc="1(TestNetworkAppC.SSTdmaSlotSenderC.Alarm32khz32C.AlarmMicro16C.AlarmMicro16P):/Users/wangwenchen/wcps_apps/pure-tdma/sim/AlarmMicro16P.nc">
      <instance number="4">
        <component-ref qname="AlarmMicro16P"/>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkAppC.SSTdmaSlotSenderC.Alarm32khz32C.TransformAlarmC" loc="40(TestNetworkAppC.SSTdmaSlotSenderC.Alarm32khz32C.TransformAlarmC):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x110992cc0"/>
            <typename><typedef-ref name="T32khz" ref="0x11098b088"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
          </type-int>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x11098b498"/>
            <typename><typedef-ref name="TMicro" ref="0x11098b7f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x110b262f0" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x110b26658" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x110b269c0" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x110b26cf0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GenericSlotSenderP" loc="39:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderP.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderP.nc">
        <short>      &#10; The generic slot sender implements a generic slot as follows:&#10; &#10;      start&#10;       |&#10;       |           offset     initial backoff     send done      &#10;       |             |              |              |               &#10;       v             v              V              V               &#10;       |********************************************************|&#10;       |---START-----|---OFFSET-----|----SENT------|            | END &#10;  &#10; </short>
        <long>      &#10; The generic slot sender implements a generic slot as follows:&#10; &#10;      start&#10;       |&#10;       |           offset     initial backoff     send done      &#10;       |             |              |              |               &#10;       v             v              V              V               &#10;       |********************************************************|&#10;       |---START-----|---OFFSET-----|----SENT------|            | END &#10;  &#10; @author Octav Chipara&#10; @version $Revision: 1.4 $&#10; @date $Date: 2011/12/21 17:56:26 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="offset" ref="0x110f7c928" loc="39:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderP.nc">
          <component-ref qname="GenericSlotSenderP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
        </constant>
        <constant name="backoff" ref="0x110f7cc70" loc="39:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderP.nc">
          <component-ref qname="GenericSlotSenderP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
        </constant>
        <constant name="cca" ref="0x110f79020" loc="39:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderP.nc">
          <component-ref qname="GenericSlotSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GenericSlotSenderC" loc="30:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderC.nc">
        <short>      &#10;&#10; </short>
        <long>      &#10;&#10; @author Octav Chipara&#10; @version $Revision: 1.2 $&#10; @date $Date: 2008/06/27 20:27:22 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="offset" ref="0x110f1db20" loc="30:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderC.nc">
          <component-ref qname="GenericSlotSenderC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
        </constant>
        <constant name="backoff" ref="0x110f1de68" loc="30:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderC.nc">
          <component-ref qname="GenericSlotSenderC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
        </constant>
        <constant name="cca" ref="0x110f1a190" loc="30:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderC.nc">
          <component-ref qname="GenericSlotSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x111050550" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x111050550"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x111050cb8" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x111050cb8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x11104f0a8" loc="46:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x11104f0a8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x11104f820" loc="47:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x11104f820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x11104fbc8" loc="48:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x11104e380" loc="49:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x11104e380"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x110bcbd80" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x110bc8108" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x110bc8470" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x110bc87a0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Alarm32khz32C" loc="1:/Users/wangwenchen/wcps_apps/pure-tdma/sim/Alarm32khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x111581748" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMicro16C" loc="1:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AlarmMicro16C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SSTdmaSlotSenderP" loc="40:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderP.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderP.nc">
        <short>&#10; The generic slot sender implements a generic slot as follows:&#10; &#10;      start&#10;       |&#10;       |           offset     initial backoff     send done      &#10;       |             |              |              |               &#10;       v             v              V              V            &#10;       |****************************************************************|&#10;       |---START-----|---OFFSET-----|----SENT------|                    | END &#10;                                              &#10;&#10; </short>
        <long>&#10; The generic slot sender implements a generic slot as follows:&#10; &#10;      start&#10;       |&#10;       |           offset     initial backoff     send done      &#10;       |             |              |              |               &#10;       v             v              V              V            &#10;       |****************************************************************|&#10;       |---START-----|---OFFSET-----|----SENT------|                    | END &#10;                                              &#10;&#10; @author Bo Li&#10; @version $Revision: 0.1 $&#10; @date $Date: 2013/09/23$&#10;</long>
      </documentation>
      <parameters>
        <constant name="offset" ref="0x1115fc408" loc="40:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderP.nc">
          <component-ref qname="SSTdmaSlotSenderP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
        </constant>
        <constant name="backoff" ref="0x1115fc750" loc="40:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderP.nc">
          <component-ref qname="SSTdmaSlotSenderP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
        </constant>
        <constant name="checkLength" ref="0x1115fcac0" loc="40:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderP.nc">
          <component-ref qname="SSTdmaSlotSenderP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x110b36958" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x110b36ca0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x110b33020" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SSTdmaSlotSenderC" loc="32:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Bo Li&#10; @version $Revision: 0.1 $&#10; @date $Date: 2013/09/23$&#10;</long>
      </documentation>
      <parameters>
        <constant name="offset" ref="0x111607a28" loc="32:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderC.nc">
          <component-ref qname="SSTdmaSlotSenderC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
        </constant>
        <constant name="backoff" ref="0x111607d70" loc="32:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderC.nc">
          <component-ref qname="SSTdmaSlotSenderC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
        </constant>
        <constant name="checkLength" ref="0x111604108" loc="32:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderC.nc">
          <component-ref qname="SSTdmaSlotSenderC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x11161cc68" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x11090a4d8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x1115a2cc8" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x11090a4d8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x11159b6d0" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x11090a4d8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x111015da8" loc="41:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x111015da8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x1110115a8" loc="42:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x1110115a8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x111011970" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x111011970"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x111010110" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x111010110"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x1110104b8" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Alarm32khz16C" loc="1:/Users/wangwenchen/wcps_apps/pure-tdma/sim/Alarm32khz16C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMicro16P" loc="1:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AlarmMicro16P.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x1109b2a20" loc="99:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="93:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x1109b2468" loc="99:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x1109b27a0" loc="99:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x1109b3528" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x1109b5c18" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x1109b55d8" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x1109b5998" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x1109babf8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1109ba988" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x1109b3d30" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x1109b7d50" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x1109b7ae0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x1109b9c48" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x1109b99d8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x1109b1be0" loc="110:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="107:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x1109b6df8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x1109b6b88" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x1109b1328" loc="105:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="101:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x1109b73e0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x1109ba258" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x1109b9328" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x1109b64d8" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Slotter" loc="30:/opt/tinyos-2.x/apps/wustl/upma/interfaces/Slotter.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/interfaces/Slotter.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Octav Chipara&#10; @version $Revision: 1.1 $&#10; @date $Date: 2007/11/06 23:58:58 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="slot" ref="0x110dc6108" loc="32:/opt/tinyos-2.x/apps/wustl/upma/interfaces/Slotter.nc">
        <interfacedef-ref qname="Slotter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="num" ref="0x110dcbe28" loc="32:/opt/tinyos-2.x/apps/wustl/upma/interfaces/Slotter.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x1109aa708" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1109aa498" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x1109a8c00" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1109a8990" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x1109aeae0" loc="83:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1109a8020" loc="109:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x110cebd88" loc="95:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110cebb18" loc="95:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x110cec0a8" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110ceedd0" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x110cbf878" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x110cbf608" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x110ccad78" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x110ccab08" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x110cee290" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x110cee020" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x110ceb020" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110cecc28" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x1109ac4d0" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x1109476b0" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x110968020" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacket" loc="44:/opt/tinyos-2.x/tos/lib/tossim/TossimPacket.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="strength" ref="0x1114d9020" loc="45:/opt/tinyos-2.x/tos/lib/tossim/TossimPacket.nc">
        <interfacedef-ref qname="TossimPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x11014bdc8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1114dcc68" loc="45:/opt/tinyos-2.x/tos/lib/tossim/TossimPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacketModelCCA" loc="38:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelCCA.nc">
      <documentation loc="34:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelCCA.nc">
        <short> &#10; Pass an enabling bit into TossimPacketModelC for enabling/disabling of CCA&#10;</short>
      </documentation>
      <function command="" provided="0" name="set_cca" ref="0x110de06c0" loc="39:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelCCA.nc">
        <interfacedef-ref qname="TossimPacketModelCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x110de0450" loc="39:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x110cde040" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110ce1da0" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x110cdd020" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110cded78" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x110cd8150" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110cdab20" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110cdae30" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x110cda290" loc="95:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x110cdb3e0" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110cdde00" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110cdb160" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CcaControl" loc="28:/opt/tinyos-2.x/apps/wustl/upma/interfaces/CcaControl.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/interfaces/CcaControl.nc">
        <short>&#10; Controls the radio's CCA and backoff policies.</short>
        <long>&#10; Controls the radio's CCA and backoff policies.&#10;&#10; @author Greg Hackmann&#10;</long>
      </documentation>
      <function event="" provided="0" name="getCongestionBackoff" ref="0x110d88630" loc="50:/opt/tinyos-2.x/apps/wustl/upma/interfaces/CcaControl.nc">
        <documentation loc="41:/opt/tinyos-2.x/apps/wustl/upma/interfaces/CcaControl.nc">
          <short>&#10; The congestion backoff time for a message must be selected.</short>
          <long>&#10; The congestion backoff time for a message must be selected.  If the upper&#10; layer has no need to change the backoff, then return&#10; &#60;tt>defaultBackoff&#60;/tt>.&#10;&#10; @param msg the message&#10; @param defaultBackoff the radio-default backoff length&#10; @return the congestion backoff length, in 32 Khz increments&#10;</long>
        </documentation>
        <interfacedef-ref qname="CcaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110d88020" loc="50:/opt/tinyos-2.x/apps/wustl/upma/interfaces/CcaControl.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="defaultBackoff" ref="0x110d883b0" loc="50:/opt/tinyos-2.x/apps/wustl/upma/interfaces/CcaControl.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getInitialBackoff" ref="0x110d89670" loc="39:/opt/tinyos-2.x/apps/wustl/upma/interfaces/CcaControl.nc">
        <documentation loc="30:/opt/tinyos-2.x/apps/wustl/upma/interfaces/CcaControl.nc">
          <short>&#10; The initial backoff time for a message must be selected.</short>
          <long>&#10; The initial backoff time for a message must be selected.  If the upper&#10; layer has no need to change the backoff, then return&#10; &#60;tt>defaultBackoff&#60;/tt>.&#10;&#10; @param msg the message&#10; @param defaultBackoff the radio-default backoff length&#10; @return the initial backoff length, in 32 Khz increments&#10;</long>
        </documentation>
        <interfacedef-ref qname="CcaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110d89060" loc="39:/opt/tinyos-2.x/apps/wustl/upma/interfaces/CcaControl.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="defaultbackoff" ref="0x110d893f0" loc="39:/opt/tinyos-2.x/apps/wustl/upma/interfaces/CcaControl.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getCca" ref="0x110d875e0" loc="61:/opt/tinyos-2.x/apps/wustl/upma/interfaces/CcaControl.nc">
        <documentation loc="52:/opt/tinyos-2.x/apps/wustl/upma/interfaces/CcaControl.nc">
          <short>&#10; Whether to perform CCA before sending a message must be determined.</short>
          <long>&#10; Whether to perform CCA before sending a message must be determined.  If&#10; the upper layer has no need to specify this, then return&#10; &#60;tt>defaultCca&#60;/tt>.&#10;&#10; @param msg the message&#10; @param defaultCca the radio-default CCA policy&#10; @return whether to perform CCA before sending the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CcaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110d87020" loc="61:/opt/tinyos-2.x/apps/wustl/upma/interfaces/CcaControl.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="defaultCca" ref="0x110d87360" loc="61:/opt/tinyos-2.x/apps/wustl/upma/interfaces/CcaControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x1109a3020" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x11090ac40"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x1109a4620" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x11090ac40"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x1109a4980" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1109a4c90" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x11099d380" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11099fd48" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x11099d0c8" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x11099f540" loc="112:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x1109a22d0" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109a2060" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1109a0708" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109a0160" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x1109a0488" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPowerControl" loc="30:/opt/tinyos-2.x/apps/wustl/upma/interfaces/RadioPowerControl.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/interfaces/RadioPowerControl.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.3 $&#10; @date $Date: 2011/12/21 17:56:26 $ &#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x110d84c50" loc="36:/opt/tinyos-2.x/apps/wustl/upma/interfaces/RadioPowerControl.nc">
        <interfacedef-ref qname="RadioPowerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x110d849e0" loc="36:/opt/tinyos-2.x/apps/wustl/upma/interfaces/RadioPowerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x110db7c48" loc="42:/opt/tinyos-2.x/apps/wustl/upma/interfaces/RadioPowerControl.nc">
        <interfacedef-ref qname="RadioPowerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x110db79d8" loc="42:/opt/tinyos-2.x/apps/wustl/upma/interfaces/RadioPowerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x110d84360" loc="35:/opt/tinyos-2.x/apps/wustl/upma/interfaces/RadioPowerControl.nc">
        <documentation loc="32:/opt/tinyos-2.x/apps/wustl/upma/interfaces/RadioPowerControl.nc">
          <short>&#10; Turn Power to the Radio On&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioPowerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x110db7360" loc="41:/opt/tinyos-2.x/apps/wustl/upma/interfaces/RadioPowerControl.nc">
        <documentation loc="38:/opt/tinyos-2.x/apps/wustl/upma/interfaces/RadioPowerControl.nc">
          <short>&#10; Turn Power to the Radio Off&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioPowerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x1111738c0" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1111738c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x111170178" loc="55:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x111170e08" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1111738c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x111170888" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x111170b88" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1111738c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimComPrintfWrite" loc="11:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimComPrintfWrite.nc">
      <function command="" provided="0" name="printfWrite" ref="0x110ddd940" loc="12:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimComPrintfWrite.nc">
        <interfacedef-ref qname="TossimComPrintfWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flow" ref="0x110de1928" loc="12:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimComPrintfWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
          <variable name="slot" ref="0x110de1c48" loc="12:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimComPrintfWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
          <variable name="source" ref="0x110ddd020" loc="12:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimComPrintfWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
          <variable name="node_id" ref="0x110ddd358" loc="12:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimComPrintfWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x110ddd690" loc="12:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimComPrintfWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x111642c80" loc="41:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x1116424e8" loc="35:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x110cc9728" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110cc9198" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110cc94a8" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x110cc4a68" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110cc44a0" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110cc47b0" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x110cc6c70" loc="101:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x110cc7968" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110cc76f8" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x110cc5d58" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110cc57b0" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x110cc5ad8" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x111656670" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x111656670"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x111653290" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x111656670"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x111653020" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x111656670"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1109d23e8" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1109d23e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1109d2618" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1109d2618"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x1109cd020" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1109d2618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x1109cf070" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x1109ce5c0" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1109d2618"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1109d2618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x1109ce020" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1109d2618"/></type-var>
          </variable>
          <variable name="dt" ref="0x1109ce340" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1109d2618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x1109cf7e0" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x1109cd7a0" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1109d2618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x1109d0108" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1109d2618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x1109d2e68" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1109d2618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1109d08d8" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resend" loc="29:/opt/tinyos-2.x/apps/wustl/upma/interfaces/Resend.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/interfaces/Resend.nc">
        <short>&#10; Resends the last message.</short>
        <long>&#10; Resends the last message.  If possible, this interface should wrap native&#10; hardware support.  Otherwise, it must be emulated using a one-packet buffer.&#10;&#10; @author Greg Hackmann&#10;</long>
      </documentation>
      <function command="" provided="0" name="resend" ref="0x110db59e8" loc="36:/opt/tinyos-2.x/apps/wustl/upma/interfaces/Resend.nc">
        <documentation loc="31:/opt/tinyos-2.x/apps/wustl/upma/interfaces/Resend.nc">
          <short>&#10; Resends the last message.</short>
          <long>&#10; Resends the last message.&#10;&#10; @return whether the operation succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x110acb698" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/sim/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/sim/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x110d047d8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/sim/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/sim/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x110908e90"/>
              <typename><typedef-ref name="tossim_header_t" ref="0x110906178"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110d04530" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/sim/CC2420PacketBody.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x110d022c8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/sim/CC2420PacketBody.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/sim/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x110906df0"/>
              <typename><typedef-ref name="tossim_metadata_t" ref="0x110905e50"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110d02020" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/sim/CC2420PacketBody.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x1109be2e8" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
              <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109ab908" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x1109abc30" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1109be020" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChannelMonitor" loc="38:/opt/tinyos-2.x/apps/wustl/upma/interfaces/ChannelMonitor.nc">
      <documentation loc="35:/opt/tinyos-2.x/apps/wustl/upma/interfaces/ChannelMonitor.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <function command="" provided="0" name="setCheckLength" ref="0x11098f338" loc="65:/opt/tinyos-2.x/apps/wustl/upma/interfaces/ChannelMonitor.nc">
        <documentation loc="60:/opt/tinyos-2.x/apps/wustl/upma/interfaces/ChannelMonitor.nc">
          <short>&#10; Set the length of CCA checks.</short>
          <long>&#10; Set the length of CCA checks.&#10;&#10; @param length the length of CCA checks, in 32 KHz increments&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChannelMonitor"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="length" ref="0x11098f0c8" loc="65:/opt/tinyos-2.x/apps/wustl/upma/interfaces/ChannelMonitor.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="error" ref="0x110990960" loc="58:/opt/tinyos-2.x/apps/wustl/upma/interfaces/ChannelMonitor.nc">
        <documentation loc="55:/opt/tinyos-2.x/apps/wustl/upma/interfaces/ChannelMonitor.nc">
          <short>&#10; signal that checking the channel failed&#10;</short>
        </documentation>
        <interfacedef-ref qname="ChannelMonitor"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="check" ref="0x1109914c0" loc="43:/opt/tinyos-2.x/apps/wustl/upma/interfaces/ChannelMonitor.nc">
        <documentation loc="40:/opt/tinyos-2.x/apps/wustl/upma/interfaces/ChannelMonitor.nc">
          <short>&#10; Check the channel to see if it is free or busy&#10;</short>
        </documentation>
        <interfacedef-ref qname="ChannelMonitor"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="busy" ref="0x110990290" loc="53:/opt/tinyos-2.x/apps/wustl/upma/interfaces/ChannelMonitor.nc">
        <documentation loc="50:/opt/tinyos-2.x/apps/wustl/upma/interfaces/ChannelMonitor.nc">
          <short>&#10; signal that the channel is busy&#10;</short>
        </documentation>
        <interfacedef-ref qname="ChannelMonitor"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="free" ref="0x110991b98" loc="48:/opt/tinyos-2.x/apps/wustl/upma/interfaces/ChannelMonitor.nc">
        <documentation loc="45:/opt/tinyos-2.x/apps/wustl/upma/interfaces/ChannelMonitor.nc">
          <short>&#10; signal that the channel is free&#10;</short>
        </documentation>
        <interfacedef-ref qname="ChannelMonitor"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCheckLength" ref="0x11098fb10" loc="72:/opt/tinyos-2.x/apps/wustl/upma/interfaces/ChannelMonitor.nc">
        <documentation loc="67:/opt/tinyos-2.x/apps/wustl/upma/interfaces/ChannelMonitor.nc">
          <short>&#10; Get the length of CCA checks.</short>
          <long>&#10; Get the length of CCA checks.&#10;&#10; @return the length of CCA checks, in 32 KHz increments&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChannelMonitor"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimComPrintfRead" loc="11:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimComPrintfRead.nc">
      <function command="" provided="0" name="printfRead" ref="0x1113cf020" loc="12:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimComPrintfRead.nc">
        <interfacedef-ref qname="TossimComPrintfRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flow" ref="0x1113d1020" loc="12:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimComPrintfRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
          <variable name="slot" ref="0x1113d1340" loc="12:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimComPrintfRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
          <variable name="source" ref="0x1113d1670" loc="12:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimComPrintfRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
          <variable name="node_id" ref="0x1113d19a8" loc="12:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimComPrintfRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x1113d1ce0" loc="12:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimComPrintfRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimMote" loc="34:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
      <documentation loc="24:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <short>&#10; TOSSIM-specific interface to access a mote's state.</short>
        <long>&#10; TOSSIM-specific interface to access a mote's state. TinyOS programs&#10; should never use this interface.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="setEuid" ref="0x110c50b68" loc="36:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="euid" ref="0x110c508f8" loc="36:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getVariableInfo" ref="0x110c4e9d0" loc="39:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x11011b660"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x110c4e0c8" loc="39:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="ptr" ref="0x110c4e400" loc="39:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110c4e740" loc="39:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x11011b660"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOff" ref="0x110c4c708" loc="41:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x110c4c070" loc="40:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEuid" ref="0x110c50258" loc="35:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTcpMsg" ref="0x110c77020" loc="47:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRadioChannel" ref="0x110c4b108" loc="43:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newRadioChannel" ref="0x110c4ce48" loc="43:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setTcpMsg" ref="0x110c75488" loc="48:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="root" ref="0x110c77668" loc="48:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="flow0" ref="0x110c77948" loc="48:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="flow1" ref="0x110c77c28" loc="48:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="flow2" ref="0x110c76020" loc="48:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="flow3" ref="0x110c76300" loc="48:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="flow4" ref="0x110c765e0" loc="48:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="flow5" ref="0x110c768c0" loc="48:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="flow6" ref="0x110c76ba0" loc="48:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="flow7" ref="0x110c76e80" loc="48:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="flow8" ref="0x110c75188" loc="48:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x110c4f9d8" loc="38:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRadioChannel" ref="0x110c4b838" loc="44:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartTime" ref="0x110c4f328" loc="37:/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x110fdc530" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x110fdc530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x110fdc760" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x110fdc760"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x110fdb020" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x110fdc760"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x110fda070" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x110fdb838" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x110fda760" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x110ada1d8" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x110ada8a0" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x110adb458" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x110ad86f8" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x110adbaf8" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x110ad8020" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x110ade720" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x110aded90" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncSend" loc="29:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
        <short>&#10; Provides packet sending commands in an asynchronous fashion.</short>
        <long>&#10; Provides packet sending commands in an asynchronous fashion.&#10;&#10; @author Greg Hackmann&#10; @see AMSend&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x1109f65b0" loc="40:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
        <documentation loc="31:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
          <short>&#10; Sends a packet over the radio, in split-control fashion.</short>
          <long>&#10; Sends a packet over the radio, in split-control fashion.&#10;&#10; @param 'message_t * ONE msg' the packet to send&#10; @param len the packet's length&#10; @return &#60;tt>SUCCESS&#60;/tt> if the packet was buffered;&#10; &#60;tt>EOFF&#60;/tt> if the radio is off; or &#60;tt>FAIL&#60;/tt> if the request could&#10; not otherwise be completed&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109f6020" loc="40:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1109f6330" loc="40:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x1109f3460" loc="71:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
        <documentation loc="65:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
          <short>&#10; Gets the packet payload.</short>
          <long>&#10; Gets the packet payload.&#10;&#10; @param 'message_t * ONE msg' the packet&#10; @return 'void * COUNT_NOK(len)' the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109f1e30" loc="71:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1109f31a8" loc="71:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x1109f16a0" loc="63:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
        <documentation loc="58:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
          <short>&#10; Gets the maximum packet payload length.</short>
          <long>&#10; Gets the maximum packet payload length.&#10;&#10; @return the maximum packet payload length, in bytes&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x1109f2900" loc="56:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
        <documentation loc="50:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
          <short>&#10; Attempts to cancel a packet transmission.</short>
          <long>&#10; Attempts to cancel a packet transmission.&#10;&#10; @param 'message_t * ONE msg' the packet to cancel&#10; @return whether the cancellation succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109f2690" loc="56:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1109f58f0" loc="48:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
        <documentation loc="41:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
          <short>&#10; The packet sending operation has completed.</short>
          <long>&#10; The packet sending operation has completed.&#10;&#10; @param 'message_t * ONE msg' the packet that has been completely processed&#10; @param error &#60;tt>SUCCESS&#60;/tt> if the packet was successfully&#10; sent over the radio, or &#60;tt>FAIL&#60;/tt> otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109f5348" loc="48:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x1109f5670" loc="48:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x110dea8f0" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x110de9070" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x110de97e0" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x110de8758" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x110de6e70" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x110de5630" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x110de8020" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x110de4290" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x110de4020" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x110dea1d8" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x110de6020" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x110de6738" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x1109d80a8" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109c7e10" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x1109d7290" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109d7020" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x1109d6338" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109d60c8" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncReceive" loc="31:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncReceive.nc">
      <documentation loc="25:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncReceive.nc">
        <short>&#10; Provides packet reception events in an asynchronous fashion.</short>
        <long>&#10; Provides packet reception events in an asynchronous fashion.&#10;&#10; @author Greg Hackmann&#10; @see Receive&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x110d5ea28" loc="41:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncReceive.nc">
        <documentation loc="33:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncReceive.nc">
          <short>&#10; A packet was received over the radio.</short>
          <long>&#10; A packet was received over the radio.  After it is processed,&#10; &#60;tt>updateBuffer&#60;/tt> should be called.&#10;&#10; @param 'message_t * ONE msg' the packet that was received&#10; @param 'void * COUNT(len) payload' the packet's payload&#10; @param len the packet's length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110d5e160" loc="41:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncReceive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x110d5e488" loc="41:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncReceive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110d5e798" loc="41:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncReceive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateBuffer" ref="0x110d5d040" loc="52:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncReceive.nc">
        <documentation loc="43:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncReceive.nc">
          <short>&#10; Provides a new message buffer to the radio stack.</short>
          <long>&#10; Provides a new message buffer to the radio stack.&#10; This should be called (only) after each packet is handled, since&#10; the radio stack may do additional radio-specific event handling&#10; here.&#10;&#10; @param 'message_t * ONE msg' the new message buffer to provide to the radio stack&#10; (possibly the same one passed up from the &#60;tt>receive&#60;/tt> event)&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110d5cda0" loc="52:/opt/tinyos-2.x/apps/wustl/upma/interfaces/AsyncReceive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x110dc94d0" loc="74:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x110dc9ca8" loc="84:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GainRadioModel" loc="39:/opt/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="putOnAirTo" ref="0x111230398" loc="40:/opt/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
            </type-int>
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x1105cc8c0"/></typename>
            </type-int>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x111234c38" loc="40:/opt/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x111231020" loc="41:/opt/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x111231338" loc="42:/opt/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
            </type-int>
          </variable>
          <variable name="endTime" ref="0x1112316b0" loc="43:/opt/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x1105cc8c0"/></typename>
            </type-int>
          </variable>
          <variable name="gain" ref="0x1112319a8" loc="44:/opt/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
          <variable name="reverseGain" ref="0x111231ce0" loc="45:/opt/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
          <variable name="channel_id" ref="0x1112300c8" loc="46:/opt/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x1112735b8" loc="52:/opt/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x111273348" loc="52:/opt/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearChannel" ref="0x11122e360" loc="49:/opt/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClearValue" ref="0x111230c48" loc="48:/opt/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x1112309d8" loc="48:/opt/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="acked" ref="0x11122ec40" loc="51:/opt/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11122e9d0" loc="51:/opt/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x111272020" loc="53:/opt/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x111273c80" loc="53:/opt/tinyos-2.x/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FrameConfiguration" loc="31:/opt/tinyos-2.x/apps/wustl/upma/interfaces/FrameConfiguration.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/interfaces/FrameConfiguration.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1 $&#10; @date $Date: 2007/11/06 23:58:57 $&#10;&#10; This interface will be implemented by the different TDMA protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="setFrameLength" ref="0x110da5020" loc="38:/opt/tinyos-2.x/apps/wustl/upma/interfaces/FrameConfiguration.nc">
        <interfacedef-ref qname="FrameConfiguration"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="numSlots" ref="0x110da7c30" loc="38:/opt/tinyos-2.x/apps/wustl/upma/interfaces/FrameConfiguration.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlotLength" ref="0x110daadf8" loc="32:/opt/tinyos-2.x/apps/wustl/upma/interfaces/FrameConfiguration.nc">
        <interfacedef-ref qname="FrameConfiguration"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotTimeBms" ref="0x110daab88" loc="32:/opt/tinyos-2.x/apps/wustl/upma/interfaces/FrameConfiguration.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlotLength" ref="0x110da7530" loc="33:/opt/tinyos-2.x/apps/wustl/upma/interfaces/FrameConfiguration.nc">
        <interfacedef-ref qname="FrameConfiguration"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getFrameLength" ref="0x110da5720" loc="39:/opt/tinyos-2.x/apps/wustl/upma/interfaces/FrameConfiguration.nc">
        <interfacedef-ref qname="FrameConfiguration"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacketModel" loc="40:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x110ce7920" loc="52:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x110ce7020" loc="52:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x110ce7380" loc="52:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110ce7690" loc="52:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x110ce5d90" loc="79:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Signal that a packet was received.</short>
          <long>&#10; Signal that a packet was received. Note that there is no buffer&#10; swap: a component using this interface must copy out the message&#10; if it needs it.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110ce5b20" loc="79:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x110ce64e8" loc="64:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110ce6278" loc="64:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x110ce5388" loc="71:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110ce6d80" loc="71:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x110ce5108" loc="71:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x110ce37d0" loc="80:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110ce3560" loc="80:/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
      <documentation loc="31:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x1109e0680" loc="166:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
        <documentation loc="153:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x11090a888"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1109e0410" loc="166:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x1109c54f8" loc="77:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
        <documentation loc="69:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x11090ac40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1109c5288" loc="77:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x1109c9a58" loc="57:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
        <documentation loc="52:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x11090ac40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x1109c64f8" loc="67:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
        <documentation loc="59:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x11090ac40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1109c6288" loc="67:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x1109c1c78" loc="110:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
        <documentation loc="94:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x11090ac40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1109c16c0" loc="110:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x1109c19f8" loc="110:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x11090ac40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x1109c4840" loc="92:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
        <documentation loc="79:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x11090ac40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1109c4288" loc="92:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x1109c45c0" loc="92:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x11090ac40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x1109e2290" loc="136:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
        <documentation loc="127:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x11090a4d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1109e2020" loc="136:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x1109e15a0" loc="151:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
        <documentation loc="138:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x11090a4d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1109e1020" loc="151:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x1109e1320" loc="151:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x11090a4d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x1109e3020" loc="125:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
        <documentation loc="112:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1109c2d60" loc="125:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x1109dea50" loc="176:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
        <documentation loc="168:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x11090a888"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1109de4a0" loc="176:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
                <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x1109de7d0" loc="176:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x11090a888"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x1109dc818" loc="184:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
        <documentation loc="178:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x11090a888"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x1109a67d0" loc="74:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1109a5020" loc="84:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x11011ac10" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x1103dbb00" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x1103db360" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlotterControl" loc="30:/opt/tinyos-2.x/apps/wustl/upma/interfaces/SlotterControl.nc">
      <documentation loc="23:/opt/tinyos-2.x/apps/wustl/upma/interfaces/SlotterControl.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Octav Chipara&#10; @version $Revision: 1.1 $&#10; @date $Date: 2007/11/06 23:58:58 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x110dc2910" loc="37:/opt/tinyos-2.x/apps/wustl/upma/interfaces/SlotterControl.nc">
        <interfacedef-ref qname="SlotterControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlot" ref="0x110dc1070" loc="39:/opt/tinyos-2.x/apps/wustl/upma/interfaces/SlotterControl.nc">
        <interfacedef-ref qname="SlotterControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="synchronize" ref="0x110dc55c0" loc="31:/opt/tinyos-2.x/apps/wustl/upma/interfaces/SlotterControl.nc">
        <interfacedef-ref qname="SlotterControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="toSlot" ref="0x110dc5350" loc="31:/opt/tinyos-2.x/apps/wustl/upma/interfaces/SlotterControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSynchornized" ref="0x110dc5cd0" loc="32:/opt/tinyos-2.x/apps/wustl/upma/interfaces/SlotterControl.nc">
        <interfacedef-ref qname="SlotterControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x110dc3438" loc="34:/opt/tinyos-2.x/apps/wustl/upma/interfaces/SlotterControl.nc">
        <interfacedef-ref qname="SlotterControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemaining" ref="0x110dc2290" loc="36:/opt/tinyos-2.x/apps/wustl/upma/interfaces/SlotterControl.nc">
        <interfacedef-ref qname="SlotterControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x110dc3b20" loc="35:/opt/tinyos-2.x/apps/wustl/upma/interfaces/SlotterControl.nc">
        <interfacedef-ref qname="SlotterControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
    <enum loc="31:/Users/wangwenchen/wcps_apps/pure-tdma/sim/BeaconSlotP.nc" ref="0x1111305b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="bnd" loc="9:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x11011dc00" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x11011e0a0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x11011e150" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <struct name="_opaque_pthread_cond_t" loc="65:/usr/include/sys/_types.h" ref="0x110137020" defined="" size="I:48" alignment="I:8">
      <field name="__sig" ref="0x1101375e8" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x110137698" bit-offset="I:64" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <nx_struct name="tossim_metadata" loc="19:/opt/tinyos-2.x/tos/lib/tossim/TossimRadioMsg.h" ref="0x110906df0" defined="" size="I:6" alignment="I:1">
      <field name="strength" ref="0x110905a38" bit-offset="I:0" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x1102c88e8"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x110905ae8" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x110905b98" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
        </type-int>
      </field>
      <field name="time" ref="0x110905c48" bit-offset="I:24" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x1102cdb28"/></typename>
        </type-int>
      </field>
      <field name="destroyable" ref="0x110905cf8" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="gain_entry" loc="48:/opt/tinyos-2.x/tos/lib/tossim/sim_gain.h" ref="0x1107a1da8" defined="" size="I:32" alignment="I:8">
      <field name="mote" ref="0x11079f708" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="gain" ref="0x11079f7b8" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="channel" ref="0x11079f868" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="next" ref="0x11079f918" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:32" alignment="I:8"><struct-ref name="gain_entry" ref="0x1107a1da8"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct loc="102:/usr/include/stdlib.h" ref="0x1103cad68" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x1103c9020" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x1103c90d0" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <attribute name="deputy_scope"  loc="NONE" ref="0x110117720" size="V:" alignment="V:">
    </attribute>
    <struct name="timeval" loc="100:/usr/include/sys/_structs.h" ref="0x1103a4020" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x1103a4690" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_time_t" ref="0x110133dd8"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0x1103a4740" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_suseconds_t" ref="0x110148b68"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="fd_set" loc="184:/usr/include/sys/_structs.h" ref="0x1106ef4b8" defined="" size="I:128" alignment="I:4">
      <field name="fds_bits" ref="0x1106eeca0" bit-offset="I:0" size="I:128">
        <type-array elements="I:32" size="I:128" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__int32_t" ref="0x11012dc30"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sim_gain_noise" loc="3:/opt/tinyos-2.x/tos/lib/tossim/sim_gain.c" ref="0x1107aeb40" defined="" size="I:16" alignment="I:8">
      <field name="mean" ref="0x1107ad0f0" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="range" ref="0x1107ad1a0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct name="sigaction" loc="303:/usr/include/sys/signal.h" ref="0x11039fc28" defined="" size="I:16" alignment="I:8">
      <field name="__sigaction_u" ref="0x11039e468" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="__sigaction_u" ref="0x1103974d0"/></type-tag>
      </field>
      <field name="sa_mask" ref="0x11039e518" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="sigset_t" ref="0x110393da0"/></typename>
        </type-int>
      </field>
      <field name="sa_flags" ref="0x11039e5c8" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="nonnull" loc="8:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x11011d1e0" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x11011d628" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="_opaque_pthread_t" loc="72:/usr/include/sys/_types.h" ref="0x11013c0b8" defined="" size="I:1184" alignment="I:8">
      <field name="__sig" ref="0x11013c9e0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__cleanup_stack" ref="0x11013ca90" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_pthread_handler_rec" ref="0x1101351f8"/></type-tag>
        </type-pointer>
      </field>
      <field name="__opaque" ref="0x11013cb40" bit-offset="I:128" size="I:1168">
        <type-array elements="I:1168" size="I:1168" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <attribute name="number"  loc="NONE" ref="0x110114db0" size="V:" alignment="V:">
    </attribute>
    <struct loc="29:/opt/tinyos-2.x/tos/lib/timer/Timer.h" ref="0x1109924b0" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x1109926b0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="sigstack" loc="384:/usr/include/sys/signal.h" ref="0x11039b078" defined="" size="I:16" alignment="I:8">
      <field name="ss_sp" ref="0x11039b5d0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="ss_onstack" ref="0x11039b680" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="141:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x110ad2a10" defined="" size="I:1" alignment="I:1">
      <field name="adps" ref="0x110ad2c10" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </field>
      <field name="adie" ref="0x110ad2cc0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </field>
      <field name="adif" ref="0x110ad2d70" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </field>
      <field name="adfr" ref="0x110ad2e20" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </field>
      <field name="adsc" ref="0x110ad2ed0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </field>
      <field name="aden" ref="0x110ad1020" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="accessx_descriptor" loc="138:/usr/include/sys/unistd.h" ref="0x1113ce350" defined="" size="I:16" alignment="I:4">
      <field name="ad_name_offset" ref="0x1113ceb78" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="ad_flags" ref="0x1113cec28" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="ad_pad" ref="0x1113cecd8" bit-offset="I:64" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="40:/opt/tinyos-2.x/tos/types/TinyError.h" ref="0x110352b70" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="node" loc="51:/opt/tinyos-2.x/tos/lib/tossim/heap.c" ref="0x11067f440" defined="" size="I:16" alignment="I:8">
      <field name="data" ref="0x11067f9f8" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="key" ref="0x11067faa8" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <union loc="76:/usr/include/i386/_types.h" ref="0x11012fb98" defined="" size="I:128" alignment="I:8">
      <field name="__mbstate8" ref="0x11012fd98" bit-offset="I:0" size="I:128">
        <type-array elements="I:128" size="I:128" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_mbstateL" ref="0x11012fe48" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct name="__darwin_x86_debug_state32" loc="422:/usr/include/mach/i386/_structs.h" ref="0x110364c40" defined="" size="I:32" alignment="I:4">
      <field name="__dr0" ref="0x110363ba8" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr1" ref="0x110363c58" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr2" ref="0x110363d08" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr3" ref="0x110363db8" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr4" ref="0x110363e68" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr5" ref="0x110363f18" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr6" ref="0x110362020" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr7" ref="0x1103620d0" bit-offset="I:224" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <nx_struct name="serial_packet" loc="120:/opt/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x11091edd0" defined="" size="I:7" alignment="I:1">
      <field name="header" ref="0x11091c4c8" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x11091fa38"/>
          <typename><typedef-ref name="serial_header_t" ref="0x11091ea90"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x11091c578" bit-offset="I:56" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <attribute name="integer"  loc="NONE" ref="0x110114b10" size="V:" alignment="V:">
    </attribute>
    <attribute name="exactlyonce" loc="91:/opt/tinyos-2.x/tos/lib/tossim/tos.h" ref="0x110602b00" defined="" size="I:0" alignment="I:1">
    </attribute>
    <enum loc="76:/opt/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x110903580" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union name="message_footer" loc="46:/opt/tinyos-2.x/tos/lib/tossim/platform_message.h" ref="0x11091a148" defined="" size="I:2" alignment="I:1">
      <field name="tossim" ref="0x11091a618" bit-offset="I:0" size="I:2">
        <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x1109064b8"/>
          <typename><typedef-ref name="tossim_footer_t" ref="0x110906aa0"/></typename>
        </type-tag>
      </field>
    </union>
    <union name="message_metadata" loc="50:/opt/tinyos-2.x/tos/lib/tossim/platform_message.h" ref="0x11091aad0" defined="" size="I:6" alignment="I:1">
      <field name="tossim" ref="0x110918020" bit-offset="I:0" size="I:6">
        <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x110906df0"/>
          <typename><typedef-ref name="tossim_metadata_t" ref="0x110905e50"/></typename>
        </type-tag>
      </field>
    </union>
    <attribute name="combine"  loc="NONE" ref="0x110117078" size="V:" alignment="V:">
      <field name="fn" ref="0x110117278" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <struct name="__darwin_mcontext64" loc="86:/usr/include/i386/_structs.h" ref="0x11038ea48" defined="" size="I:712" alignment="I:8">
      <field name="__es" ref="0x11038d538" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__darwin_x86_exception_state64" ref="0x1103870d8"/></type-tag>
      </field>
      <field name="__ss" ref="0x11038d5e8" bit-offset="I:128" size="I:168">
        <type-tag size="I:168" alignment="I:8"><struct-ref name="__darwin_x86_thread_state64" ref="0x1103623c8"/></type-tag>
      </field>
      <field name="__fs" ref="0x11038d698" bit-offset="I:1472" size="I:524">
        <type-tag size="I:524" alignment="I:4"><struct-ref name="__darwin_x86_float_state64" ref="0x110369e50"/></type-tag>
      </field>
    </struct>
    <union name="__sigaction_u" loc="286:/usr/include/sys/signal.h" ref="0x1103974d0" defined="" size="I:8" alignment="I:8">
      <field name="__sa_handler" ref="0x110396a58" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__sa_sigaction" ref="0x110396b28" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:104" alignment="I:8"><struct-ref name="__siginfo" ref="0x11039a490"/></type-tag>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </union>
    <struct name="__darwin_fp_status" loc="147:/usr/include/mach/i386/_structs.h" ref="0x110344020" defined="" size="I:2" alignment="I:2">
      <field name="__invalid" ref="0x110343d10" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__denorm" ref="0x110343dc0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__zdiv" ref="0x110343e70" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__ovrfl" ref="0x110343f20" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__undfl" ref="0x110342020" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__precis" ref="0x1103420d0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__stkflt" ref="0x110342180" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__errsumm" ref="0x110342230" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c0" ref="0x1103422e0" bit-offset="I:8" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c1" ref="0x110342390" bit-offset="I:9" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c2" ref="0x110342440" bit-offset="I:10" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__tos" ref="0x1103424f0" bit-offset="I:11" bit-size="I:3">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c3" ref="0x1103425a0" bit-offset="I:14" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__busy" ref="0x110342750" bit-offset="I:15" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
    </struct>
    <struct name="__darwin_sigaltstack" loc="75:/usr/include/sys/_structs.h" ref="0x11038bce0" defined="" size="I:24" alignment="I:8">
      <field name="ss_sp" ref="0x11038a488" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="ss_size" ref="0x11038a538" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_size_t" ref="0x110131e40"/></typename>
        </type-int>
      </field>
      <field name="ss_flags" ref="0x11038a5e8" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="39:/opt/tinyos-2.x/tos/lib/tossim/sim_log.c" ref="0x11060d780" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="14:/opt/tinyos-2.x/tos/types/AM.h" ref="0x11090ae80" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="serial_header" loc="112:/opt/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x11091fa38" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x11091e678" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x11090a148"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x11091e728" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x11090a148"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x11091e7d8" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x11091e888" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x11090bcd0"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x11091e938" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x11090b7e0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="31:/opt/tinyos-2.x/tos/lib/timer/Timer.h" ref="0x11098b498" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x11098b698" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union name="message_header" loc="41:/opt/tinyos-2.x/tos/lib/tossim/platform_message.h" ref="0x11091b4c0" defined="" size="I:8" alignment="I:1">
      <field name="tossim" ref="0x11091bb98" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x110908e90"/>
          <typename><typedef-ref name="tossim_header_t" ref="0x110906178"/></typename>
        </type-tag>
      </field>
      <field name="serial" ref="0x11091bc48" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x11091fa38"/>
          <typename><typedef-ref name="serial_header_t" ref="0x11091ea90"/></typename>
        </type-tag>
      </field>
    </union>
    <struct name="lqi_dist" loc="4:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h" ref="0x111188df0" defined="" size="I:16" alignment="I:8">
      <field name="lqi" ref="0x1111843a0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </field>
      <field name="cdf" ref="0x111184450" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct name="timespec" loc="88:/usr/include/sys/_structs.h" ref="0x1106f1bd8" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x1106ef1a8" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_time_t" ref="0x110133dd8"/></typename>
        </type-int>
      </field>
      <field name="tv_nsec" ref="0x1106ef258" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <attribute name="count" loc="11:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x1101202b0" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x1101205d0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="bnd_nok" loc="10:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x11011e750" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x11011eb98" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x11011ec48" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <struct name="timezone" loc="144:/usr/include/sys/time.h" ref="0x1106e8888" defined="" size="I:8" alignment="I:4">
      <field name="tz_minuteswest" ref="0x1106e8e00" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tz_dsttime" ref="0x1106e8eb0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union name="wait" loc="201:/usr/include/sys/wait.h" ref="0x1103b37d0" defined="" size="I:4" alignment="I:4">
      <field name="w_status" ref="0x1103bc728" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_T" ref="0x1103bc7d8" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x1103be408"/></type-tag>
      </field>
      <field name="w_S" ref="0x1103bc888" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x1103bc150"/></type-tag>
      </field>
    </union>
    <struct name="__darwin_ucontext" loc="128:/usr/include/sys/_structs.h" ref="0x11038a860" defined="" size="I:56" alignment="I:8">
      <field name="uc_onstack" ref="0x110389930" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="uc_sigmask" ref="0x1103899e0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_sigset_t" ref="0x110148738"/></typename>
        </type-int>
      </field>
      <field name="uc_stack" ref="0x110389a90" bit-offset="I:64" size="I:24">
        <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_sigaltstack" ref="0x11038bce0"/></type-tag>
      </field>
      <field name="uc_link" ref="0x110389b40" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:56" alignment="I:8"><struct-ref name="__darwin_ucontext" ref="0x11038a860"/></type-tag>
        </type-pointer>
      </field>
      <field name="uc_mcsize" ref="0x110389bf0" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_size_t" ref="0x110131e40"/></typename>
        </type-int>
      </field>
      <field name="uc_mcontext" ref="0x110389ca0" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:712" alignment="I:8"><struct-ref name="__darwin_mcontext64" ref="0x11038ea48"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="_opaque_pthread_once_t" loc="69:/usr/include/sys/_types.h" ref="0x11013a540" defined="" size="I:16" alignment="I:8">
      <field name="__sig" ref="0x11013ab08" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x11013abb8" bit-offset="I:64" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sim_event" loc="45:/opt/tinyos-2.x/tos/lib/tossim/sim_event_queue.h" ref="0x1105d4e88" defined="" size="I:48" alignment="I:8">
      <field name="time" ref="0x1105d1d58" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x1105cc8c0"/></typename>
        </type-int>
      </field>
      <field name="mote" ref="0x1105d1e08" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="force" ref="0x1105d1eb8" bit-offset="I:128" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
        </type-int>
      </field>
      <field name="cancelled" ref="0x1105e4020" bit-offset="I:136" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x1105e40d0" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="handle" ref="0x1105e4180" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1105d4e88"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x1105d2288"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="cleanup" ref="0x1105e4250" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1105d4e88"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x1105d2288"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </struct>
    <struct name="__siginfo" loc="194:/usr/include/sys/signal.h" ref="0x11039a490" defined="" size="I:104" alignment="I:8">
      <field name="si_signo" ref="0x1103998d8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_errno" ref="0x110399988" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_code" ref="0x110399a38" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_pid" ref="0x110399ae8" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="pid_t" ref="0x110333020"/></typename>
        </type-int>
      </field>
      <field name="si_uid" ref="0x110399b98" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uid_t" ref="0x1103921c8"/></typename>
        </type-int>
      </field>
      <field name="si_status" ref="0x110399c48" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_addr" ref="0x110399cf8" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="si_value" ref="0x110399da8" bit-offset="I:256" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="sigval" ref="0x110392488"/></type-tag>
      </field>
      <field name="si_band" ref="0x110399e58" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__pad" ref="0x110399f08" bit-offset="I:384" size="I:56">
        <type-array elements="I:7" size="I:56" alignment="I:8">
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="43:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h" ref="0x110722bc0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="tossim_footer" loc="15:/opt/tinyos-2.x/tos/lib/tossim/TossimRadioMsg.h" ref="0x1109064b8" defined="" size="I:2" alignment="I:1">
      <field name="crc" ref="0x110906948" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x1102d82f8"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="sim_packet" loc="51:/opt/tinyos-2.x/tos/lib/tossim/sim_packet.h" ref="0x1108fac98" defined="" size="I:0" alignment="I:1">
    </struct>
    <enum loc="120:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h" ref="0x110abb078" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__darwin_mcontext_avx64" loc="94:/usr/include/i386/_structs.h" ref="0x11038d948" defined="" size="I:1032" alignment="I:8">
      <field name="__es" ref="0x11038b408" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__darwin_x86_exception_state64" ref="0x1103870d8"/></type-tag>
      </field>
      <field name="__ss" ref="0x11038b4b8" bit-offset="I:128" size="I:168">
        <type-tag size="I:168" alignment="I:8"><struct-ref name="__darwin_x86_thread_state64" ref="0x1103623c8"/></type-tag>
      </field>
      <field name="__fs" ref="0x11038b568" bit-offset="I:1472" size="I:844">
        <type-tag size="I:844" alignment="I:4"><struct-ref name="__darwin_x86_avx_state64" ref="0x110371860"/></type-tag>
      </field>
    </struct>
    <nx_struct name="serial_metadata" loc="125:/opt/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x11091caf8" defined="" size="I:1" alignment="I:1">
      <field name="ack" ref="0x11091b020" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="__darwin_mcontext32" loc="48:/usr/include/i386/_structs.h" ref="0x110384c48" defined="" size="I:600" alignment="I:4">
      <field name="__es" ref="0x110383730" bit-offset="I:0" size="I:12">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="__darwin_i386_exception_state" ref="0x11035dd60"/></type-tag>
      </field>
      <field name="__ss" ref="0x1103837e0" bit-offset="I:96" size="I:64">
        <type-tag size="I:64" alignment="I:4"><struct-ref name="__darwin_i386_thread_state" ref="0x110340020"/></type-tag>
      </field>
      <field name="__fs" ref="0x110383890" bit-offset="I:608" size="I:524">
        <type-tag size="I:524" alignment="I:4"><struct-ref name="__darwin_i386_float_state" ref="0x1103491d8"/></type-tag>
      </field>
    </struct>
    <attribute name="atmostonce" loc="89:/opt/tinyos-2.x/tos/lib/tossim/tos.h" ref="0x110602430" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct name="sigvec" loc="365:/usr/include/sys/signal.h" ref="0x11039d0f8" defined="" size="I:16" alignment="I:8">
      <field name="sv_handler" ref="0x11039dc78" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="sv_mask" ref="0x11039dd48" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sv_flags" ref="0x11039ddf8" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="26:/opt/tinyos-2.x/tos/types/AM.h" ref="0x110908498" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_opaque_pthread_rwlockattr_t" loc="71:/usr/include/sys/_types.h" ref="0x11013b7c0" defined="" size="I:24" alignment="I:8">
      <field name="__sig" ref="0x11013bd88" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x11013be38" bit-offset="I:64" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="5:TestNetworkC.h" ref="0x1101196c8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="hwevent"  loc="NONE" ref="0x110116850" size="V:" alignment="V:">
    </attribute>
    <struct name="hashtable" ref="0x110601678" size="V:" alignment="V:">
    </struct>
    <struct loc="206:/usr/include/sys/wait.h" ref="0x1103be408" defined="" size="I:4" alignment="I:4">
      <field name="w_Termsig" ref="0x1103be608" bit-offset="I:0" bit-size="I:7">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Coredump" ref="0x1103be6b8" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Retcode" ref="0x1103be768" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Filler" ref="0x1103be818" bit-offset="I:16" bit-size="I:16">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="55:/opt/tinyos-2.x/tos/lib/tossim/sim_log.c" ref="0x11060a980" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="heap" loc="50:/opt/tinyos-2.x/tos/lib/tossim/heap.h" ref="0x1106715d0" defined="" size="I:24" alignment="I:8">
      <field name="size" ref="0x110671cd8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="data" ref="0x110671d88" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="private_size" ref="0x110671e38" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="safe"  loc="NONE" ref="0x1101179c0" size="V:" alignment="V:">
    </attribute>
    <struct name="__darwin_i386_thread_state" loc="43:/usr/include/mach/i386/_structs.h" ref="0x110340020" defined="" size="I:64" alignment="I:4">
      <field name="__eax" ref="0x11033fc68" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ebx" ref="0x11033fd18" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ecx" ref="0x11033fdc8" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__edx" ref="0x11033fe78" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__edi" ref="0x11033ff28" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__esi" ref="0x11033e020" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ebp" ref="0x11033e0d0" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__esp" ref="0x11033e180" bit-offset="I:224" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ss" ref="0x11033e230" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__eflags" ref="0x11033e2e0" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__eip" ref="0x11033e390" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__cs" ref="0x11033e440" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ds" ref="0x11033e4f0" bit-offset="I:384" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__es" ref="0x11033e6a0" bit-offset="I:416" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__fs" ref="0x11033e750" bit-offset="I:448" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__gs" ref="0x11033e800" bit-offset="I:480" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="__darwin_i386_avx_state" loc="269:/usr/include/mach/i386/_structs.h" ref="0x110353020" defined="" size="I:716" alignment="I:4">
      <field name="__fpu_reserved" ref="0x110356ae8" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
      <field name="__fpu_fcw" ref="0x110356b98" bit-offset="I:64" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x11033eaa8"/></type-tag>
      </field>
      <field name="__fpu_fsw" ref="0x110356c48" bit-offset="I:80" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x110344020"/></type-tag>
      </field>
      <field name="__fpu_ftw" ref="0x110356cf8" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x11012d1d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv1" ref="0x110356da8" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x11012d1d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_fop" ref="0x110356e58" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ip" ref="0x110356f08" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_cs" ref="0x11035f020" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv2" ref="0x11035f0d0" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_dp" ref="0x11035f180" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ds" ref="0x11035f230" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv3" ref="0x11035f2e0" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsr" ref="0x11035f390" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsrmask" ref="0x11035f540" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_stmm0" ref="0x11035f5f0" bit-offset="I:320" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm1" ref="0x11035f6a0" bit-offset="I:448" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm2" ref="0x11035f750" bit-offset="I:576" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm3" ref="0x11035f800" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm4" ref="0x11035f8b0" bit-offset="I:832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm5" ref="0x11035f960" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm6" ref="0x11035fa10" bit-offset="I:1088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm7" ref="0x11035fac0" bit-offset="I:1216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_xmm0" ref="0x11035fb70" bit-offset="I:1344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm1" ref="0x11035fc20" bit-offset="I:1472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm2" ref="0x11035fcd0" bit-offset="I:1600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm3" ref="0x11035d020" bit-offset="I:1728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm4" ref="0x11035d0d0" bit-offset="I:1856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm5" ref="0x11035d180" bit-offset="I:1984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm6" ref="0x11035d230" bit-offset="I:2112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm7" ref="0x11035d2e0" bit-offset="I:2240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_rsrv4" ref="0x11035d390" bit-offset="I:2368" size="I:224">
        <type-array elements="I:224" size="I:224" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_reserved1" ref="0x11035d440" bit-offset="I:4160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__avx_reserved1" ref="0x11035d4f0" bit-offset="I:4192" size="I:64">
        <type-array elements="I:64" size="I:64" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_ymmh0" ref="0x11035d5a0" bit-offset="I:4704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh1" ref="0x11035d650" bit-offset="I:4832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh2" ref="0x11035d700" bit-offset="I:4960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh3" ref="0x11035d7b0" bit-offset="I:5088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh4" ref="0x11035d860" bit-offset="I:5216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh5" ref="0x11035d910" bit-offset="I:5344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh6" ref="0x11035d9c0" bit-offset="I:5472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh7" ref="0x11035da70" bit-offset="I:5600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
    </struct>
    <struct name="__darwin_x86_float_state64" loc="509:/usr/include/mach/i386/_structs.h" ref="0x110369e50" defined="" size="I:524" alignment="I:4">
      <field name="__fpu_reserved" ref="0x11036b670" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
      <field name="__fpu_fcw" ref="0x11036b720" bit-offset="I:64" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x11033eaa8"/></type-tag>
      </field>
      <field name="__fpu_fsw" ref="0x11036b7d0" bit-offset="I:80" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x110344020"/></type-tag>
      </field>
      <field name="__fpu_ftw" ref="0x11036b880" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x11012d1d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv1" ref="0x11036b930" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x11012d1d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_fop" ref="0x11036b9e0" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ip" ref="0x11036ba90" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_cs" ref="0x11036bb40" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv2" ref="0x11036bbf0" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_dp" ref="0x11036bca0" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ds" ref="0x11036bd50" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv3" ref="0x11036be00" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsr" ref="0x11036beb0" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsrmask" ref="0x110373120" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_stmm0" ref="0x1103731d0" bit-offset="I:320" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm1" ref="0x110373280" bit-offset="I:448" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm2" ref="0x110373330" bit-offset="I:576" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm3" ref="0x1103733e0" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm4" ref="0x110373490" bit-offset="I:832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm5" ref="0x110373540" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm6" ref="0x1103735f0" bit-offset="I:1088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm7" ref="0x1103736a0" bit-offset="I:1216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_xmm0" ref="0x110373750" bit-offset="I:1344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm1" ref="0x110373800" bit-offset="I:1472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm2" ref="0x1103738b0" bit-offset="I:1600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm3" ref="0x110373b60" bit-offset="I:1728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm4" ref="0x110373c10" bit-offset="I:1856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm5" ref="0x110373cc0" bit-offset="I:1984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm6" ref="0x110373d70" bit-offset="I:2112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm7" ref="0x110373e20" bit-offset="I:2240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm8" ref="0x110373ed0" bit-offset="I:2368" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm9" ref="0x110371020" bit-offset="I:2496" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm10" ref="0x1103710d0" bit-offset="I:2624" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm11" ref="0x110371180" bit-offset="I:2752" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm12" ref="0x110371230" bit-offset="I:2880" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm13" ref="0x1103712e0" bit-offset="I:3008" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm14" ref="0x110371390" bit-offset="I:3136" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm15" ref="0x110371440" bit-offset="I:3264" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_rsrv4" ref="0x1103714f0" bit-offset="I:3392" size="I:96">
        <type-array elements="I:96" size="I:96" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_reserved1" ref="0x1103715a0" bit-offset="I:4160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="__darwin_x86_exception_state64" loc="751:/usr/include/mach/i386/_structs.h" ref="0x1103870d8" defined="" size="I:16" alignment="I:8">
      <field name="__trapno" ref="0x110387aa0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__cpu" ref="0x110387b50" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__err" ref="0x110387c00" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
      <field name="__faultvaddr" ref="0x110387cb0" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="30:/opt/tinyos-2.x/tos/lib/timer/Timer.h" ref="0x110992cc0" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x110992ec0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="tm" loc="90:/usr/include/time.h" ref="0x1106fec10" defined="" size="I:56" alignment="I:8">
      <field name="tm_sec" ref="0x1106fcee0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_min" ref="0x1106fb020" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_hour" ref="0x1106fb0d0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mday" ref="0x1106fb180" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mon" ref="0x1106fb230" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_year" ref="0x1106fb2e0" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_wday" ref="0x1106fb390" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_yday" ref="0x1106fb440" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_isdst" ref="0x1106fb4f0" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_gmtoff" ref="0x1106fb5a0" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="tm_zone" ref="0x1106fb650" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </struct>
    <struct name="_opaque_pthread_attr_t" loc="64:/usr/include/sys/_types.h" ref="0x110136428" defined="" size="I:64" alignment="I:8">
      <field name="__sig" ref="0x110136bf0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x110136ca0" bit-offset="I:64" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sim_log_output" loc="43:/opt/tinyos-2.x/tos/lib/tossim/sim_log.c" ref="0x11060de30" defined="" size="I:16" alignment="I:8">
      <field name="num" ref="0x11060b498" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="files" ref="0x11060b548" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x110555ec0"/>
              <typename><typedef-ref name="FILE" ref="0x11055fae8"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <enum loc="95:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x110ab0758" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="radio_stats" loc="98:/opt/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x1109215a0" defined="" size="I:18" alignment="I:2">
      <field name="version" ref="0x110920e40" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x110920ef0" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x11091f020" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </field>
      <field name="platform" ref="0x11091f0d0" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </field>
      <field name="MTU" ref="0x11091f180" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
        </type-int>
      </field>
      <field name="radio_crc_fail" ref="0x11091f230" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
        </type-int>
      </field>
      <field name="radio_queue_drops" ref="0x11091f2e0" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
        </type-int>
      </field>
      <field name="serial_crc_fail" ref="0x11091f390" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
        </type-int>
      </field>
      <field name="serial_tx_fail" ref="0x11091f440" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
        </type-int>
      </field>
      <field name="serial_short_packets" ref="0x11091f4f0" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
        </type-int>
      </field>
      <field name="serial_proto_drops" ref="0x11091f5a0" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="one_nok" loc="14:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x110121e50" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x1101221c8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="dmemset" loc="15:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x1101227c8" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x110122c50" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x110122d00" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x110122db0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__darwin_mcontext_avx32" loc="56:/usr/include/i386/_structs.h" ref="0x110383b40" defined="" size="I:792" alignment="I:4">
      <field name="__es" ref="0x11038e660" bit-offset="I:0" size="I:12">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="__darwin_i386_exception_state" ref="0x11035dd60"/></type-tag>
      </field>
      <field name="__ss" ref="0x11038e710" bit-offset="I:96" size="I:64">
        <type-tag size="I:64" alignment="I:4"><struct-ref name="__darwin_i386_thread_state" ref="0x110340020"/></type-tag>
      </field>
      <field name="__fs" ref="0x11038e7c0" bit-offset="I:608" size="I:716">
        <type-tag size="I:716" alignment="I:4"><struct-ref name="__darwin_i386_avx_state" ref="0x110353020"/></type-tag>
      </field>
    </struct>
    <struct name="__sbuf" loc="96:/usr/include/stdio.h" ref="0x1105553c8" defined="" size="I:16" alignment="I:8">
      <field name="_base" ref="0x110555928" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_size" ref="0x1105559d8" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="atleastonce" loc="90:/opt/tinyos-2.x/tos/lib/tossim/tos.h" ref="0x110602798" defined="" size="I:0" alignment="I:1">
    </attribute>
    <enum loc="123:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x110aadcb8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="fssearchblock" ref="0x11146a608" size="V:" alignment="V:">
    </struct>
    <struct name="itimerval" loc="94:/usr/include/sys/time.h" ref="0x1106eaed0" defined="" size="I:32" alignment="I:8">
      <field name="it_interval" ref="0x1106e8598" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x1103a4020"/></type-tag>
      </field>
      <field name="it_value" ref="0x1106e8648" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x1103a4020"/></type-tag>
      </field>
    </struct>
    <struct name="__sFILEX" ref="0x110555bf8" size="V:" alignment="V:">
    </struct>
    <nx_struct name="TestNetworkMsg" loc="7:TestNetwork.h" ref="0x11099bb00" defined="" size="I:120" alignment="I:1">
      <field name="source" ref="0x1109976c0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
        </type-int>
      </field>
      <field name="parents" ref="0x110997770" bit-offset="I:8" size="I:8">
        <type-array elements="I:4" size="I:8" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
            <typename><typedef-ref name="nx_am_addr_t" ref="0x11090a148"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="totalParents" ref="0x110997820" bit-offset="I:72" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
        </type-int>
      </field>
      <field name="children" ref="0x1109978d0" bit-offset="I:80" size="I:20">
        <type-array elements="I:10" size="I:20" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
            <typename><typedef-ref name="nx_am_addr_t" ref="0x11090a148"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="totalChildren" ref="0x110997980" bit-offset="I:240" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
        </type-int>
      </field>
      <field name="siblings" ref="0x110997a30" bit-offset="I:248" size="I:20">
        <type-array elements="I:10" size="I:20" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
            <typename><typedef-ref name="nx_am_addr_t" ref="0x11090a148"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="totalSiblings" ref="0x110997ae0" bit-offset="I:408" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
        </type-int>
      </field>
      <field name="i_am_primary" ref="0x110997b90" bit-offset="I:416" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
        </type-int>
      </field>
      <field name="message_type" ref="0x110997c40" bit-offset="I:424" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
        </type-int>
      </field>
      <field name="self_data1" ref="0x110997cf0" bit-offset="I:432" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
        </type-int>
      </field>
      <field name="self_data2" ref="0x110997da0" bit-offset="I:440" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
        </type-int>
      </field>
      <field name="merged_data" ref="0x110997e50" bit-offset="I:448" size="I:19">
        <type-array elements="I:19" size="I:19" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
          </type-int>
        </type-array>
        <attribute-value>
          <attribute-ref name="one" ref="0x110121508"/>
          <value-structured>
            <type-tag size="I:4" alignment="I:4"><attribute-ref name="one" ref="0x110121508"/></type-tag>
          </value-structured>
        </attribute-value>
      </field>
      <field name="merged_index" ref="0x110995020" bit-offset="I:600" size="I:19">
        <type-array elements="I:19" size="I:19" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
          </type-int>
        </type-array>
        <attribute-value>
          <attribute-ref name="one" ref="0x110121508"/>
          <value-structured>
            <type-tag size="I:4" alignment="I:4"><attribute-ref name="one" ref="0x110121508"/></type-tag>
          </value-structured>
        </attribute-value>
      </field>
      <field name="childrenReceive" ref="0x110995230" bit-offset="I:752" size="I:10">
        <type-array elements="I:10" size="I:10" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="childrenHandle" ref="0x1109952e0" bit-offset="I:832" size="I:10">
        <type-array elements="I:10" size="I:10" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="curr_num" ref="0x110995390" bit-offset="I:912" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
        </type-int>
      </field>
      <field name="hopcount" ref="0x110995440" bit-offset="I:920" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
        </type-int>
      </field>
      <field name="sendCount" ref="0x1109954f0" bit-offset="I:928" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x1102cdb28"/></typename>
        </type-int>
      </field>
      <field name="sendSuccessCount" ref="0x1109955a0" bit-offset="I:944" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x1102cdb28"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="111:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x110aae950" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="81:/usr/include/runetype.h" ref="0x110519460" defined="" size="I:24" alignment="I:8">
      <field name="__min" ref="0x110519660" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x110132ad8"/></typename>
        </type-int>
      </field>
      <field name="__max" ref="0x110519710" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x110132ad8"/></typename>
        </type-int>
      </field>
      <field name="__map" ref="0x1105197c0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x110132ad8"/></typename>
        </type-int>
      </field>
      <field name="__types" ref="0x110519870" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <struct name="__sigaction" loc="293:/usr/include/sys/signal.h" ref="0x110396da0" defined="" size="I:24" alignment="I:8">
      <field name="__sigaction_u" ref="0x11039f790" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="__sigaction_u" ref="0x1103974d0"/></type-tag>
      </field>
      <field name="sa_tramp" ref="0x11039f840" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:104" alignment="I:8"><struct-ref name="__siginfo" ref="0x11039a490"/>
                  <typename><typedef-ref name="siginfo_t" ref="0x110397088"/></typename>
                </type-tag>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="sa_mask" ref="0x11039f950" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="sigset_t" ref="0x110393da0"/></typename>
        </type-int>
      </field>
      <field name="sa_flags" ref="0x11039fa00" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="count_nok" loc="12:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x110120be8" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x110120f08" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__darwin_mmst_reg" loc="191:/usr/include/mach/i386/_structs.h" ref="0x110342ed0" defined="" size="I:16" alignment="I:1">
      <field name="__mmst_reg" ref="0x11034a688" bit-offset="I:0" size="I:10">
        <type-array elements="I:10" size="I:10" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__mmst_rsrv" ref="0x11034a738" bit-offset="I:80" size="I:6">
        <type-array elements="I:6" size="I:6" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sigevent" loc="185:/usr/include/sys/signal.h" ref="0x110392cd0" defined="" size="I:32" alignment="I:8">
      <field name="sigev_notify" ref="0x110390f20" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sigev_signo" ref="0x11039a020" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sigev_value" ref="0x11039a0d0" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="sigval" ref="0x110392488"/></type-tag>
      </field>
      <field name="sigev_notify_function" ref="0x11039a180" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-tag size="I:8" alignment="I:8"><union-ref name="sigval" ref="0x110392488"/></type-tag>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="sigev_notify_attributes" ref="0x11039a250" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_attr_t" ref="0x110136428"/>
            <typename><typedef-ref name="pthread_attr_t" ref="0x110393998"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct loc="93:/usr/include/runetype.h" ref="0x110518c70" defined="" size="I:20" alignment="I:4">
      <field name="__name" ref="0x110518e70" bit-offset="I:0" size="I:14">
        <type-array elements="I:14" size="I:14" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__mask" ref="0x110518f20" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="clockinfo" loc="187:/usr/include/sys/time.h" ref="0x1106e7138" defined="" size="I:20" alignment="I:4">
      <field name="hz" ref="0x1106fe280" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tick" ref="0x1106fe330" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tickadj" ref="0x1106fe3e0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="stathz" ref="0x1106fe490" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="profhz" ref="0x1106fe540" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="one" loc="13:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x110121508" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x110121850" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="79:/usr/include/sys/wait.h" ref="0x110334210" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="spontaneous"  loc="NONE" ref="0x110116da0" size="V:" alignment="V:">
    </attribute>
    <struct loc="241:/usr/include/inttypes.h" ref="0x110158138" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x110158338" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="intmax_t" ref="0x1101543d0"/></typename>
        </type-int>
      </field>
      <field name="rem" ref="0x1101583e8" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="intmax_t" ref="0x1101543d0"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x110ab9988" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__darwin_x86_debug_state64" loc="771:/usr/include/mach/i386/_structs.h" ref="0x110385020" defined="" size="I:64" alignment="I:8">
      <field name="__dr0" ref="0x1103844f0" bit-offset="I:0" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__dr1" ref="0x1103845a0" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__dr2" ref="0x110384650" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__dr3" ref="0x110384700" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__dr4" ref="0x1103847b0" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__dr5" ref="0x110384860" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__dr6" ref="0x110384910" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__dr7" ref="0x1103849c0" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="snr_lqi" loc="9:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h" ref="0x111184968" defined="" size="I:24" alignment="I:8">
      <field name="snr" ref="0x111183150" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="numLqi" ref="0x111183200" bit-offset="I:64" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x1111832b0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
            <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="83:/opt/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x110923020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct ref="0x1101124a0" size="V:" alignment="V:">
    </struct>
    <enum loc="91:/opt/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x1109222a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__darwin_fp_control" loc="89:/usr/include/mach/i386/_structs.h" ref="0x11033eaa8" defined="" size="I:2" alignment="I:2">
      <field name="__invalid" ref="0x1103450d8" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__denorm" ref="0x110345188" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__zdiv" ref="0x110345238" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__ovrfl" ref="0x1103452e8" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__undfl" ref="0x110345398" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__precis" ref="0x110345448" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__pc" ref="0x110345598" bit-offset="I:8" bit-size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__rc" ref="0x110345648" bit-offset="I:10" bit-size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
    </struct>
    <attribute name="unsafe"  loc="NONE" ref="0x110117c60" size="V:" alignment="V:">
    </attribute>
    <struct name="__darwin_x86_avx_state64" loc="560:/usr/include/mach/i386/_structs.h" ref="0x110371860" defined="" size="I:844" alignment="I:4">
      <field name="__fpu_reserved" ref="0x11037bee8" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
      <field name="__fpu_fcw" ref="0x110379020" bit-offset="I:64" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x11033eaa8"/></type-tag>
      </field>
      <field name="__fpu_fsw" ref="0x1103790d0" bit-offset="I:80" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x110344020"/></type-tag>
      </field>
      <field name="__fpu_ftw" ref="0x110379180" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x11012d1d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv1" ref="0x110379230" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x11012d1d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_fop" ref="0x1103792e0" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ip" ref="0x110379390" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_cs" ref="0x110379440" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv2" ref="0x1103794f0" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_dp" ref="0x1103795a0" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ds" ref="0x110379650" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv3" ref="0x110379700" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsr" ref="0x1103797b0" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsrmask" ref="0x110379960" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_stmm0" ref="0x110379a10" bit-offset="I:320" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm1" ref="0x110379ac0" bit-offset="I:448" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm2" ref="0x110379b70" bit-offset="I:576" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm3" ref="0x110379c20" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm4" ref="0x110379cd0" bit-offset="I:832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm5" ref="0x110379d80" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm6" ref="0x110379e30" bit-offset="I:1088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm7" ref="0x110379ee0" bit-offset="I:1216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_xmm0" ref="0x110381020" bit-offset="I:1344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm1" ref="0x1103810d0" bit-offset="I:1472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm2" ref="0x110381180" bit-offset="I:1600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm3" ref="0x110381430" bit-offset="I:1728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm4" ref="0x1103814e0" bit-offset="I:1856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm5" ref="0x110381590" bit-offset="I:1984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm6" ref="0x110381640" bit-offset="I:2112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm7" ref="0x1103816f0" bit-offset="I:2240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm8" ref="0x1103817a0" bit-offset="I:2368" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm9" ref="0x110381850" bit-offset="I:2496" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm10" ref="0x110381900" bit-offset="I:2624" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm11" ref="0x1103819b0" bit-offset="I:2752" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm12" ref="0x110381a60" bit-offset="I:2880" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm13" ref="0x110381b10" bit-offset="I:3008" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm14" ref="0x110381bc0" bit-offset="I:3136" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm15" ref="0x110381c70" bit-offset="I:3264" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_rsrv4" ref="0x110381d20" bit-offset="I:3392" size="I:96">
        <type-array elements="I:96" size="I:96" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_reserved1" ref="0x110381dd0" bit-offset="I:4160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__avx_reserved1" ref="0x110381e80" bit-offset="I:4192" size="I:64">
        <type-array elements="I:64" size="I:64" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_ymmh0" ref="0x110381f30" bit-offset="I:4704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh1" ref="0x11037e020" bit-offset="I:4832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh2" ref="0x11037e0d0" bit-offset="I:4960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh3" ref="0x11037e180" bit-offset="I:5088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh4" ref="0x11037e230" bit-offset="I:5216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh5" ref="0x11037e2e0" bit-offset="I:5344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh6" ref="0x11037e390" bit-offset="I:5472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh7" ref="0x11037e440" bit-offset="I:5600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh8" ref="0x11037e8f0" bit-offset="I:5728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh9" ref="0x11037e9a0" bit-offset="I:5856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh10" ref="0x11037ea50" bit-offset="I:5984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh11" ref="0x11037eb00" bit-offset="I:6112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh12" ref="0x11037ebb0" bit-offset="I:6240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh13" ref="0x11037ec60" bit-offset="I:6368" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh14" ref="0x11037ed10" bit-offset="I:6496" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_ymmh15" ref="0x11037edc0" bit-offset="I:6624" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
    </struct>
    <struct name="__darwin_x86_thread_state64" loc="454:/usr/include/mach/i386/_structs.h" ref="0x1103623c8" defined="" size="I:168" alignment="I:8">
      <field name="__rax" ref="0x110360c90" bit-offset="I:0" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__rbx" ref="0x110360d40" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__rcx" ref="0x110360df0" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__rdx" ref="0x110360ea0" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__rdi" ref="0x110360f50" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__rsi" ref="0x110369030" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__rbp" ref="0x1103690e0" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__rsp" ref="0x110369190" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__r8" ref="0x110369240" bit-offset="I:512" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__r9" ref="0x1103692f0" bit-offset="I:576" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__r10" ref="0x1103693a0" bit-offset="I:640" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__r11" ref="0x110369450" bit-offset="I:704" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__r12" ref="0x110369500" bit-offset="I:768" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__r13" ref="0x1103696b0" bit-offset="I:832" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__r14" ref="0x110369760" bit-offset="I:896" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__r15" ref="0x110369810" bit-offset="I:960" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__rip" ref="0x1103698c0" bit-offset="I:1024" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__rflags" ref="0x110369970" bit-offset="I:1088" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__cs" ref="0x110369a20" bit-offset="I:1152" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__fs" ref="0x110369ad0" bit-offset="I:1216" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
      <field name="__gs" ref="0x110369b80" bit-offset="I:1280" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="4:/opt/tinyos-2.x/apps/wustl/upma/system/SenderDispatcher.h" ref="0x110db13c0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="rusage" loc="151:/usr/include/sys/resource.h" ref="0x1103a4e10" defined="" size="I:144" alignment="I:8">
      <field name="ru_utime" ref="0x1103a1b18" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x1103a4020"/></type-tag>
      </field>
      <field name="ru_stime" ref="0x1103a1bc8" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x1103a4020"/></type-tag>
      </field>
      <field name="ru_maxrss" ref="0x1103a1c78" bit-offset="I:256" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_ixrss" ref="0x1103a1d28" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_idrss" ref="0x1103a1dd8" bit-offset="I:384" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_isrss" ref="0x1103a1e88" bit-offset="I:448" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_minflt" ref="0x1103a1f38" bit-offset="I:512" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_majflt" ref="0x1103ac020" bit-offset="I:576" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nswap" ref="0x1103ac0d0" bit-offset="I:640" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_inblock" ref="0x1103ac180" bit-offset="I:704" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_oublock" ref="0x1103ac230" bit-offset="I:768" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_msgsnd" ref="0x1103ac2e0" bit-offset="I:832" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_msgrcv" ref="0x1103ac390" bit-offset="I:896" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nsignals" ref="0x1103ac540" bit-offset="I:960" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nvcsw" ref="0x1103ac5f0" bit-offset="I:1024" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nivcsw" ref="0x1103ac6a0" bit-offset="I:1088" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="rlimit" loc="222:/usr/include/sys/resource.h" ref="0x1103ac908" defined="" size="I:16" alignment="I:8">
      <field name="rlim_cur" ref="0x1103aceb8" bit-offset="I:0" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="rlim_t" ref="0x1103a4a50"/></typename>
        </type-int>
      </field>
      <field name="rlim_max" ref="0x1103ab020" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="rlim_t" ref="0x1103a4a50"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__darwin_i386_exception_state" loc="402:/usr/include/mach/i386/_structs.h" ref="0x11035dd60" defined="" size="I:12" alignment="I:4">
      <field name="__trapno" ref="0x110364760" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__cpu" ref="0x110364810" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__err" ref="0x1103648c0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
      <field name="__faultvaddr" ref="0x110364970" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="108:/usr/include/stdlib.h" ref="0x1103c9828" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x1103c9a28" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x1103c9ad8" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="34:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x110aba8e8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="85:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x110ab0020" defined="" size="I:1" alignment="I:1">
      <field name="mux" ref="0x110ab0220" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </field>
      <field name="adlar" ref="0x110ab02d0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </field>
      <field name="refs" ref="0x110ab0380" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="nts" loc="17:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x110125020" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x110125368" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct loc="225:/usr/include/sys/wait.h" ref="0x1103bc150" defined="" size="I:4" alignment="I:4">
      <field name="w_Stopval" ref="0x1103bc350" bit-offset="I:0" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Stopsig" ref="0x1103bc400" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Filler" ref="0x1103bc4b0" bit-offset="I:16" bit-size="I:16">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="98:/usr/include/runetype.h" ref="0x1105126d0" defined="" size="I:3208" alignment="I:8">
      <field name="__magic" ref="0x1105128d0" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__encoding" ref="0x110512980" bit-offset="I:64" size="I:32">
        <type-array elements="I:32" size="I:32" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__sgetrune" ref="0x110512a30" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4">
              <typename><typedef-ref name="__darwin_rune_t" ref="0x110132ad8"/></typename>
            </type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
              </type-pointer>
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="__darwin_size_t" ref="0x110131e40"/></typename>
              </type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-pointer size="I:8" alignment="I:8">
                  <type-qualified const="">
                    <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                  </type-qualified>
                </type-pointer>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__sputrune" ref="0x110512b20" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4">
                <typename><typedef-ref name="__darwin_rune_t" ref="0x110132ad8"/></typename>
              </type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-pointer>
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="__darwin_size_t" ref="0x110131e40"/></typename>
              </type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-pointer size="I:8" alignment="I:8">
                  <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                </type-pointer>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__invalid_rune" ref="0x110512c20" bit-offset="I:448" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x110132ad8"/></typename>
        </type-int>
      </field>
      <field name="__runetype" ref="0x110512cd0" bit-offset="I:480" size="I:1024">
        <type-array elements="I:256" size="I:1024" alignment="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__maplower" ref="0x110512d80" bit-offset="I:8672" size="I:1024">
        <type-array elements="I:256" size="I:1024" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__darwin_rune_t" ref="0x110132ad8"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__mapupper" ref="0x110512e30" bit-offset="I:16864" size="I:1024">
        <type-array elements="I:256" size="I:1024" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__darwin_rune_t" ref="0x110132ad8"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__runetype_ext" ref="0x110512ee0" bit-offset="I:25088" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x1105180e0"/>
          <typename><typedef-ref name="_RuneRange" ref="0x1105184e8"/></typename>
        </type-tag>
      </field>
      <field name="__maplower_ext" ref="0x110522020" bit-offset="I:25216" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x1105180e0"/>
          <typename><typedef-ref name="_RuneRange" ref="0x1105184e8"/></typename>
        </type-tag>
      </field>
      <field name="__mapupper_ext" ref="0x1105220d0" bit-offset="I:25344" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x1105180e0"/>
          <typename><typedef-ref name="_RuneRange" ref="0x1105184e8"/></typename>
        </type-tag>
      </field>
      <field name="__variable" ref="0x110522180" bit-offset="I:25472" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__variable_len" ref="0x110522230" bit-offset="I:25536" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ncharclasses" ref="0x1105223e0" bit-offset="I:25568" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__charclasses" ref="0x110522490" bit-offset="I:25600" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:20" alignment="I:4"><struct-ref ref="0x110518c70"/>
            <typename><typedef-ref name="_RuneCharClass" ref="0x1105160c8"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="exception" loc="652:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/math.h" ref="0x11050caa0" defined="" size="I:40" alignment="I:8">
      <field name="type" ref="0x11050a420" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="name" ref="0x11050a4d0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="arg1" ref="0x11050a580" bit-offset="I:128" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="arg2" ref="0x11050a630" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="retval" ref="0x11050a6e0" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <enum loc="32:/opt/tinyos-2.x/tos/types/Leds.h" ref="0x110dbb2e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__darwin_xmm_reg" loc="210:/usr/include/mach/i386/_structs.h" ref="0x11034a9c8" defined="" size="I:16" alignment="I:1">
      <field name="__xmm_reg" ref="0x11034ae90" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sim_log_channel" loc="48:/opt/tinyos-2.x/tos/lib/tossim/sim_log.c" ref="0x11060b9f0" defined="" size="I:24" alignment="I:8">
      <field name="name" ref="0x11060a3d8" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="numOutputs" ref="0x11060a488" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x11060a538" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="outputs" ref="0x11060a5e8" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x110555ec0"/>
              <typename><typedef-ref name="FILE" ref="0x11055fae8"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <enum loc="25:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h" ref="0x110a134c8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__darwin_pthread_handler_rec" loc="58:/usr/include/sys/_types.h" ref="0x1101351f8" defined="" size="I:24" alignment="I:8">
      <field name="__routine" ref="0x110136020" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__arg" ref="0x1101360f0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__next" ref="0x1101361a0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_pthread_handler_rec" ref="0x1101351f8"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <attribute name="C"  loc="NONE" ref="0x1101165b0" size="V:" alignment="V:">
    </attribute>
    <struct name="sim_noise_hash_t" loc="56:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h" ref="0x11071d020" defined="" size="I:488" alignment="I:8">
      <field name="key" ref="0x11071de98" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="numElements" ref="0x11071df48" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x11071c020" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="elements" ref="0x11071c0d0" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="flag" ref="0x11071c180" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="dist" ref="0x11071c230" bit-offset="I:352" size="I:444">
        <type-array elements="I:111" size="I:444" alignment="I:4">
          <type-float cname="float" size="I:4" alignment="I:4"></type-float>
        </type-array>
      </field>
    </struct>
    <struct name="searchstate" ref="0x11146a8a0" size="V:" alignment="V:">
    </struct>
    <attribute name="macro"  loc="NONE" ref="0x1101173c8" size="V:" alignment="V:">
      <field name="macro_name" ref="0x1101175c8" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <enum loc="673:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h" ref="0x110a405b8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_opaque_pthread_rwlock_t" loc="70:/usr/include/sys/_types.h" ref="0x11013ae58" defined="" size="I:200" alignment="I:8">
      <field name="__sig" ref="0x11013b448" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x11013b4f8" bit-offset="I:64" size="I:192">
        <type-array elements="I:192" size="I:192" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <union name="sigval" loc="175:/usr/include/sys/signal.h" ref="0x110392488" defined="" size="I:8" alignment="I:8">
      <field name="sival_int" ref="0x110392a20" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sival_ptr" ref="0x110392ad0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </union>
    <enum loc="117:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x110aad2e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="message_t" loc="14:/opt/tinyos-2.x/tos/types/message.h" ref="0x110918490" defined="" size="I:172" alignment="I:1">
      <field name="header" ref="0x110917678" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="data" ref="0x110917728" bit-offset="I:64" size="I:156">
        <type-array elements="I:156" size="I:156" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="footer" ref="0x1109177d8" bit-offset="I:1312" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="metadata" ref="0x110917888" bit-offset="I:1328" size="I:6">
        <type-array elements="I:6" size="I:6" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct name="_opaque_pthread_condattr_t" loc="66:/usr/include/sys/_types.h" ref="0x110137948" defined="" size="I:16" alignment="I:8">
      <field name="__sig" ref="0x110137f10" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x110139020" bit-offset="I:64" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="_opaque_pthread_mutex_t" loc="67:/usr/include/sys/_types.h" ref="0x1101392b0" defined="" size="I:64" alignment="I:8">
      <field name="__sig" ref="0x110139878" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x110139928" bit-offset="I:64" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <nx_struct name="tossim_header" loc="6:/opt/tinyos-2.x/tos/lib/tossim/TossimRadioMsg.h" ref="0x110908e90" defined="" size="I:8" alignment="I:1">
      <field name="dest" ref="0x110907c80" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x11090a148"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x110907d30" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x11090a148"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x110907de0" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
        </type-int>
      </field>
      <field name="dsn" ref="0x110907e90" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x110907f40" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x11090bcd0"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x110906020" bit-offset="I:56" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x11090b7e0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="129:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x110aac670" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="48:/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h" ref="0x110ad1b98" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__darwin_i386_float_state" loc="232:/usr/include/mach/i386/_structs.h" ref="0x1103491d8" defined="" size="I:524" alignment="I:4">
      <field name="__fpu_reserved" ref="0x11034e480" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
      <field name="__fpu_fcw" ref="0x11034e530" bit-offset="I:64" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x11033eaa8"/></type-tag>
      </field>
      <field name="__fpu_fsw" ref="0x11034e5e0" bit-offset="I:80" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x110344020"/></type-tag>
      </field>
      <field name="__fpu_ftw" ref="0x11034e690" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x11012d1d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv1" ref="0x11034e740" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x11012d1d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_fop" ref="0x11034e7f0" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ip" ref="0x11034e8a0" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_cs" ref="0x11034e950" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv2" ref="0x11034ea00" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_dp" ref="0x11034eab0" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ds" ref="0x11034eb60" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv3" ref="0x11034ec10" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsr" ref="0x11034ecc0" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsrmask" ref="0x11034ee70" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_stmm0" ref="0x11034ef20" bit-offset="I:320" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm1" ref="0x11034c020" bit-offset="I:448" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm2" ref="0x11034c0d0" bit-offset="I:576" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm3" ref="0x11034c180" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm4" ref="0x11034c230" bit-offset="I:832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm5" ref="0x11034c2e0" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm6" ref="0x11034c390" bit-offset="I:1088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_stmm7" ref="0x11034c440" bit-offset="I:1216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x110342ed0"/></type-tag>
      </field>
      <field name="__fpu_xmm0" ref="0x11034c4f0" bit-offset="I:1344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm1" ref="0x11034c5a0" bit-offset="I:1472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm2" ref="0x11034c650" bit-offset="I:1600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm3" ref="0x11034c900" bit-offset="I:1728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm4" ref="0x11034c9b0" bit-offset="I:1856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm5" ref="0x11034ca60" bit-offset="I:1984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm6" ref="0x11034cb10" bit-offset="I:2112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_xmm7" ref="0x11034cbc0" bit-offset="I:2240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x11034a9c8"/></type-tag>
      </field>
      <field name="__fpu_rsrv4" ref="0x11034cc70" bit-offset="I:2368" size="I:224">
        <type-array elements="I:224" size="I:224" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_reserved1" ref="0x11034cd20" bit-offset="I:4160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="sim_noise_node_t" loc="65:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h" ref="0x11071c7a8" defined="" size="I:80" alignment="I:8">
      <field name="key" ref="0x11071be50" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="freqKey" ref="0x11071bf00" bit-offset="I:160" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="lastNoiseVal" ref="0x11071a020" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="noiseGenTime" ref="0x11071a0d0" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
        </type-int>
      </field>
      <field name="noiseTable" ref="0x11071a180" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x110601678"/></type-tag>
        </type-pointer>
      </field>
      <field name="noiseTrace" ref="0x11071a230" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="noiseTraceLen" ref="0x11071a2e0" bit-offset="I:512" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
        </type-int>
      </field>
      <field name="noiseTraceIndex" ref="0x11071a390" bit-offset="I:544" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
        </type-int>
      </field>
      <field name="generated" ref="0x11071a440" bit-offset="I:576" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="_opaque_pthread_mutexattr_t" loc="68:/usr/include/sys/_types.h" ref="0x110139be0" defined="" size="I:16" alignment="I:8">
      <field name="__sig" ref="0x11013a208" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x11013a2b8" bit-offset="I:64" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="97:/usr/include/stdlib.h" ref="0x1103ca3d8" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0x1103ca5d8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x1103ca688" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x110ab83c0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__sFILE" loc="130:/usr/include/stdio.h" ref="0x110555ec0" defined="" size="I:152" alignment="I:8">
      <field name="_p" ref="0x110561a00" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_r" ref="0x110561ab0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_w" ref="0x110561b60" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_flags" ref="0x110561c10" bit-offset="I:128" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_file" ref="0x110561cc0" bit-offset="I:144" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_bf" ref="0x110561d70" bit-offset="I:192" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__sbuf" ref="0x1105553c8"/></type-tag>
      </field>
      <field name="_lbfsize" ref="0x110561e20" bit-offset="I:320" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_cookie" ref="0x110561ed0" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="_close" ref="0x11055f020" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_read" ref="0x11055f0f0" bit-offset="I:512" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-pointer>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_seek" ref="0x11055f1e0" bit-offset="I:576" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="fpos_t" ref="0x1105550c8"/></typename>
            </type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-int cname="long long" size="I:8" alignment="I:8">
                <typename><typedef-ref name="fpos_t" ref="0x1105550c8"/></typename>
              </type-int>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_write" ref="0x11055f2d0" bit-offset="I:640" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
              </type-pointer>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_ub" ref="0x11055f3c0" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__sbuf" ref="0x1105553c8"/></type-tag>
      </field>
      <field name="_extra" ref="0x11055f570" bit-offset="I:832" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="V:" alignment="V:"><struct-ref name="__sFILEX" ref="0x110555bf8"/></type-tag>
        </type-pointer>
      </field>
      <field name="_ur" ref="0x11055f620" bit-offset="I:896" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_ubuf" ref="0x11055f6d0" bit-offset="I:928" size="I:3">
        <type-array elements="I:3" size="I:3" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_nbuf" ref="0x11055f780" bit-offset="I:952" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_lb" ref="0x11055f830" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__sbuf" ref="0x1105553c8"/></type-tag>
      </field>
      <field name="_blksize" ref="0x11055f8e0" bit-offset="I:1088" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_offset" ref="0x11055f990" bit-offset="I:1152" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="fpos_t" ref="0x1105550c8"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="135:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x110ad3020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="68:/opt/tinyos-2.x/tos/lib/tossim/tos.h" ref="0x1105cd918" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atomic_hwevent"  loc="NONE" ref="0x110116af8" size="V:" alignment="V:">
    </attribute>
    <attribute name="dmemcpy" loc="16:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x110123408" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x110123890" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x110123940" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x1101239f0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct loc="88:/usr/include/runetype.h" ref="0x1105180e0" defined="" size="I:16" alignment="I:8">
      <field name="__nranges" ref="0x1105182e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ranges" ref="0x110518390" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref ref="0x110519460"/>
            <typename><typedef-ref name="_RuneEntry" ref="0x1105199c8"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="38:TestNetworkC.nc" ref="0x1109ef818" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TestNetworkC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="45:/opt/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc" ref="0x1109644a8" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="45:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AsyncReceiveAdapterP.nc" ref="0x110d5a250" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AsyncReceiveAdapterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="44:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AsyncSendAdapterP.nc" ref="0x110d77020" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AsyncSendAdapterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="143:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc" ref="0x111344e78" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="93:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc" ref="0x1113d7020" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="98:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc" ref="0x1113d8020" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="53:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc" ref="0x110ddeb08" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="logentry_t" loc="64:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc" ref="0x110ddb380" defined="" scoped="" size="I:1027" alignment="I:1">
      <component-ref qname="PureTDMASchedulerP"/>
      <field name="saved_data" ref="0x110ddaf28" bit-offset="I:0" size="I:840">
        <type-array elements="I:7" size="I:840" alignment="I:1">
          <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="TestNetworkMsg" ref="0x11099bb00"/>
            <typename><typedef-ref name="TestNetworkMsg" ref="0x1109956f8"/></typename>
          </type-tag>
        </type-array>
        <attribute-value>
          <attribute-ref name="one" ref="0x110121508"/>
          <value-structured>
            <type-tag size="I:4" alignment="I:4"><attribute-ref name="one" ref="0x110121508"/></type-tag>
          </value-structured>
        </attribute-value>
      </field>
      <field name="handled_saved_data" ref="0x110dd9060" bit-offset="I:6720" size="I:7">
        <type-array elements="I:7" size="I:7" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
          </type-int>
        </type-array>
        <attribute-value>
          <attribute-ref name="one" ref="0x110121508"/>
          <value-structured>
            <type-tag size="I:4" alignment="I:4"><attribute-ref name="one" ref="0x110121508"/></type-tag>
          </value-structured>
        </attribute-value>
      </field>
      <field name="prob_bit" ref="0x110dd9170" bit-offset="I:6776" size="I:7">
        <type-array elements="I:7" size="I:7" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
          </type-int>
        </type-array>
        <attribute-value>
          <attribute-ref name="one" ref="0x110121508"/>
          <value-structured>
            <type-tag size="I:4" alignment="I:4"><attribute-ref name="one" ref="0x110121508"/></type-tag>
          </value-structured>
        </attribute-value>
      </field>
      <field name="len" ref="0x110dd9280" bit-offset="I:6832" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0x110dd9330" bit-offset="I:6840" size="I:172">
        <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
          <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
        </type-tag>
      </field>
    </nx_struct>
    <enum loc="52:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderP.nc" ref="0x110faa838" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="GenericSlotSenderP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="69:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" ref="0x111041280" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="TransformAlarmC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="58:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" ref="0x1110489f0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="TransformCounterC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="640:/opt/tinyos-2.x/tos/lib/tossim/CpmModelC.nc" ref="0x1112d0200" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="36:/opt/tinyos-2.x/tos/chips/cc2420/control/sim/CC2420ControlP.nc" ref="0x11116dcd8" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="CC2420ControlP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="receive_message" loc="66:/opt/tinyos-2.x/tos/lib/tossim/CpmModelC.nc" ref="0x111270cc8" defined="" scoped="" size="I:72" alignment="I:8">
      <component-ref qname="CpmModelC"/>
      <field name="source" ref="0x11126eab0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="start" ref="0x11126eb60" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x1105cc8c0"/></typename>
        </type-int>
      </field>
      <field name="end" ref="0x11126ec10" bit-offset="I:128" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x1105cc8c0"/></typename>
        </type-int>
      </field>
      <field name="power" ref="0x11126ecc0" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="reversePower" ref="0x11126ed70" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="strength" ref="0x11126ee20" bit-offset="I:320" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x11014bdc8"/></typename>
        </type-int>
      </field>
      <field name="lost" ref="0x11126eed0" bit-offset="I:328" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x11126d020" bit-offset="I:336" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0x11126d0d0" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
            <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="next" ref="0x11126d180" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:72" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x111270cc8"/>
            <typename><typedef-ref name="receive_message_t" scoped="" ref="0x11126f1d0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="channel" ref="0x11126d230" bit-offset="I:512" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x11126d2e0" bit-offset="I:520" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="161:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" ref="0x11157f020" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="118:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" ref="0x1115dc088" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="39:/opt/tinyos-2.x/tos/system/AMQueueP.nc" ref="0x111582348" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="47:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" ref="0x1115cce78" defined="" scoped="" size="I:8" alignment="I:8">
      <component-ref qname="AMQueueImplP"/>
      <field name="msg" ref="0x1115cb0a0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
            <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="54:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderP.nc" ref="0x111644920" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SSTdmaSlotSenderP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
  </tags>
  <variables>
    <variable name="snr28" ref="0x1111b2200" loc="23:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:128" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr17" ref="0x11121a020" loc="38:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:176" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="randCM" ref="0x1107ef768" loc="39:/opt/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="dummy" ref="0x1108acac8" loc="301:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr7" ref="0x1111ca278" loc="29:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:45" size="I:720" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr30" ref="0x11120da70" loc="43:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:7" size="I:112" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="current_node" ref="0x11072d020" loc="42:/opt/tinyos-2.x/tos/lib/tossim/sim_tossim.c">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="test" ref="0x110809088" loc="41:/opt/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr23" ref="0x1111b5a98" loc="22:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:144" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="optarg" ref="0x1113f14f0" loc="540:/usr/include/unistd.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-pointer>
    </variable>
    <variable name="snr12" ref="0x111225428" loc="35:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:16" size="I:256" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr2" ref="0x1111e0c30" loc="27:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:42" size="I:672" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="channelTable" ref="0x110609c20" loc="60:/opt/tinyos-2.x/tos/lib/tossim/sim_log.c">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x110601678"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="emergency_status" ref="0x111460510" loc="7:/Users/wangwenchen/wcps_apps/pure-tdma/sim/printfWr.c">
      <type-array elements="I:5" size="I:20" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </variable>
    <variable name="noiseData" ref="0x11081b758" loc="56:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.c">
      <type-array elements="I:1000" size="I:1280000" alignment="I:8">
        <type-array elements="I:16" size="I:1280" alignment="I:8">
          <type-tag size="I:80" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x11071c7a8"/>
            <typename><typedef-ref name="sim_noise_node_t" ref="0x11071a598"/></typename>
          </type-tag>
        </type-array>
      </type-array>
    </variable>
    <variable name="outputs" ref="0x1106097e0" loc="59:/opt/tinyos-2.x/tos/lib/tossim/sim_log.c">
      <type-array elements="I:175" size="I:2800" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x11060de30"/>
          <typename><typedef-ref name="sim_log_output_t" ref="0x11060b6a0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="randU" ref="0x1107ef020" loc="39:/opt/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-array elements="I:97" size="I:776" alignment="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </type-array>
    </variable>
    <variable name="snr21" ref="0x1111babf8" loc="20:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:144" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr26" ref="0x1111c25f0" loc="17:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:128" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="optind" ref="0x1113f1830" loc="541:/usr/include/unistd.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="timezone" ref="0x1106f9598" loc="118:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="eventHeap" ref="0x1106ca2f8" loc="36:/opt/tinyos-2.x/tos/lib/tossim/sim_event_queue.c">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x1106715d0"/>
        <typename><typedef-ref name="heap_t" ref="0x110686020"/></typename>
      </type-tag>
    </variable>
    <variable name="snr15" ref="0x1112215f0" loc="36:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:176" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr5" ref="0x1111d5020" loc="28:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:46" size="I:736" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaRxTxDelay" ref="0x110776318" loc="46:/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase1" ref="0x11081c0c8" loc="50:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.c">
      <documentation loc="24:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr18" ref="0x111211af8" loc="41:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:176" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__stderrp" ref="0x11055d7b0" loc="166:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x110555ec0"/>
          <typename><typedef-ref name="FILE" ref="0x11055fae8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="randC" ref="0x1107ef288" loc="39:/opt/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="snr10" ref="0x1111ea630" loc="33:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:26" size="I:416" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="FreqKeyNum" ref="0x11081b020" loc="55:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.c">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
      </type-int>
    </variable>
    <variable name="optreset" ref="0x111462970" loc="776:/usr/include/unistd.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr29" ref="0x1111b05f0" loc="24:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:128" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaLow" ref="0x1107790c8" loc="39:/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaPreambleLength" ref="0x110778020" loc="42:/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr8" ref="0x1111f8020" loc="31:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:34" size="I:544" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr31" ref="0x11120e9a0" loc="42:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:3" size="I:48" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="numTotal" ref="0x11081ca38" loc="52:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="daylight" ref="0x1106f98f0" loc="120:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaExponentBase" ref="0x1107784c8" loc="43:/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="allSnr" ref="0x11120ba70" loc="45:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:29" size="I:696" alignment="I:8">
        <type-tag size="I:24" alignment="I:8"><struct-ref name="snr_lqi" ref="0x111184968"/>
          <typename><typedef-ref name="snr_lqi_t" ref="0x111183408"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr24" ref="0x1111837b0" loc="15:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:128" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="fw" ref="0x111462cd8" loc="5:/Users/wangwenchen/wcps_apps/pure-tdma/sim/printfWr.c">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x110555ec0"/>
          <typename><typedef-ref name="FILE" ref="0x11055fae8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="randCD" ref="0x1107ef4f8" loc="39:/opt/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="snr0" ref="0x1111ae998" loc="25:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:25" size="I:400" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="getdate_err" ref="0x1106fbca0" loc="116:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="j97" ref="0x1107efcd8" loc="40:/opt/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr13" ref="0x111229d50" loc="34:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:13" size="I:208" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="TOS_NODE_ID" ref="0x1105cc3e8" loc="70:/opt/tinyos-2.x/tos/lib/tossim/tos.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
      </type-int>
    </variable>
    <variable name="sys_errlist" ref="0x1105bc9d0" loc="460:/usr/include/stdio.h">
      <type-qualified const="">
        <type-array elements="V:" size="V:" alignment="V:">
          <type-qualified const="">
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </type-qualified>
        </type-array>
      </type-qualified>
    </variable>
    <variable name="_CurrentRuneLocale" ref="0x110520020" loc="133:/usr/include/runetype.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:3208" alignment="I:8"><struct-ref ref="0x1105126d0"/>
          <typename><typedef-ref name="_RuneLocale" ref="0x1105225e8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="snr3" ref="0x1111a7d48" loc="26:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:45" size="I:720" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="tzname" ref="0x1106fb930" loc="113:/usr/include/time.h">
      <type-array elements="V:" size="V:" alignment="V:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="STARTING_SIZE" ref="0x11067f020" loc="47:/opt/tinyos-2.x/tos/lib/tossim/heap.c">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="opterr" ref="0x1113f1aa0" loc="541:/usr/include/unistd.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="=va_arg" ref="0x1101127c8"  loc="NONE">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaHigh" ref="0x11077ac30" loc="38:/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMaxIterations" ref="0x110778978" loc="44:/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="atm128RegFile" ref="0x110aa7970" loc="45:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <documentation loc="24:/opt/tinyos-2.x/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-array elements="I:1000" size="I:160000" alignment="I:1">
        <type-array elements="I:160" size="I:160" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
        </type-array>
      </type-array>
    </variable>
    <variable name="__stdinp" ref="0x11055d020" loc="164:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x110555ec0"/>
          <typename><typedef-ref name="FILE" ref="0x11055fae8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="localNoise" ref="0x1107ac2b0" loc="9:/opt/tinyos-2.x/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:256256" alignment="I:8">
        <type-array elements="I:16" size="I:256" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x1107aeb40"/>
            <typename><typedef-ref name="sim_gain_noise_t" ref="0x1107ad2f8"/></typename>
          </type-tag>
        </type-array>
      </type-array>
    </variable>
    <variable name="snr27" ref="0x1111bf9a0" loc="18:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:144" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr16" ref="0x111217020" loc="39:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:176" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaInitLow" ref="0x11077a7d8" loc="37:/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="fr" ref="0x111460088" loc="6:/Users/wangwenchen/wcps_apps/pure-tdma/sim/printfWr.c">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x110555ec0"/>
          <typename><typedef-ref name="FILE" ref="0x11055fae8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="snr6" ref="0x111203138" loc="30:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:45" size="I:720" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="numCase2" ref="0x11081c5e0" loc="51:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr19" ref="0x111213020" loc="40:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:10" size="I:160" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="suboptarg" ref="0x11043c3b8" loc="741:/usr/include/unistd.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-pointer>
    </variable>
    <variable name="sim_ticks" ref="0x11072eb28" loc="41:/opt/tinyos-2.x/tos/lib/tossim/sim_tossim.c">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x1105cc8c0"/></typename>
      </type-int>
    </variable>
    <variable name="snr22" ref="0x1111b73a0" loc="21:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:144" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="connectivity" ref="0x1107adad0" loc="8:/opt/tinyos-2.x/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:128128" alignment="I:8">
        <type-array elements="I:16" size="I:128" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:32" alignment="I:8"><struct-ref name="gain_entry" ref="0x1107a1da8"/>
              <typename><typedef-ref name="gain_entry_t" ref="0x11079fa70"/></typename>
            </type-tag>
          </type-pointer>
        </type-array>
      </type-array>
    </variable>
    <variable name="snr11" ref="0x1111f0570" loc="32:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:20" size="I:320" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sys_nerr" ref="0x1105bc538" loc="459:/usr/include/stdio.h">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="simTimeBuf" ref="0x11075d1e0" loc="292:/opt/tinyos-2.x/tos/lib/tossim/sim_tossim.c">
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="__stdoutp" ref="0x11055d3e8" loc="165:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x110555ec0"/>
          <typename><typedef-ref name="FILE" ref="0x11055fae8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="snr20" ref="0x1111bc140" loc="19:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:10" size="I:160" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sim_seed" ref="0x11072d378" loc="43:/opt/tinyos-2.x/tos/lib/tossim/sim_tossim.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sensitivity" ref="0x1107ac5e8" loc="11:/opt/tinyos-2.x/tos/lib/tossim/sim_gain.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="snr25" ref="0x1111c5af8" loc="16:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:10" size="I:160" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="allSnr_len" ref="0x111243a78" loc="46:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="signgam" ref="0x110501368" loc="601:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaInitHigh" ref="0x11077a368" loc="36:/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr14" ref="0x11121e4e0" loc="37:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:14" size="I:224" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="optopt" ref="0x1113f1d10" loc="541:/usr/include/unistd.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_DefaultRuneLocale" ref="0x110522a30" loc="132:/usr/include/runetype.h">
      <type-tag size="I:3208" alignment="I:8"><struct-ref ref="0x1105126d0"/>
        <typename><typedef-ref name="_RuneLocale" ref="0x1105225e8"/></typename>
      </type-tag>
    </variable>
    <variable name="csmaAckTime" ref="0x110776788" loc="47:/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaSymbolsPerSec" ref="0x110779578" loc="40:/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMinFreeSamples" ref="0x110778e30" loc="45:/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="__mb_cur_max" ref="0x1103c7020" loc="134:/usr/include/stdlib.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaBitsPerSymbol" ref="0x110779a28" loc="41:/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="i97" ref="0x1107efa88" loc="40:/opt/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="msgamr" ref="0x1109d33f0" loc="31:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="TestNetworkMsg" ref="0x11099bb00"/>
          <typename><typedef-ref name="TestNetworkMsg" ref="0x1109956f8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="msglen" ref="0x1109d3b40" loc="34:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="prevSeq" ref="0x1109e5520" loc="64:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="rcmr" ref="0x1109d3020" loc="30:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="TestNetworkMsg" ref="0x11099bb00"/>
          <typename><typedef-ref name="TestNetworkMsg" ref="0x1109956f8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="rcm" ref="0x1109d4ad8" loc="29:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="TestNetworkMsg" ref="0x11099bb00"/>
          <typename><typedef-ref name="TestNetworkMsg" ref="0x1109956f8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="firstMsg" ref="0x1109e59c0" loc="65:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="fire_count" ref="0x1109d45f0" loc="28:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="packet" ref="0x1109d4278" loc="27:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
        <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
      </type-tag>
    </variable>
    <variable name="tnmsg_in_transit" ref="0x1109d37f0" loc="33:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="TestNetworkMsg" ref="0x11099bb00"/>
        <typename><typedef-ref name="TestNetworkMsg" ref="0x1109956f8"/></typename>
      </type-tag>
    </variable>
    <variable name="packetCount" ref="0x1109ef020" loc="35:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
      </type-int>
    </variable>
    <variable name="sendBusy" ref="0x1109ef4a8" loc="36:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="sim_scheduler_event_pending" ref="0x110962088" loc="58:/opt/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="m_tail" ref="0x110963760" loc="52:/opt/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="m_head" ref="0x110963410" loc="51:/opt/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="m_next" ref="0x110963be8" loc="53:/opt/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-array elements="I:9" size="I:9" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sim_scheduler_event" ref="0x1109625b0" loc="59:/opt/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1105d4e88"/>
        <typename><typedef-ref name="sim_event_t" ref="0x1105d2288"/></typename>
      </type-tag>
    </variable>
    <variable name="radioChannel" ref="0x110c74020" loc="49:/opt/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="bootEvent" ref="0x110c51b18" loc="47:/opt/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1105d4e88"/>
          <typename><typedef-ref name="sim_event_t" ref="0x1105d2288"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="startTime" ref="0x110c51420" loc="45:/opt/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="euid" ref="0x110c51088" loc="44:/opt/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="isOn" ref="0x110c51748" loc="46:/opt/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="tcp_msg" ref="0x110c74580" loc="50:/opt/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-array elements="I:5" size="I:20" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </variable>
    <variable name="buffer" ref="0x110cd77a8" loc="20:/opt/tinyos-2.x/tos/chips/cc2420/csma/sim/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
        <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
      </type-tag>
    </variable>
    <variable name="bufferPointer" ref="0x110cd7b90" loc="21:/opt/tinyos-2.x/tos/chips/cc2420/csma/sim/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
          <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="payload_" ref="0x110d57e60" loc="37:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AsyncReceiveAdapterP.nc">
      <component-ref qname="AsyncReceiveAdapterP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-void size="I:1" alignment="I:1"></type-void>
      </type-pointer>
    </variable>
    <variable name="msg_" ref="0x110d576f0" loc="36:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AsyncReceiveAdapterP.nc">
      <component-ref qname="AsyncReceiveAdapterP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
          <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="len_" ref="0x110d551d8" loc="38:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AsyncReceiveAdapterP.nc">
      <component-ref qname="AsyncReceiveAdapterP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="msg_" ref="0x110d73020" loc="36:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AsyncSendAdapterP.nc">
      <component-ref qname="AsyncSendAdapterP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
          <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="len_" ref="0x110d73360" loc="37:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AsyncSendAdapterP.nc">
      <component-ref qname="AsyncSendAdapterP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="slotSize" ref="0x110e03e10" loc="116:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
      </type-int>
    </variable>
    <variable name="num_intervals" ref="0x110dfe618" loc="136:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="toSendLen" ref="0x110e01df8" loc="125:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="requestStop" ref="0x110dfd388" loc="141:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="topo_fp" ref="0x110dd2740" loc="103:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x110555ec0"/>
          <typename><typedef-ref name="FILE" ref="0x11055fae8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="schedule_len" ref="0x110dfe148" loc="134:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="CURRNODES" ref="0x110dd4800" loc="93:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="node_list" ref="0x110dffd40" loc="132:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-array elements="I:50" size="I:50" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="self_pos" ref="0x110dd6a68" loc="82:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="totalChildren" ref="0x110dd54f0" loc="85:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="j" ref="0x110e01158" loc="121:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="rcmr" ref="0x110dd77d0" loc="77:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="TestNetworkMsg" ref="0x11099bb00"/>
          <typename><typedef-ref name="TestNetworkMsg" ref="0x1109956f8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="toSend" ref="0x110e01a88" loc="124:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
          <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="bi" ref="0x110e02170" loc="117:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
      </type-int>
    </variable>
    <variable name="MAXLEVELNODE" ref="0x110dd4358" loc="91:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="up_schedule" ref="0x110dff8b8" loc="130:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-array elements="I:12" size="I:144" alignment="I:1">
        <type-array elements="I:12" size="I:12" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
          </type-int>
        </type-array>
      </type-array>
    </variable>
    <variable name="init" ref="0x110e03a98" loc="115:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="flag" ref="0x110dd5e30" loc="88:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="delay_list" ref="0x110e040c8" loc="107:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-array elements="I:9" size="I:9" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="send_counter" ref="0x110e03180" loc="111:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="schedule_counter" ref="0x110dff308" loc="128:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-array elements="I:12" size="I:12" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="cap" ref="0x110e02608" loc="117:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
      </type-int>
    </variable>
    <variable name="delay_fp" ref="0x110dd23c8" loc="101:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x110555ec0"/>
          <typename><typedef-ref name="FILE" ref="0x11055fae8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="receiving_num" ref="0x110dd5020" loc="84:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="k" ref="0x110e015b0" loc="122:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="coordinatorId" ref="0x110e029a0" loc="118:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="rev_counter" ref="0x110e03638" loc="113:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="log_payload" ref="0x110dd7020" loc="75:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="TestNetworkMsg" ref="0x11099bb00"/>
          <typename><typedef-ref name="TestNetworkMsg" ref="0x1109956f8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="totalParents" ref="0x110dd59b8" loc="86:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="m_entry" ref="0x110dd9800" loc="74:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-tag size="I:1027" alignment="I:1"><nx_struct-ref name="logentry_t" scoped="" ref="0x110ddb380"/>
        <typename><typedef-ref name="logentry_t" scoped="" ref="0x110dd9488"/></typename>
      </type-tag>
    </variable>
    <variable name="superframe_length" ref="0x110dfeb20" loc="138:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
      </type-int>
    </variable>
    <variable name="sync" ref="0x110dfd020" loc="140:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="sd" ref="0x110e023b8" loc="117:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
      </type-int>
    </variable>
    <variable name="isSibling" ref="0x110dd64c8" loc="81:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="res_list" ref="0x110dd2c28" loc="105:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-array elements="I:9" size="I:9" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="i" ref="0x110e02cc0" loc="120:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="isParent" ref="0x110dd6020" loc="80:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="res_fp" ref="0x110dd2020" loc="97:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x110555ec0"/>
          <typename><typedef-ref name="FILE" ref="0x11055fae8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="fp" ref="0x110dd4c80" loc="95:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x110555ec0"/>
          <typename><typedef-ref name="FILE" ref="0x11055fae8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="isChild" ref="0x110dd7b28" loc="79:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="toSendLen" ref="0x110fa9bc0" loc="60:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderP.nc">
      <component-ref qname="GenericSlotSenderP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="toSend" ref="0x110fa9850" loc="59:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderP.nc">
      <component-ref qname="GenericSlotSenderP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
          <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="state" ref="0x110fa8020" loc="61:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderP.nc">
      <component-ref qname="GenericSlotSenderP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="evt" ref="0x110fd7020" loc="11:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AlarmMicro16P.nc">
      <component-ref qname="AlarmMicro16P"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1105d4e88"/>
          <typename><typedef-ref name="sim_event_t" ref="0x1105d2288"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="alarm" ref="0x110fd8670" loc="9:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AlarmMicro16P.nc">
      <component-ref qname="AlarmMicro16P"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
      </type-int>
    </variable>
    <variable name="zero" ref="0x110fd8b08" loc="10:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AlarmMicro16P.nc">
      <component-ref qname="AlarmMicro16P"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x1105cc8c0"/></typename>
      </type-int>
    </variable>
    <variable name="t0" ref="0x110febae0" loc="25:/Users/wangwenchen/wcps_apps/pure-tdma/sim/CounterMicro16P.nc">
      <component-ref qname="CounterMicro16P"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x1105cc8c0"/></typename>
      </type-int>
    </variable>
    <variable name="m_dt" ref="0x111041020" loc="67:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TransformAlarmC"/>
      <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x1110115a8"/></type-var>
    </variable>
    <variable name="m_t0" ref="0x111005bd8" loc="66:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="59:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; The original Alarm.</short>
      </documentation>
      <component-ref qname="TransformAlarmC"/>
      <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x1110115a8"/></type-var>
    </variable>
    <variable name="m_upper" ref="0x111048790" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="TransformCounterC"/>
      <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x11104e380"/></type-var>
    </variable>
    <variable name="frameLength" ref="0x11108c3e8" loc="56:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotterP.nc">
      <component-ref qname="GenericSlotterP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
      </type-int>
    </variable>
    <variable name="slotLength" ref="0x11108c020" loc="55:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotterP.nc">
      <component-ref qname="GenericSlotterP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
      </type-int>
    </variable>
    <variable name="nextFire" ref="0x11108ca88" loc="58:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotterP.nc">
      <component-ref qname="GenericSlotterP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
      </type-int>
    </variable>
    <variable name="slot" ref="0x11108dbb8" loc="54:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotterP.nc">
      <component-ref qname="GenericSlotterP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
      </type-int>
    </variable>
    <variable name="sync" ref="0x11108c710" loc="57:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotterP.nc">
      <component-ref qname="GenericSlotterP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="toSendLen" ref="0x1110eec28" loc="43:/opt/tinyos-2.x/apps/wustl/upma/system/SenderDispatcherP.nc">
      <component-ref qname="SenderDispatcherP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="toSend" ref="0x1110ee8b8" loc="42:/opt/tinyos-2.x/apps/wustl/upma/system/SenderDispatcherP.nc">
      <component-ref qname="SenderDispatcherP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
          <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="last_id" ref="0x1110ed020" loc="44:/opt/tinyos-2.x/apps/wustl/upma/system/SenderDispatcherP.nc">
      <component-ref qname="SenderDispatcherP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="syncPkt" ref="0x111123700" loc="51:/Users/wangwenchen/wcps_apps/pure-tdma/sim/BeaconSlotP.nc">
      <component-ref qname="BeaconSlotP"/>
      <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
        <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
      </type-tag>
    </variable>
    <variable name="syncPktLen" ref="0x111123a78" loc="52:/Users/wangwenchen/wcps_apps/pure-tdma/sim/BeaconSlotP.nc">
      <component-ref qname="BeaconSlotP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="channel" ref="0x111168398" loc="12:/opt/tinyos-2.x/tos/chips/cc2420/control/sim/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="panAddress" ref="0x111168a88" loc="14:/opt/tinyos-2.x/tos/chips/cc2420/control/sim/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
      </type-int>
    </variable>
    <variable name="address" ref="0x111168700" loc="13:/opt/tinyos-2.x/tos/chips/cc2420/control/sim/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
      </type-int>
    </variable>
    <variable name="hwAddressRecognition" ref="0x111166260" loc="16:/opt/tinyos-2.x/tos/chips/cc2420/control/sim/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="autoAck" ref="0x1111665a0" loc="17:/opt/tinyos-2.x/tos/chips/cc2420/control/sim/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="addressRecognition" ref="0x111168e38" loc="15:/opt/tinyos-2.x/tos/chips/cc2420/control/sim/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="hwAutoAck" ref="0x1111668f8" loc="18:/opt/tinyos-2.x/tos/chips/cc2420/control/sim/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="collision" ref="0x11127f8f0" loc="207:/opt/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="requestAck" ref="0x1112700c8" loc="60:/opt/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="receiveEvent" ref="0x11127f020" loc="204:/opt/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1105d4e88"/>
        <typename><typedef-ref name="sim_event_t" ref="0x1105d2288"/></typename>
      </type-tag>
    </variable>
    <variable name="incomingSource" ref="0x11127e440" loc="209:/opt/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="outstandingReceptionHead" ref="0x11126d6b0" loc="81:/opt/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:72" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x111270cc8"/>
          <typename><typedef-ref name="receive_message_t" scoped="" ref="0x11126f1d0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="incoming" ref="0x11127fdd8" loc="208:/opt/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
          <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="rssi" ref="0x111270880" loc="62:/opt/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="clearThreshold" ref="0x11127f398" loc="206:/opt/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="outgoing" ref="0x111232d40" loc="59:/opt/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
          <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="receiving" ref="0x111270420" loc="61:/opt/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="sendEvent" ref="0x11133c160" loc="73:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1105d4e88"/>
        <typename><typedef-ref name="sim_event_t" ref="0x1105d2288"/></typename>
      </type-tag>
    </variable>
    <variable name="initialized" ref="0x11133fd38" loc="65:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="error" ref="0x1113af020" loc="304:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="cca_enable_flag" ref="0x11133c508" loc="75:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="backoffCount" ref="0x11133e698" loc="67:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="neededFreeSamples" ref="0x11133ea58" loc="68:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="sending" ref="0x11133ee00" loc="69:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
          <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="running" ref="0x11133e1d8" loc="66:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="receiveBuffer" ref="0x11133c8b8" loc="77:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
        <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
      </type-tag>
    </variable>
    <variable name="sendingLength" ref="0x11133d928" loc="71:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="transmitting" ref="0x11133d460" loc="70:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="destNode" ref="0x11133dd80" loc="72:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="buffer" ref="0x111528140" loc="54:/opt/tinyos-2.x/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
        <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
      </type-tag>
    </variable>
    <variable name="bufferPointer" ref="0x111528528" loc="55:/opt/tinyos-2.x/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
          <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="addr" ref="0x11155c020" loc="51:/opt/tinyos-2.x/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x11090ac40"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x11155da38" loc="50:/opt/tinyos-2.x/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </variable>
    <variable name="current" ref="0x1115cb550" loc="51:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x1115cbc08" loc="52:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:8">
        <type-tag size="I:8" alignment="I:8"><struct-ref scoped="" ref="0x1115cce78"/>
          <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x1115cb1f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="cancelMask" ref="0x1115ca4f0" loc="53:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="toSendLen" ref="0x1116413f8" loc="64:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderP.nc">
      <component-ref qname="SSTdmaSlotSenderP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="toSend" ref="0x111641088" loc="63:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderP.nc">
      <component-ref qname="SSTdmaSlotSenderP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
          <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="state" ref="0x111641740" loc="65:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderP.nc">
      <component-ref qname="SSTdmaSlotSenderP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </variable>
    <variable name="seed" ref="0x11164e130" loc="41:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
      </type-int>
    </variable>
  </variables>
  <constants>
    <constant cst="I:3" name="ACIE" ref="0x110a7c900" loc="1075:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCDR7" ref="0x110a62c58" loc="943:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PB6" ref="0x110a73928" loc="1132:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB81" ref="0x110a7e020" loc="1058:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_ADC_DIFF_ADC22_1x" ref="0x110ab3b58" loc="76:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1BL" ref="0x110a2ea38" loc="140:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_DDRD" ref="0x110a0c020" loc="81:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOIE0" ref="0x110a53020" loc="786:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PING0" ref="0x110aa7328" loc="1299:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_FREE_RUNNING_OFF" ref="0x110aac070" loc="124:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="LEDS_LED4" ref="0x110db8af0" loc="37:/opt/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_ADC_DIFF_ADC51_1x" ref="0x110ab4b38" loc="71:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SRL0" ref="0x110a3a620" loc="705:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS30" ref="0x110a64920" loc="924:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES3" ref="0x110a65950" loc="919:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINA2" ref="0x110a74c40" loc="1126:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINB4" ref="0x110a96328" loc="1154:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINC6" ref="0x110a92950" loc="1182:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADLAR" ref="0x110a79630" loc="1093:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PA2" ref="0x110a778f0" loc="1106:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGMA1" ref="0x110a45020" loc="876:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGMB3" ref="0x110a67020" loc="902:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="TOS_SERIAL_UNKNOWN_ID" ref="0x110922020" loc="87:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWA3" ref="0x110a3d920" loc="687:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1B1" ref="0x110a45c78" loc="882:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADHSM" ref="0x110a5f938" loc="961:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="P_ALL" ref="0x1103343e8" loc="80:/usr/include/sys/wait.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INT3" ref="0x110a31320" loc="763:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC31" ref="0x110a37c88" loc="730:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINF3" ref="0x110aab938" loc="1275:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM21" ref="0x110a48328" loc="858:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM33" ref="0x110a65c58" loc="920:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_SNGL_ADC5" ref="0x110ab7670" loc="55:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XMM0" ref="0x110a39c40" loc="714:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="ATM128_ICR3H" ref="0x110a23858" loc="269:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS2" ref="0x110a4b310" loc="839:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="ATM128_TCCR0" ref="0x110a2b898" loc="169:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC1C" ref="0x110a62630" loc="939:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_RIGHT_ADJUST" ref="0x110ab9ce8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PB0" ref="0x110a72be0" loc="1138:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3AL" ref="0x110a21498" loc="283:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WDP1" ref="0x110a5f020" loc="956:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PC2" ref="0x110a94310" loc="1166:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PD4" ref="0x110a908f0" loc="1194:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PE6" ref="0x110a8b020" loc="1222:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM00" ref="0x110a4a630" loc="847:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ADPS2" ref="0x110a7a628" loc="1086:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWA6" ref="0x110a3d020" loc="684:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:140" name="ATM128_TCCR3C" ref="0x110a20de0" loc="298:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INT6" ref="0x110a32948" loc="760:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW10" ref="0x110a4f928" loc="817:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS0" ref="0x110a58328" loc="1004:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_PORTE" ref="0x110a10390" loc="36:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC0" ref="0x110a4bc10" loc="844:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PIND0" ref="0x110a8c938" loc="1218:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINE2" ref="0x110a87020" loc="1246:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WDCE" ref="0x110a60648" loc="953:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_PRESCALE_16" ref="0x110aaf7b0" loc="100:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES" ref="0x110a42c50" loc="901:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ATM128_TCNT0" ref="0x110a2b528" loc="166:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_POWER_ADC_NR" ref="0x110abb730" loc="122:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDA6" ref="0x110a76640" loc="1112:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC71" ref="0x110a35650" loc="740:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="REFS0" ref="0x110a79328" loc="1092:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDF7" ref="0x110a85340" loc="1261:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="SERIAL_PROTO_PACKET_UNKNOWN" ref="0x110921278" loc="95:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSR" ref="0x110a0f4b0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="ATM128_TIMSK" ref="0x110a2aa60" loc="182:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="ATM128_TCCR1B" ref="0x110a2c6f0" loc="154:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="NOISE_BIN_SIZE" ref="0x11071f5d0" loc="48:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="OCDR2" ref="0x110a61c40" loc="948:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM00" ref="0x110a58020" loc="1003:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCIE2" ref="0x110a2f958" loc="779:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF3C" ref="0x110a50c38" loc="811:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SM2" ref="0x110a4e600" loc="821:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV1" ref="0x110a52320" loc="794:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PF0" ref="0x110a85020" loc="1258:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ10" ref="0x110a59330" loc="997:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PG2" ref="0x110aaac18" loc="1283:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="ATM128_ADC_SNGL_1_23" ref="0x110ab2988" loc="80:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:123" name="SIMPLE_TDMA_SYNC" ref="0x1111308d0" loc="32:/Users/wangwenchen/wcps_apps/pure-tdma/sim/BeaconSlotP.nc">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="ATM128_RAMPZ" ref="0x110a298a8" loc="194:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INTF3" ref="0x110a30c40" loc="773:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWWC" ref="0x110a3e628" loc="679:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RAMPZ0" ref="0x110a37960" loc="727:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_ADC_DIFF_ADC10_10x" ref="0x110ab6358" loc="59:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_ADC_DIFF_ADC22_10x" ref="0x110ab6d10" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="XDIV3" ref="0x110a38c40" loc="721:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="HDLC_CTLESC_BYTE" ref="0x110903c00" loc="78:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE1" ref="0x110a55910" loc="1025:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_ENABLE_OFF" ref="0x110ad3398" loc="136:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="TEST_NETWORK_QUEUE_SIZE" ref="0x11099c810" loc="10:TestNetworkC.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="EOFF" ref="0x11050ba98" loc="45:/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_ENABLE_ON" ref="0x110ad36c8" loc="137:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3C" ref="0x110a23bc8" loc="272:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDF1" ref="0x110a84620" loc="1267:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDG3" ref="0x110aa9930" loc="1289:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM1" ref="0x110a83020" loc="1027:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDB0" ref="0x110a97620" loc="1148:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDC2" ref="0x110a93c20" loc="1176:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDD4" ref="0x110a8e320" loc="1204:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDE6" ref="0x110a8a930" loc="1232:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF1B" ref="0x110a52020" loc="793:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC3B" ref="0x110a63950" loc="933:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PE1" ref="0x110a8a020" loc="1227:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE1A" ref="0x110a54330" loc="782:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPR0" ref="0x110a5c920" loc="980:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PF3" ref="0x110a86600" loc="1255:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC0" ref="0x110a83340" loc="1030:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ACSR" ref="0x110a0e020" loc="54:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCW" ref="0x110a106f0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="ATM128_ETIMSK" ref="0x110a24dd8" loc="264:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="XDIV6" ref="0x110a38328" loc="718:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="ATM128_DDRG" ref="0x110a28dd0" loc="216:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE3" ref="0x110a51638" loc="802:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINF1" ref="0x110aaa020" loc="1277:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PING3" ref="0x110aa8950" loc="1296:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CSMA_SLOT" ref="0x110db19c8" loc="6:/opt/tinyos-2.x/apps/wustl/upma/system/SenderDispatcher.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="LEDS_LED7" ref="0x110deb9f0" loc="40:/opt/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWS5" ref="0x110a3b020" loc="696:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS21" ref="0x110a48928" loc="860:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINA5" ref="0x110a74328" loc="1123:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINB7" ref="0x110a97948" loc="1151:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:67" name="SERIAL_PROTO_ACK" ref="0x1109225c0" loc="92:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1B" ref="0x110a2e6e0" loc="139:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="ATM128_TWBR" ref="0x110a26a68" loc="238:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PA5" ref="0x110a77020" loc="1103:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1" ref="0x110a09bf8" loc="134:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_FLAG_OFF" ref="0x110aac9d0" loc="130:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDA1" ref="0x110a75620" loc="1117:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDB3" ref="0x110a71c20" loc="1145:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDC5" ref="0x110a93320" loc="1173:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDD7" ref="0x110a8f920" loc="1201:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_FREE_RUNNING_ON" ref="0x110aac3b0" loc="125:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_MIN_TRACE" ref="0x11071e4a8" loc="52:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3BL" ref="0x110a22a40" loc="278:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC10" ref="0x110a36c40" loc="735:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINF6" ref="0x110aab020" loc="1272:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDF2" ref="0x110a84320" loc="1266:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDG4" ref="0x110aa9630" loc="1288:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS02" ref="0x110a4ac38" loc="849:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM00" ref="0x110a4a020" loc="845:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM12" ref="0x110a66938" loc="912:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_POWER_IDLE" ref="0x110abb3a0" loc="121:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COMB0" ref="0x110a46630" loc="873:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ERESERVE" ref="0x1105ad778" loc="49:/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE1" ref="0x110a55020" loc="1022:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_ADC_DIFF_ADC01_1x" ref="0x110ab5a60" loc="66:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:144" name="ATM128_UBRR0H" ref="0x110a1f1d0" loc="301:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:154" name="ATM128_UCSR1B" ref="0x110a1e020" loc="313:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE" ref="0x110a82c50" loc="1040:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ADIE" ref="0x110a7a320" loc="1085:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="JTD" ref="0x110a4d020" loc="826:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_ENABLE_OFF" ref="0x110aaeca0" loc="112:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="ATM128_XMCRA" ref="0x110a26390" loc="232:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIF" ref="0x110a5e950" loc="968:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM3C1" ref="0x110a43c60" loc="894:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SRE" ref="0x110a4f330" loc="815:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_PINC" ref="0x110a0c6f0" loc="87:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SRW01" ref="0x110a3a928" loc="706:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINC1" ref="0x110a91938" loc="1187:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PIND3" ref="0x110a8c020" loc="1215:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINE5" ref="0x110a88630" loc="1243:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TDMA_SLOT" ref="0x110db1698" loc="5:/opt/tinyos-2.x/apps/wustl/upma/system/SenderDispatcher.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:56" name="ATM128_EIFR" ref="0x110a2adc0" loc="185:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="ATM128_MCUCR" ref="0x110a2a390" loc="176:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCDR0" ref="0x110a60328" loc="950:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3" ref="0x110a21b60" loc="287:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_SNGL_ADC2" ref="0x110ab8d18" loc="52:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_ADC_DIFF_ADC32_200x" ref="0x110ab5730" loc="65:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDE1" ref="0x110a89920" loc="1237:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_PRESCALE_4" ref="0x110aaf188" loc="98:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="ATM128_OCR0" ref="0x110a2b1b8" loc="163:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC50" ref="0x110a34630" loc="745:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="ATM128_ICR1H" ref="0x110a2e370" loc="136:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3L" ref="0x110a23508" loc="268:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INTF1" ref="0x110a2f328" loc="775:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="EINVAL" ref="0x1105ad140" loc="47:/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_ADC_DIFF_ADC10_200x" ref="0x110ab69d8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_ADC_DIFF_ADC22_200x" ref="0x110ab53f0" loc="64:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN" ref="0x110720020" loc="44:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_ADC_DIFF_ADC12_1x" ref="0x110ab3828" loc="75:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SE" ref="0x110a4fc10" loc="818:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ADSC" ref="0x110a7b948" loc="1082:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="OCDR5" ref="0x110a61328" loc="945:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PB4" ref="0x110a72020" loc="1134:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="ATM128_OCR1AH" ref="0x110a2d7f0" loc="146:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1CL" ref="0x110a24020" loc="254:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PC6" ref="0x110a95620" loc="1162:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_PINF" ref="0x110a137d0" loc="27:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_DDRB" ref="0x110a0b4a0" loc="99:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="LEDS_LED2" ref="0x110db8140" loc="35:/opt/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINA0" ref="0x110a73328" loc="1128:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINB2" ref="0x110a96938" loc="1156:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINC4" ref="0x110a91020" loc="1184:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PIND6" ref="0x110a8d650" loc="1212:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES1" ref="0x110a66328" loc="910:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWPS0" ref="0x110a3bc30" loc="700:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN" ref="0x110a81928" loc="1044:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ01" ref="0x110a58638" loc="1005:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PA0" ref="0x110a76020" loc="1108:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL1" ref="0x110a5a350" loc="992:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INTF6" ref="0x110a30328" loc="770:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWA1" ref="0x110a3c020" loc="689:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC1" ref="0x110a56c30" loc="1021:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM1C1" ref="0x110a44330" loc="884:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INT1" ref="0x110a31920" loc="765:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_ENABLE_ON" ref="0x110aad020" loc="113:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM31" ref="0x110a42328" loc="896:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS0" ref="0x110a4b8f0" loc="841:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE1" ref="0x110a80c60" loc="1052:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-5" name="NOISE_MAX" ref="0x110720418" loc="45:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACME" ref="0x110a5fc38" loc="962:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCL" ref="0x110a10d68" loc="43:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC1A" ref="0x110a62020" loc="937:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PC0" ref="0x110a948f0" loc="1168:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PD2" ref="0x110a8f020" loc="1196:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PE4" ref="0x110a8b600" loc="1224:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PF6" ref="0x110a87c30" loc="1252:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ADPS0" ref="0x110a7ac38" loc="1088:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWA4" ref="0x110a3d620" loc="686:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM0" ref="0x110a5b320" loc="985:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_ADC_DIFF_ADC21_1x" ref="0x110ab41a8" loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:139" name="ATM128_TCCR3A" ref="0x110a20a68" loc="295:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NOISE_DEFAULT_ELEMENT_SIZE" ref="0x11071fd00" loc="50:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_PORTC" ref="0x110a0cdc0" loc="93:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB80" ref="0x110a7d638" loc="1067:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINE0" ref="0x110a87630" loc="1248:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS00" ref="0x110a49320" loc="851:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS12" ref="0x110a66c38" loc="913:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="MAXSIBLINGS" ref="0x11099b360" loc="13:TestNetworkC.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC" ref="0x110a42950" loc="900:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE0" ref="0x110a7e970" loc="1063:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="ATM128_XDIV" ref="0x110a29c08" loc="197:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDA4" ref="0x110a76c40" loc="1114:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDB6" ref="0x110a71320" loc="1142:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPMEN" ref="0x110a32328" loc="756:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC01" ref="0x110a35020" loc="736:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDF5" ref="0x110a85940" loc="1263:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="BLBSET" ref="0x110a33948" loc="753:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOCC" ref="0x110a63320" loc="929:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PGWRT" ref="0x110a33c50" loc="754:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COMA1" ref="0x110a47c78" loc="870:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="ATM128_OSCCAL" ref="0x110a26708" loc="235:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM10" ref="0x110a5a960" loc="994:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="AS0" ref="0x110a47020" loc="864:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="ATM128_PORTF" ref="0x110a28710" loc="210:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL1" ref="0x110a59640" loc="998:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN1" ref="0x110a7f630" loc="1055:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ACBG" ref="0x110a7c020" loc="1072:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE0" ref="0x110a54c50" loc="785:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF3A" ref="0x110a50328" loc="808:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SM0" ref="0x110a4e310" loc="820:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PG0" ref="0x110aa9310" loc="1285:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:149" name="ATM128_UCSR0C" ref="0x110a1f548" loc="304:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="ATM128_TCNT1H" ref="0x110a2c378" loc="151:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3L" ref="0x110a20020" loc="288:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDE" ref="0x110a60938" loc="954:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADFR" ref="0x110a7bc48" loc="1083:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="MUX1" ref="0x110a78320" loc="1097:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_ADC_DIFF_ADC02_1x" ref="0x110ab34f8" loc="74:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_PRESCALE_32" ref="0x110aafac8" loc="101:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM3A0" ref="0x110a43330" loc="891:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="AM_TESTNETWORKMSG" ref="0x1101199f0" loc="6:TestNetworkC.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XDIV1" ref="0x110a37328" loc="723:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="MAXCHILDREN" ref="0x11099b020" loc="12:TestNetworkC.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ2" ref="0x110a80020" loc="1046:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3A" ref="0x110a21140" loc="282:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:156" name="ATM128_UDR1" ref="0x110a1e6f8" loc="319:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDG1" ref="0x110aa8020" loc="1291:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FALSE" ref="0x1105cdba8" loc="68:/opt/tinyos-2.x/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="EBUSY" ref="0x11050bda0" loc="46:/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="ATM128_TIMER0_TICKSPPS" ref="0x110ace3f0" loc="55:/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDC0" ref="0x110a92320" loc="1178:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDD2" ref="0x110a8e920" loc="1206:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDE4" ref="0x110a89020" loc="1234:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CHANNEL_BANDGAP" ref="0x110acfb98" loc="52:/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE3C" ref="0x110a51948" loc="803:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC41" ref="0x110a34938" loc="746:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWGCE" ref="0x110a3c628" loc="691:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CSB1" ref="0x110a67928" loc="905:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MUX4" ref="0x110a79930" loc="1094:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_POWER_EXT_STANDBY" ref="0x110abbaf8" loc="123:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR0" ref="0x110a82020" loc="1034:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PB7" ref="0x110a73638" loc="1131:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE1" ref="0x110a54948" loc="784:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="DEFAULT_CHANNEL_SIZE" ref="0x11060dae8" loc="40:/opt/tinyos-2.x/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_DDRE" ref="0x110a10020" loc="33:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PING1" ref="0x110aa7020" loc="1298:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="LEDS_LED5" ref="0x110deb020" loc="38:/opt/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWS3" ref="0x110a3b620" loc="698:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SRL1" ref="0x110a3a320" loc="704:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS31" ref="0x110a64620" loc="923:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINA3" ref="0x110a74938" loc="1125:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:116" name="ATM128_TWCR" ref="0x110a25878" loc="250:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINB5" ref="0x110a96020" loc="1153:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINC7" ref="0x110a92648" loc="1181:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CPOL" ref="0x110a5c020" loc="977:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SPE" ref="0x110a5d630" loc="974:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PA3" ref="0x110a77600" loc="1105:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_ADC_DIFF_ADC11_1x" ref="0x110ab5d90" loc="67:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM1A0" ref="0x110a45968" loc="881:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:115" name="ATM128_TWDR" ref="0x110a25518" loc="247:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INT4" ref="0x110a31020" loc="762:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3CL" ref="0x110a22020" loc="273:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="ATM128_OCR3AH" ref="0x110a217f0" loc="284:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC20" ref="0x110a36630" loc="733:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINF4" ref="0x110aab630" loc="1274:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM10" ref="0x110a44c50" loc="887:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_SNGL_ADC6" ref="0x110ab7978" loc="56:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XMM1" ref="0x110a39940" loc="713:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COMC0" ref="0x110a46c40" loc="875:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NOISE_QUANTIZE_INTERVAL" ref="0x110720c20" loc="47:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PB1" ref="0x110a728f0" loc="1137:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PC3" ref="0x110a94020" loc="1165:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="WDP2" ref="0x110a60c38" loc="955:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PD5" ref="0x110a90600" loc="1193:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PE7" ref="0x110a8cc48" loc="1221:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:152" name="ATM128_UBRR1H" ref="0x110a1f8c0" loc="307:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM01" ref="0x110a4a328" loc="846:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUSR" ref="0x110a2bc08" loc="172:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE3" ref="0x110a52c50" loc="799:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDRF" ref="0x110a4d620" loc="828:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM0" ref="0x110a4c630" loc="835:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RWWSRE" ref="0x110a33638" loc="752:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE" ref="0x110a81328" loc="1042:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INT7" ref="0x110a32648" loc="759:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE0" ref="0x110a83c38" loc="1033:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SRW11" ref="0x110a39020" loc="708:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_PINA" ref="0x110a0bb70" loc="105:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS1" ref="0x110a5ac68" loc="995:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PIND1" ref="0x110a8c630" loc="1217:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINE3" ref="0x110a88c40" loc="1245:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWSTA" ref="0x110a3e020" loc="677:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWIE" ref="0x110a3ec28" loc="681:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1" ref="0x110a2db60" loc="149:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_PRESCALE_2" ref="0x110ab0aa8" loc="96:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_SNGL_ADC0" ref="0x110ab8708" loc="50:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDA7" ref="0x110a76340" loc="1111:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CHANNEL_GND" ref="0x110ace020" loc="53:/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC60" ref="0x110a34020" loc="743:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="REFS1" ref="0x110a79020" loc="1091:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_ADC_DIFF_ADC00_200x" ref="0x110ab6698" loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE0" ref="0x110a7e350" loc="1061:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_PRESCALE_128" ref="0x110aae198" loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_ADC_DIFF_ADC71_1x" ref="0x110ab31c8" loc="73:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:122" name="ATM128_TCCR1C" ref="0x110a246f0" loc="258:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCDR3" ref="0x110a61938" loc="947:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PB2" ref="0x110a72600" loc="1136:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM01" ref="0x110a59c78" loc="1002:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="ATM128_OCR1BH" ref="0x110a2ed90" loc="141:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PC4" ref="0x110a95c00" loc="1164:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PD6" ref="0x110a90310" loc="1192:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PF1" ref="0x110a86be0" loc="1257:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOV2" ref="0x110a53640" loc="790:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PG3" ref="0x110aaa928" loc="1282:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:238" name="CL_TEST" ref="0x11099c458" loc="9:TestNetworkC.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ11" ref="0x110a59020" loc="996:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INTF4" ref="0x110a30938" loc="772:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_SPCR" ref="0x110a0d1b8" loc="69:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="XDIV4" ref="0x110a38938" loc="720:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC" ref="0x110a57310" loc="1011:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWEN" ref="0x110a3e928" loc="680:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="ATM128_ASSR" ref="0x110a2cdc8" loc="160:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_POWER_SAVE" ref="0x110abbe78" loc="124:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDB1" ref="0x110a97320" loc="1147:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDC3" ref="0x110a93920" loc="1175:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDD5" ref="0x110a8e020" loc="1203:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDE7" ref="0x110a8a630" loc="1231:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCF1C" ref="0x110a4f020" loc="812:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC3C" ref="0x110a63c58" loc="934:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PD0" ref="0x110a8f600" loc="1198:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PE2" ref="0x110a8bbe0" loc="1226:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE1B" ref="0x110a54640" loc="783:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SPR1" ref="0x110a5c620" loc="979:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PF4" ref="0x110a86310" loc="1254:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="ATM128_WDTCR" ref="0x110a0aa90" loc="119:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN0" ref="0x110a7ec78" loc="1064:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL" ref="0x110a5cc48" loc="983:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CHANNEL_THERMISTOR" ref="0x110acf438" loc="50:/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM20" ref="0x110a48020" loc="857:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XMBK" ref="0x110a39340" loc="711:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC1" ref="0x110a56930" loc="1020:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="AM_TESTNETWORKMSGG" ref="0x110119d78" loc="7:TestNetworkC.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF3" ref="0x110a50020" loc="807:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="ATM128_EIMSK" ref="0x110a291c8" loc="188:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ENOMEM" ref="0x1105addb0" loc="51:/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_PORTA" ref="0x110a0a390" loc="111:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWS6" ref="0x110a3cc48" loc="695:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS22" ref="0x110a48628" loc="859:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS10" ref="0x110a65320" loc="915:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC3" ref="0x110a65648" loc="918:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ACIS0" ref="0x110a7b328" loc="1078:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1C" ref="0x110a25be8" loc="253:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINA6" ref="0x110a74020" loc="1122:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_ADC_DIFF_ADC32_10x" ref="0x110ab50b0" loc="63:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:106" name="ATM128_EICRA" ref="0x110a27c00" loc="226:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ACI" ref="0x110a7c600" loc="1074:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE" ref="0x110a57610" loc="1012:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PA6" ref="0x110a78c20" loc="1102:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="SERIAL_PROTO_PACKET_NOACK" ref="0x110922d48" loc="94:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CHANNEL_BATTERY" ref="0x110acf830" loc="51:/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDA2" ref="0x110a75320" loc="1116:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDB4" ref="0x110a71920" loc="1144:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDC6" ref="0x110a93020" loc="1172:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC11" ref="0x110a36938" loc="734:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINF7" ref="0x110a84c48" loc="1271:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_PRESCALE_2b" ref="0x110ab0dc0" loc="97:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDF3" ref="0x110a84020" loc="1265:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XDIVEN" ref="0x110a38020" loc="717:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOCA" ref="0x110a64c40" loc="927:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM01" ref="0x110a4a938" loc="848:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM13" ref="0x110a66630" loc="911:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COMB1" ref="0x110a46328" loc="872:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ELAST" ref="0x110691468" loc="53:/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE" ref="0x110a56020" loc="1015:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IVSEL" ref="0x110a4e908" loc="822:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_ADC_DIFF_ADC32_1x" ref="0x110ab2020" loc="77:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ACIC" ref="0x110a7cc00" loc="1076:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_UCSR0A" ref="0x110a0ea88" loc="63:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:157" name="ATM128_UCSR1C" ref="0x110a1ea70" loc="322:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TSM" ref="0x110a5f630" loc="960:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PUD" ref="0x110a5e020" loc="963:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DORD" ref="0x110a5d930" loc="975:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADIF" ref="0x110a7a020" loc="1084:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_START_CONVERSION_OFF" ref="0x110aad690" loc="118:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB8" ref="0x110a80620" loc="1048:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="P_PID" ref="0x110334658" loc="81:/usr/include/sys/wait.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="ATM128_XMCRB" ref="0x110a26020" loc="229:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM3B0" ref="0x110a43950" loc="893:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="JTRF" ref="0x110a4d320" loc="827:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_PIND" ref="0x110a0dbd8" loc="78:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="LEDS_LED0" ref="0x110dbb760" loc="33:/opt/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINB0" ref="0x110a95020" loc="1158:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCF2" ref="0x110a53340" loc="789:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM0" ref="0x110a4cc30" loc="837:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINC2" ref="0x110a91630" loc="1186:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PIND4" ref="0x110a8dc60" loc="1214:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ0" ref="0x110a5bc30" loc="988:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINE6" ref="0x110a88328" loc="1242:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPMIE" ref="0x110a33020" loc="750:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCDR1" ref="0x110a60020" loc="949:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_SNGL_ADC3" ref="0x110ab7060" loc="53:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PSR0" ref="0x110a5e320" loc="964:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WCOL" ref="0x110a5ec50" loc="969:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDD0" ref="0x110a8d020" loc="1208:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDE2" ref="0x110a89620" loc="1236:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE3A" ref="0x110a51020" loc="800:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC51" ref="0x110a34328" loc="744:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X0" ref="0x110a82620" loc="1036:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="ATM128_TWSR" ref="0x110a26dc8" loc="241:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MUX2" ref="0x110a78020" loc="1096:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="OCDR6" ref="0x110a61020" loc="944:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB80" ref="0x110a7d940" loc="1068:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PB5" ref="0x110a73c18" loc="1133:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PC7" ref="0x110a95330" loc="1161:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_DDRC" ref="0x110a0ca50" loc="90:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="ATM128_PING" ref="0x110a28a70" loc="213:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="LEDS_LED3" ref="0x110db8618" loc="36:/opt/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE" ref="0x110a81020" loc="1041:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINA1" ref="0x110a73020" loc="1127:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINB3" ref="0x110a96630" loc="1155:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINC5" ref="0x110a92c58" loc="1183:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWPS1" ref="0x110a3b928" loc="699:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PIND7" ref="0x110a8d348" loc="1211:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ02" ref="0x110a7d330" loc="1066:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PA1" ref="0x110a77be0" loc="1107:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGMA0" ref="0x110a45328" loc="877:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGMB2" ref="0x110a67328" loc="903:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INTF7" ref="0x110a30020" loc="769:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWA2" ref="0x110a3dc20" loc="688:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CHANNEL_RSSI" ref="0x110acf020" loc="49:/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_PRESCALE_8" ref="0x110aaf498" loc="99:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TCR0UB" ref="0x110a47950" loc="867:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM1B0" ref="0x110a44020" loc="883:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INT2" ref="0x110a31620" loc="764:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="ATM128_OCR3BH" ref="0x110a22d98" loc="279:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC30" ref="0x110a36020" loc="731:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINF2" ref="0x110aabc40" loc="1276:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PING4" ref="0x110aa8648" loc="1295:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_PRESCALE" ref="0x110aae4f0" loc="107:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM20" ref="0x110a49948" loc="855:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM32" ref="0x110a64020" loc="921:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="ATM128_ADC_DIFF_ADC42_1x" ref="0x110ab2350" loc="78:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_SNGL_ADC4" ref="0x110ab7368" loc="54:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS1" ref="0x110a4b600" loc="840:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1AL" ref="0x110a2d498" loc="145:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWINT" ref="0x110a40888" loc="675:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="ATM128_SFIOR" ref="0x110a0a720" loc="116:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_SERIAL_CC1000_ID" ref="0x110923758" loc="85:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC" ref="0x110a10a28" loc="41:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC1B" ref="0x110a62328" loc="938:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM" ref="0x110a56610" loc="1017:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PC1" ref="0x110a94600" loc="1167:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WDP0" ref="0x110a5f320" loc="957:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PD3" ref="0x110a90be0" loc="1195:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PE5" ref="0x110a8b310" loc="1223:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PF7" ref="0x110a87940" loc="1251:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ADPS1" ref="0x110a7a930" loc="1087:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWA5" ref="0x110a3d320" loc="685:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE1" ref="0x110a54020" loc="781:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="EXTRF" ref="0x110a4dc28" loc="830:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM1" ref="0x110a5b020" loc="984:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ" ref="0x110a81c28" loc="1045:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_POWER_STANDBY" ref="0x110aba248" loc="125:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="BORF" ref="0x110a4d920" loc="829:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:138" name="ATM128_TCCR3B" ref="0x110a206f0" loc="292:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="BEACON_SLOT" ref="0x110db1d08" loc="7:/opt/tinyos-2.x/apps/wustl/upma/system/SenderDispatcher.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB81" ref="0x110a7fc48" loc="1057:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_PORTD" ref="0x110a0c390" loc="84:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINE1" ref="0x110a87328" loc="1247:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS01" ref="0x110a49020" loc="850:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PGERS" ref="0x110a32020" loc="755:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE1" ref="0x110a7f020" loc="1053:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ADEN" ref="0x110a7b648" loc="1081:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADMUX" ref="0x110a0fb78" loc="51:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDA5" ref="0x110a76940" loc="1113:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="TOS_AM_GROUP" ref="0x110908790" loc="27:/opt/tinyos-2.x/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDB7" ref="0x110a71020" loc="1141:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC70" ref="0x110a35958" loc="741:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDF6" ref="0x110a85640" loc="1262:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="ATM128_TCNT3H" ref="0x110a20378" loc="289:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:68" name="SERIAL_PROTO_PACKET_ACK" ref="0x110922978" loc="93:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="ATM128_TCCR1A" ref="0x110a2ca68" loc="157:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="ATM128_SREG" ref="0x110a28020" loc="202:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM11" ref="0x110a5a658" loc="993:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:121" name="ATM128_OCR1CH" ref="0x110a24378" loc="255:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_START_CONVERSION_ON" ref="0x110aad9f8" loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOS_SERIAL_ACTIVE_MESSAGE_ID" ref="0x1109233b8" loc="84:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="ATM128_PORTG" ref="0x110a271c8" loc="219:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF3B" ref="0x110a50630" loc="809:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SM1" ref="0x110a4e020" loc="819:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PG1" ref="0x110aa9020" loc="1284:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOV0" ref="0x110a52920" loc="796:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SAMPLE_RATE_KEY" ref="0x11099c140" loc="8:TestNetworkC.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_UBRR0L" ref="0x110a0e398" loc="57:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INTF2" ref="0x110a2f020" loc="774:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ECANCEL" ref="0x11050b798" loc="44:/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM3A1" ref="0x110a43020" loc="890:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_SPDR" ref="0x110a0d878" loc="75:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XDIV2" ref="0x110a37020" loc="722:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_VREF_2_56" ref="0x110ab96c8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR" ref="0x110a57be8" loc="1014:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE0" ref="0x110a82320" loc="1035:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_ADC_DIFF_ADC31_1x" ref="0x110ab44d8" loc="69:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_HASHTABLE_SIZE" ref="0x11071e140" loc="51:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3B" ref="0x110a226e8" loc="277:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X" ref="0x110a56310" loc="1016:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_VREF_RSVD" ref="0x110ab9328" loc="37:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDF0" ref="0x110a84920" loc="1268:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MAXPARENTS" ref="0x11099cb48" loc="11:TestNetworkC.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDG2" ref="0x110aa9c30" loc="1290:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_DIFF_ADC00_10x" ref="0x110ab6020" loc="58:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM0" ref="0x110a82928" loc="1037:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW" ref="0x110a4f620" loc="816:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ACD" ref="0x110a7dc50" loc="1071:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDC1" ref="0x110a92020" loc="1177:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDD3" ref="0x110a8e620" loc="1205:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDE5" ref="0x110a8ac30" loc="1233:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF1A" ref="0x110a53c48" loc="792:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC3A" ref="0x110a63648" loc="932:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PE0" ref="0x110a8a310" loc="1228:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PF2" ref="0x110a868f0" loc="1256:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUCSR" ref="0x110a2a020" loc="173:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS" ref="0x110a5b620" loc="986:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PG4" ref="0x110aaa638" loc="1281:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1L" ref="0x110a2e020" loc="135:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="TOTALNODES" ref="0x11099b698" loc="14:TestNetworkC.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ENOACK" ref="0x110691140" loc="52:/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CSB2" ref="0x110a67628" loc="904:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:175" name="SIM_LOG_OUTPUT_COUNT" ref="0x110609240" loc="56:/opt/tinyos-2.x/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPI2X" ref="0x110a5d020" loc="970:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:126" name="HDLC_FLAG_BYTE" ref="0x110903888" loc="77:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CPHA" ref="0x110a5c320" loc="978:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF1" ref="0x110a53940" loc="791:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR1" ref="0x110a55610" loc="1024:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="ATM128_DDRF" ref="0x110a283a0" loc="207:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOIE2" ref="0x110a2fc60" loc="780:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINF0" ref="0x110aaa328" loc="1278:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PING2" ref="0x110aa8c58" loc="1297:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:64" name="LEDS_LED6" ref="0x110deb4f8" loc="39:/opt/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWS4" ref="0x110a3b320" loc="697:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRL2" ref="0x110a3a020" loc="703:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINA4" ref="0x110a74630" loc="1124:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ERETRY" ref="0x1105ad450" loc="48:/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS20" ref="0x110a48c28" loc="861:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC1" ref="0x110a66020" loc="909:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS32" ref="0x110a64320" loc="922:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1A" ref="0x110a2d140" loc="144:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINB6" ref="0x110a97c50" loc="1152:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PA4" ref="0x110a77310" loc="1104:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDA0" ref="0x110a75920" loc="1118:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDB2" ref="0x110a97020" loc="1146:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM1A1" ref="0x110a45658" loc="880:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDC4" ref="0x110a93620" loc="1174:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INT5" ref="0x110a32c48" loc="761:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDD6" ref="0x110a8fc20" loc="1202:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_SLOT" ref="0x110dae070" loc="8:/opt/tinyos-2.x/apps/wustl/upma/system/SenderDispatcher.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC21" ref="0x110a36328" loc="732:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINF5" ref="0x110aab328" loc="1273:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWSTO" ref="0x110a3e328" loc="678:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM11" ref="0x110a44948" loc="886:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_SNGL_ADC7" ref="0x110ab7c80" loc="57:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XMM2" ref="0x110a39640" loc="712:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COMC1" ref="0x110a46938" loc="874:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PSR321" ref="0x110a5e630" loc="965:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:124" name="ATM128_ETIFR" ref="0x110a24a60" loc="261:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="ATM128_TCCR2" ref="0x110a09898" loc="131:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE0" ref="0x110a83948" loc="1032:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:155" name="ATM128_UCSR1A" ref="0x110a1e398" loc="316:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM1" ref="0x110a4b020" loc="838:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIE" ref="0x110a5d340" loc="973:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM3C0" ref="0x110a42020" loc="895:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE1" ref="0x110a55310" loc="1023:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_PINB" ref="0x110a0b140" loc="96:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SRW00" ref="0x110a3ac30" loc="707:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINC0" ref="0x110a91c40" loc="1188:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF0" ref="0x110a52620" loc="795:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC2" ref="0x110a49640" loc="854:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PIND2" ref="0x110a8c328" loc="1216:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINE4" ref="0x110a88938" loc="1244:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_VREF_OFF" ref="0x110abac20" loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE" ref="0x110a578f8" loc="1013:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ACO" ref="0x110a7c310" loc="1073:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_LEFT_ADJUST" ref="0x110ab8140" loc="44:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN_QUANTIZE" ref="0x110720868" loc="46:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MSTR" ref="0x110a5dc30" loc="976:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="ATM128_ADC_DIFF_ADC52_1x" ref="0x110ab2680" loc="79:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="ATM128_TCNT2" ref="0x110a09528" loc="128:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_SNGL_ADC1" ref="0x110ab8a10" loc="51:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="NOISE_NUM_VALUES" ref="0x11071ebb0" loc="53:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDE0" ref="0x110a89c20" loc="1238:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC61" ref="0x110a35c60" loc="742:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE1" ref="0x110a80950" loc="1051:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INTF0" ref="0x110a2f630" loc="776:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PORF" ref="0x110a4c020" loc="831:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB8" ref="0x110a80320" loc="1047:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_VREF_AVCC" ref="0x110ab9020" loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCDR4" ref="0x110a61630" loc="946:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PB3" ref="0x110a72310" loc="1135:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PC5" ref="0x110a95910" loc="1163:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PD7" ref="0x110a90020" loc="1191:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOS_SERIAL_802_15_4_ID" ref="0x110923b08" loc="86:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCR0UB" ref="0x110a47640" loc="866:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADCH" ref="0x110a0f140" loc="44:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV3" ref="0x110a50930" loc="810:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ00" ref="0x110a58948" loc="1006:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ12" ref="0x110a7f940" loc="1056:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1L" ref="0x110a2c020" loc="150:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL0" ref="0x110a59970" loc="1001:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INTF5" ref="0x110a30630" loc="771:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWA0" ref="0x110a3c320" loc="690:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC0" ref="0x110a83640" loc="1031:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCR" ref="0x110a27538" loc="222:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM1C0" ref="0x110a44640" loc="885:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SUCCESS" ref="0x110352e30" loc="41:/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IVCE" ref="0x110a4ec08" loc="823:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESIZE" ref="0x11050b480" loc="43:/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="XDIV5" ref="0x110a38630" loc="719:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INT0" ref="0x110a31c20" loc="766:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="ATM128_OCR3CH" ref="0x110a22378" loc="274:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM30" ref="0x110a42630" loc="897:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_FLAG_ON" ref="0x110aacce8" loc="131:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE0" ref="0x110a7e660" loc="1062:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="AM_BROADCAST_ADDR" ref="0x1109081f8" loc="15:/opt/tinyos-2.x/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_ADC_DIFF_ADC61_1x" ref="0x110ab4e68" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FAIL" ref="0x11050b178" loc="42:/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PD1" ref="0x110a8f310" loc="1197:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCIE1C" ref="0x110a51c58" loc="804:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PE3" ref="0x110a8b8f0" loc="1225:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PF5" ref="0x110a86020" loc="1253:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSRA" ref="0x110a0f808" loc="48:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN1" ref="0x110a7f328" loc="1054:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="ATM128_OCDR" ref="0x110a0adf0" loc="122:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM21" ref="0x110a49c50" loc="856:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="EALREADY" ref="0x1105adaa0" loc="50:/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_ADC_DIFF_ADC41_1x" ref="0x110ab4808" loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="ATM128_ADC_SNGL_GND" ref="0x110ab2c80" loc="81:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ACIS1" ref="0x110a7b020" loc="1077:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_PORTB" ref="0x110a0b810" loc="102:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWS7" ref="0x110a3c948" loc="694:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS11" ref="0x110a65020" loc="914:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINA7" ref="0x110a75c48" loc="1121:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="ATM128_TWAR" ref="0x110a251b8" loc="244:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="ATM128_EICRB" ref="0x110a29538" loc="191:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PA7" ref="0x110a78930" loc="1101:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="ATM128_TIFR" ref="0x110a2a6f0" loc="179:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3" ref="0x110a231b8" loc="267:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_PRESCALE_64" ref="0x110aafde0" loc="102:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDA3" ref="0x110a75020" loc="1115:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDB5" ref="0x110a71620" loc="1143:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDC7" ref="0x110a94c10" loc="1171:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC00" ref="0x110a35328" loc="737:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDF4" ref="0x110a85c40" loc="1264:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOCB" ref="0x110a63020" loc="928:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_AM_ADDRESS" ref="0x110908b10" loc="28:/opt/tinyos-2.x/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COMA0" ref="0x110a46020" loc="871:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC" ref="0x110a4c330" loc="834:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL0" ref="0x110a58c58" loc="1007:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN0" ref="0x110a7d020" loc="1065:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_UCSR0B" ref="0x110a0e710" loc="60:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:153" name="ATM128_UBRR1L" ref="0x110a1fc38" loc="310:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_SPSR" ref="0x110a0d518" loc="72:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC" ref="0x110a57020" loc="1010:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_POWER_DOWN" ref="0x110aba5c8" loc="126:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MUX0" ref="0x110a78620" loc="1098:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN" ref="0x110a81628" loc="1043:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM3B1" ref="0x110a43640" loc="892:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XDIV0" ref="0x110a37630" loc="724:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_PINE" ref="0x110a13b30" loc="30:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_DDRA" ref="0x110a0a020" loc="108:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="LEDS_LED1" ref="0x110dbbc38" loc="34:/opt/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TCN0UB" ref="0x110a47330" loc="865:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINB1" ref="0x110a96c40" loc="1157:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1" ref="0x110a4c930" loc="836:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINC3" ref="0x110a91328" loc="1185:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PIND5" ref="0x110a8d958" loc="1213:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINE7" ref="0x110a88020" loc="1241:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ1" ref="0x110a5b928" loc="987:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWEA" ref="0x110a40b88" loc="676:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_UDR0" ref="0x110a0ede8" loc="66:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDG0" ref="0x110aa8320" loc="1292:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="RWWSB" ref="0x110a33328" loc="751:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TRUE" ref="0x1105cc020" loc="68:/opt/tinyos-2.x/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDD1" ref="0x110a8ec20" loc="1207:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NOISE_HISTORY" ref="0x11071f928" loc="49:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="P_PGID" ref="0x1103348f0" loc="82:/usr/include/sys/wait.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDE3" ref="0x110a89320" loc="1235:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="ATM128_OCR2" ref="0x110a091b8" loc="125:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCSR" ref="0x110a27890" loc="223:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IDRD" ref="0x110a62950" loc="942:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE3B" ref="0x110a51330" loc="801:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC40" ref="0x110a34c40" loc="747:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X1" ref="0x110a55c10" loc="1026:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CSB0" ref="0x110a67c28" loc="906:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL" ref="0x110a5a020" loc="989:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="MUX3" ref="0x110a79c30" loc="1095:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RECEIVER" ref="0x1109efae8" loc="39:TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_TASK" ref="0x110963020" loc="48:/opt/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="NUM_TASKS" ref="0x110964cc0" loc="47:/opt/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="receiveDone_task" ref="0x110d5a070" loc="45:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AsyncReceiveAdapterP.nc">
      <component-ref qname="AsyncReceiveAdapterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="sendDone_task" ref="0x110d78df0" loc="44:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AsyncSendAdapterP.nc">
      <component-ref qname="AsyncSendAdapterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:123" name="SIMPLE_TDMA_SYNC" ref="0x110ddee28" loc="54:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="SAMPLE_TIMES" ref="0x110ddcbb8" loc="58:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="MAXCHILDREN" ref="0x110ddc1b8" loc="55:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="TOTALNODES" ref="0x110ddc4f0" loc="56:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ROOT1" ref="0x110ddb020" loc="59:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="NUM_MEASUREMENTS" ref="0x110ddc868" loc="57:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="S_SENT" ref="0x110fa9188" loc="55:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderP.nc">
      <component-ref qname="GenericSlotSenderP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="S_START" ref="0x110faaaf8" loc="53:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderP.nc">
      <component-ref qname="GenericSlotSenderP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="S_OFFSET" ref="0x110faae20" loc="54:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderP.nc">
      <component-ref qname="GenericSlotSenderP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="S_END" ref="0x110fa9490" loc="56:/opt/tinyos-2.x/apps/wustl/upma/system/GenericSlotSenderP.nc">
      <component-ref qname="GenericSlotSenderP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="MAX_DELAY" ref="0x111040338" loc="72:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TransformAlarmC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="MAX_DELAY_LOG2" ref="0x111041c18" loc="71:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TransformAlarmC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="NUM_UPPER_BITS" ref="0x1110452b0" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="TransformCounterC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="LOW_SHIFT_RIGHT" ref="0x111048d98" loc="60:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="TransformCounterC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="OVERFLOW_MASK" ref="0x1110440b0" loc="66:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="TransformCounterC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="HIGH_SHIFT_LEFT" ref="0x1110465e8" loc="61:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="TransformCounterC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="syncDoneTask" ref="0x11116daf8" loc="36:/opt/tinyos-2.x/tos/chips/cc2420/control/sim/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="read_rssi_task" ref="0x1112d0020" loc="640:/opt/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="stopDoneTask" ref="0x111343e00" loc="98:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="sendDoneTask" ref="0x111344a98" loc="143:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="startDoneTask" ref="0x1113d8dc0" loc="93:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="NUM_CLIENTS" ref="0x111582b70" loc="40:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="errorTask" ref="0x111580dd0" loc="161:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="CancelTask" ref="0x11157fe80" loc="118:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="S_SEND" ref="0x111643970" loc="59:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderP.nc">
      <component-ref qname="SSTdmaSlotSenderP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="S_END" ref="0x111643c78" loc="60:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderP.nc">
      <component-ref qname="SSTdmaSlotSenderP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="S_BACKOFF" ref="0x111643350" loc="57:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderP.nc">
      <component-ref qname="SSTdmaSlotSenderP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="S_START" ref="0x111644be0" loc="55:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderP.nc">
      <component-ref qname="SSTdmaSlotSenderP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="S_CCA2" ref="0x111643660" loc="58:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderP.nc">
      <component-ref qname="SSTdmaSlotSenderP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="S_CCA" ref="0x111643020" loc="56:/opt/tinyos-2.x/apps/wustl/upma/system/SSTdmaSlotSenderP.nc">
      <component-ref qname="SSTdmaSlotSenderP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
  </constants>
  <functions>
  </functions>
  <typedefs>
    <typedef name="__darwin_pthread_attr_t" ref="0x110144208" loc="113:/usr/include/sys/_types.h">
      <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_attr_t" ref="0x110136428"/>
        <typename><typedef-ref name="__darwin_pthread_attr_t" ref="0x110144208"/></typename>
      </type-tag>
    </typedef>
    <typedef name="intptr_t" ref="0x110153b58" loc="93:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intptr_t" ref="0x110153b58"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_packet_t" ref="0x11091c7a8" loc="123:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_packet" ref="0x11091edd0"/>
        <typename><typedef-ref name="serial_packet_t" ref="0x11091c7a8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="rune_t" ref="0x1103c0e20" loc="86:/usr/include/stdlib.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="rune_t" ref="0x1103c0e20"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_blkcnt_t" ref="0x11013f020" loc="94:/usr/include/sys/_types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_blkcnt_t" ref="0x11013f020"/></typename>
      </type-int>
    </typedef>
    <typedef name="wchar_t" ref="0x11011ba28" loc="324:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wchar_t" ref="0x11011ba28"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_size_t" ref="0x110131e40" loc="90:/usr/include/i386/_types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_size_t" ref="0x110131e40"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Admux_t" ref="0x110ab04d8" loc="90:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x110ab0020"/>
        <typename><typedef-ref name="Atm128Admux_t" ref="0x110ab04d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_ino_t" ref="0x110141158" loc="103:/usr/include/sys/_types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ino_t" ref="0x110141158"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_footer_t" ref="0x110906aa0" loc="17:/opt/tinyos-2.x/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x1109064b8"/>
        <typename><typedef-ref name="tossim_footer_t" ref="0x110906aa0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int64_t" ref="0x11012e3b8" loc="46:/usr/include/i386/_types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__int64_t" ref="0x11012e3b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int16_t" ref="0x11012d530" loc="42:/usr/include/i386/_types.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__int16_t" ref="0x11012d530"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_header_t" ref="0x11091ea90" loc="118:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x11091fa38"/>
        <typename><typedef-ref name="serial_header_t" ref="0x11091ea90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TMilli" ref="0x110992808" loc="29:/opt/tinyos-2.x/tos/lib/timer/Timer.h">
      <documentation loc="1:TestNetworkC.nc">
        <short>&#10; Testnework for TDMA simulation in Tossim.</short>
        <long>&#10; Testnework for TDMA simulation in Tossim. &#10; @author Bo Li&#10; @version $Revision: 0.1 $ $Date: 2011/03/25 21:53:58 $&#10;</long>
      </documentation>
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x1109924b0"/>
        <typename><typedef-ref name="TMilli" ref="0x110992808"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_RuneEntry" ref="0x1105199c8" loc="86:/usr/include/runetype.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref ref="0x110519460"/>
        <typename><typedef-ref name="_RuneEntry" ref="0x1105199c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="user_long_t" ref="0x110416538" loc="117:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_long_t" ref="0x110416538"/></typename>
      </type-int>
    </typedef>
    <typedef name="fd_set" ref="0x1106eedf8" loc="186:/usr/include/sys/_structs.h">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/tossim/sim_mote.h">
        <short>&#10; Further edited by for multi-channel TOSSIM, each channel uses different noise traces&#10;&#10; </short>
        <long>&#10; Further edited by for multi-channel TOSSIM, each channel uses different noise traces&#10;&#10; @author Bo Li of wustl&#10; @data Mar 19, 2012&#10;</long>
      </documentation>
      <type-tag size="I:128" alignment="I:4"><struct-ref name="fd_set" ref="0x1106ef4b8"/>
        <typename><typedef-ref name="fd_set" ref="0x1106eedf8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_time_t" ref="0x1105cc8c0" loc="43:/opt/tinyos-2.x/tos/lib/tossim/sim_tossim.h">
      <documentation loc="24:/opt/tinyos-2.x/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x1105cc8c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="float_t" ref="0x110448110" loc="67:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/math.h">
      <documentation loc="58:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/math.h">
        <short>****************************************************************************&#10; Floating point data types                                                  *&#10;*****************************************************************************</short>
      </documentation>
      <type-float cname="float" size="I:4" alignment="I:4">
        <typename><typedef-ref name="float_t" ref="0x110448110"/></typename>
      </type-float>
    </typedef>
    <typedef name="mode_t" ref="0x110415c70" loc="263:/usr/include/stdlib.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="mode_t" ref="0x110415c70"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcontext_t" ref="0x11038b950" loc="127:/usr/include/i386/_structs.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:712" alignment="I:8"><struct-ref name="__darwin_mcontext64" ref="0x11038ea48"/></type-tag>
        <typename><typedef-ref name="mcontext_t" ref="0x11038b950"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="int_least32_t" ref="0x11014f3f0" loc="70:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_least32_t" ref="0x11014f3f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_size_t" ref="0x11040ad78" loc="115:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_size_t" ref="0x11040ad78"/></typename>
      </type-int>
    </typedef>
    <typedef name="__builtin_va_list" ref="0x110112600"  loc="NONE">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x1101124a0"/></type-tag>
      </type-pointer>
    </typedef>
    <typedef name="__uint32_t" ref="0x11012e020" loc="45:/usr/include/i386/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uint32_t" ref="0x11012e020"/></typename>
      </type-int>
    </typedef>
    <typedef name="TMicro" ref="0x11098b7f0" loc="31:/opt/tinyos-2.x/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x11098b498"/>
        <typename><typedef-ref name="TMicro" ref="0x11098b7f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_nl_item" ref="0x11014b200" loc="39:/usr/include/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_nl_item" ref="0x11014b200"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_wchar_t" ref="0x110132698" loc="102:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wchar_t" ref="0x110132698"/></typename>
      </type-int>
    </typedef>
    <typedef name="clock_t" ref="0x1106fe978" loc="77:/usr/include/time.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="clock_t" ref="0x1106fe978"/></typename>
      </type-int>
    </typedef>
    <typedef name="heap_t" ref="0x110686020" loc="54:/opt/tinyos-2.x/tos/lib/tossim/heap.h">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/tossim/heap.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x1106715d0"/>
        <typename><typedef-ref name="heap_t" ref="0x110686020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="user_ulong_t" ref="0x110416918" loc="118:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_ulong_t" ref="0x110416918"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ssize_t" ref="0x110133a40" loc="117:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ssize_t" ref="0x110133a40"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint16_t" ref="0x1102d82f8" loc="446:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
        <typename><typedef-ref name="nxle_uint16_t" ref="0x1102d82f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_channel_t" ref="0x11060a740" loc="53:/opt/tinyos-2.x/tos/lib/tossim/sim_log.c">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="sim_log_channel" ref="0x11060b9f0"/>
        <typename><typedef-ref name="sim_log_channel_t" ref="0x11060a740"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_group_t" ref="0x11090a888" loc="11:/opt/tinyos-2.x/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x11090a888"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least8_t" ref="0x11014fb90" loc="72:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_least8_t" ref="0x11014fb90"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast32_t" ref="0x110153400" loc="85:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_fast32_t" ref="0x110153400"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least64_t" ref="0x11014f7c0" loc="71:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_least64_t" ref="0x11014f7c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_mach_port_t" ref="0x110141ae0" loc="108:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_mach_port_t" ref="0x110141ae0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_event_t" ref="0x1105d2288" loc="43:/opt/tinyos-2.x/tos/lib/tossim/sim_event_queue.h">
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1105d4e88"/>
        <typename><typedef-ref name="sim_event_t" ref="0x1105d2288"/></typename>
      </type-tag>
    </typedef>
    <typedef name="error_t" ref="0x110771280" loc="56:/opt/tinyos-2.x/tos/types/TinyError.h">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="error_t" ref="0x110771280"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_uid_t" ref="0x110149020" loc="133:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_uid_t" ref="0x110149020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_clock_t" ref="0x110133278" loc="115:/usr/include/i386/_types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_clock_t" ref="0x110133278"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least8_t" ref="0x11014db58" loc="68:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_least8_t" ref="0x11014db58"/></typename>
      </type-int>
    </typedef>
    <typedef name="FILE" ref="0x11055fae8" loc="161:/usr/include/stdio.h">
      <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x110555ec0"/>
        <typename><typedef-ref name="FILE" ref="0x11055fae8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ADCL_t" ref="0x110ad1918" loc="152:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCL_t" ref="0x110ad1918"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_gid_t" ref="0x110140480" loc="99:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_gid_t" ref="0x110140480"/></typename>
      </type-int>
    </typedef>
    <typedef name="radio_stats_t" ref="0x11091f6f8" loc="110:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-tag size="I:18" alignment="I:2"><struct-ref name="radio_stats" ref="0x1109215a0"/>
        <typename><typedef-ref name="radio_stats_t" ref="0x11091f6f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gid_t" ref="0x1113cc088" loc="77:/usr/include/unistd.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="gid_t" ref="0x1113cc088"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_addr_t" ref="0x11040a9a8" loc="114:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_addr_t" ref="0x11040a9a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_packet_t" ref="0x1108f9020" loc="51:/opt/tinyos-2.x/tos/lib/tossim/sim_packet.h">
      <documentation loc="24:/opt/tinyos-2.x/tos/lib/tossim/sim_packet.h">
        <short>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.</short>
        <long>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.&#10;&#10; @author Philip Levis&#10; @date   Jan 2 2006&#10;</long>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><struct-ref name="sim_packet" ref="0x1108fac98"/>
        <typename><typedef-ref name="sim_packet_t" ref="0x1108f9020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Adcsra_t" ref="0x110ad1178" loc="149:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x110ad2a10"/>
        <typename><typedef-ref name="Atm128Adcsra_t" ref="0x110ad1178"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int8_t" ref="0x11014bdc8" loc="29:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int8_t" ref="0x11014bdc8"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_output_t" ref="0x11060b6a0" loc="46:/opt/tinyos-2.x/tos/lib/tossim/sim_log.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x11060de30"/>
        <typename><typedef-ref name="sim_log_output_t" ref="0x11060b6a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="suseconds_t" ref="0x1106eabd0" loc="87:/usr/include/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="suseconds_t" ref="0x1106eabd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sigset_t" ref="0x110393da0" loc="162:/usr/include/sys/signal.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="sigset_t" ref="0x110393da0"/></typename>
      </type-int>
    </typedef>
    <typedef name="T32khz" ref="0x11098b088" loc="30:/opt/tinyos-2.x/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x110992cc0"/>
        <typename><typedef-ref name="T32khz" ref="0x11098b088"/></typename>
      </type-tag>
    </typedef>
    <typedef name="tossim_header_t" ref="0x110906178" loc="13:/opt/tinyos-2.x/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x110908e90"/>
        <typename><typedef-ref name="tossim_header_t" ref="0x110906178"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ptrdiff_t" ref="0x11011b250" loc="150:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include/stddef.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ptrdiff_t" ref="0x11011b250"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint32_t" ref="0x11014d3b0" loc="59:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x11014d3b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fp_control_t" ref="0x110345ba8" loc="114:/usr/include/mach/i386/_structs.h">
      <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x11033eaa8"/>
        <typename><typedef-ref name="__darwin_fp_control_t" ref="0x110345ba8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_uint64_t" ref="0x1102d6110" loc="448:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nxle_uint64_t">
        <typename><typedef-ref name="nxle_uint64_t" ref="0x1102d6110"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint8_t" ref="0x1102cd460" loc="435:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_uint8_t" ref="0x1102cd460"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintptr_t" ref="0x110154020" loc="98:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintptr_t" ref="0x110154020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_rwlockattr_t" ref="0x110146d68" loc="128:/usr/include/sys/_types.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="_opaque_pthread_rwlockattr_t" ref="0x11013b7c0"/>
        <typename><typedef-ref name="__darwin_pthread_rwlockattr_t" ref="0x110146d68"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_fast64_t" ref="0x1101537e0" loc="86:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast64_t" ref="0x1101537e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uuid_t" ref="0x111417848" loc="676:/usr/include/unistd.h">
      <type-array elements="I:16" size="I:16" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="uuid_t" ref="0x111417848"/></typename>
      </type-array>
    </typedef>
    <typedef name="__uint16_t" ref="0x11012d8d0" loc="43:/usr/include/i386/_types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__uint16_t" ref="0x11012d8d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcu_power_t" ref="0x110abe608" loc="114:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="mcu_power_t" ref="0x110abe608"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast16_t" ref="0x110151020" loc="80:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_fast16_t" ref="0x110151020"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpos_t" ref="0x1105550c8" loc="85:/usr/include/stdio.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fpos_t" ref="0x1105550c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="div_t" ref="0x1103ca7e0" loc="100:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x1103ca3d8"/>
        <typename><typedef-ref name="div_t" ref="0x1103ca7e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_gain_noise_t" ref="0x1107ad2f8" loc="6:/opt/tinyos-2.x/tos/lib/tossim/sim_gain.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x1107aeb40"/>
        <typename><typedef-ref name="sim_gain_noise_t" ref="0x1107ad2f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="size_t" ref="0x11011b660" loc="212:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include/stddef.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="size_t" ref="0x11011b660"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_suseconds_t" ref="0x110148b68" loc="132:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_suseconds_t" ref="0x110148b68"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint8_t" ref="0x11012d1d0" loc="41:/usr/include/i386/_types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__uint8_t" ref="0x11012d1d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_id_t" ref="0x11090b7e0" loc="6:/opt/tinyos-2.x/tos/types/AM.h">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/tossim/platform_message.h">
        <short>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.</short>
        <long>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.&#10;&#10; @author Philip Levis&#10; @date   Dec 2 2005&#10; Revision:  $Revision$&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_id_t" ref="0x11090b7e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ct_rune_t" ref="0x11012f3f8" loc="70:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_ct_rune_t" ref="0x11012f3f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fsfilcnt_t" ref="0x110140088" loc="98:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_fsfilcnt_t" ref="0x110140088"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_header_t" ref="0x11091bda0" loc="44:/opt/tinyos-2.x/tos/lib/tossim/platform_message.h">
      <type-tag size="I:8" alignment="I:1"><union-ref name="message_header" ref="0x11091b4c0"/>
        <typename><typedef-ref name="message_header_t" ref="0x11091bda0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gain_entry_t" ref="0x11079fa70" loc="53:/opt/tinyos-2.x/tos/lib/tossim/sim_gain.h">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/tossim/sim_gain.h">
        <short>&#10; Further edited by for multi-channel TOSSIM, each channel uses different noise traces&#10;&#10; </short>
        <long>&#10; Further edited by for multi-channel TOSSIM, each channel uses different noise traces&#10;&#10; @author Bo Li of wustl&#10; @data Mar 19, 2012&#10;</long>
      </documentation>
      <type-tag size="I:32" alignment="I:8"><struct-ref name="gain_entry" ref="0x1107a1da8"/>
        <typename><typedef-ref name="gain_entry_t" ref="0x11079fa70"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_addr_t" ref="0x11090ac40" loc="12:/opt/tinyos-2.x/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x11090ac40"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int32_t" ref="0x1102cf6c8" loc="433:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="nx_int32_t" ref="0x1102cf6c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ADCH_t" ref="0x110ad1548" loc="151:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCH_t" ref="0x110ad1548"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least16_t" ref="0x110150020" loc="73:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_least16_t" ref="0x110150020"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint8_t" ref="0x11014cb90" loc="49:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x11014cb90"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_socklen_t" ref="0x110133698" loc="116:/usr/include/i386/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_socklen_t" ref="0x110133698"/></typename>
      </type-int>
    </typedef>
    <typedef name="time_t" ref="0x1106ea790" loc="82:/usr/include/sys/time.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="time_t" ref="0x1106ea790"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_blksize_t" ref="0x11013f438" loc="95:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_blksize_t" ref="0x11013f438"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int8_t" ref="0x1102d1060" loc="441:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nxle_int8_t">
        <typename><typedef-ref name="nxle_int8_t" ref="0x1102d1060"/></typename>
      </type-int>
    </typedef>
    <typedef name="lldiv_t" ref="0x1103c9c30" loc="111:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x1103c9828"/>
        <typename><typedef-ref name="lldiv_t" ref="0x1103c9c30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_attr_t" ref="0x110393998" loc="157:/usr/include/sys/signal.h">
      <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_attr_t" ref="0x110136428"/>
        <typename><typedef-ref name="pthread_attr_t" ref="0x110393998"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pid_t" ref="0x110333020" loc="90:/usr/include/sys/wait.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pid_t" ref="0x110333020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint64_t" ref="0x11012e790" loc="47:/usr/include/i386/_types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__uint64_t" ref="0x11012e790"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int32_t" ref="0x1102d1e00" loc="443:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nxle_int32_t">
        <typename><typedef-ref name="nxle_int32_t" ref="0x1102d1e00"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fp_status_t" ref="0x110342b60" loc="164:/usr/include/mach/i386/_structs.h">
      <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x110344020"/>
        <typename><typedef-ref name="__darwin_fp_status_t" ref="0x110342b60"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_RuneRange" ref="0x1105184e8" loc="91:/usr/include/runetype.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x1105180e0"/>
        <typename><typedef-ref name="_RuneRange" ref="0x1105184e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="va_list" ref="0x110557cc0" loc="73:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x1101124a0"/></type-tag>
        <typename><typedef-ref name="va_list" ref="0x110557cc0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="int_fast8_t" ref="0x110150bc0" loc="79:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_fast8_t" ref="0x110150bc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_cond_t" ref="0x110144750" loc="115:/usr/include/sys/_types.h">
      <type-tag size="I:48" alignment="I:8"><struct-ref name="_opaque_pthread_cond_t" ref="0x110137020"/>
        <typename><typedef-ref name="__darwin_pthread_cond_t" ref="0x110144750"/></typename>
      </type-tag>
    </typedef>
    <typedef name="tossim_metadata_t" ref="0x110905e50" loc="29:/opt/tinyos-2.x/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x110906df0"/>
        <typename><typedef-ref name="tossim_metadata_t" ref="0x110905e50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_off_t" ref="0x110143410" loc="110:/usr/include/sys/_types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_off_t" ref="0x110143410"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_id_t" ref="0x11090a4d8" loc="10:/opt/tinyos-2.x/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_id_t" ref="0x11090a4d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="intmax_t" ref="0x1101543d0" loc="106:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intmax_t" ref="0x1101543d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_mode_t" ref="0x110143020" loc="109:/usr/include/sys/_types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__darwin_mode_t" ref="0x110143020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ino64_t" ref="0x110140c80" loc="101:/usr/include/sys/_types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ino64_t" ref="0x110140c80"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_metadata_t" ref="0x11091b178" loc="127:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="serial_metadata" ref="0x11091caf8"/>
        <typename><typedef-ref name="serial_metadata_t" ref="0x11091b178"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint16_t" ref="0x11014d020" loc="54:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x11014d020"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int8_t" ref="0x11040b6b8" loc="80:/usr/include/i386/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_int8_t" ref="0x11040b6b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_group_t" ref="0x11090bcd0" loc="7:/opt/tinyos-2.x/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_group_t" ref="0x11090bcd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_metadata_t" ref="0x110918178" loc="52:/opt/tinyos-2.x/tos/lib/tossim/platform_message.h">
      <type-tag size="I:6" alignment="I:1"><union-ref name="message_metadata" ref="0x11091aad0"/>
        <typename><typedef-ref name="message_metadata_t" ref="0x110918178"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_time_t" ref="0x110133dd8" loc="118:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_time_t" ref="0x110133dd8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint32_t" ref="0x1102d22a0" loc="437:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="nx_uint32_t" ref="0x1102d22a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_uuid_t" ref="0x110149930" loc="135:/usr/include/sys/_types.h">
      <type-array elements="I:16" size="I:16" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__darwin_uuid_t" ref="0x110149930"/></typename>
      </type-array>
    </typedef>
    <typedef name="__darwin_dev_t" ref="0x11013f828" loc="96:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_dev_t" ref="0x11013f828"/></typename>
      </type-int>
    </typedef>
    <typedef name="hashtable_t" ref="0x110601a50" loc="10:/opt/tinyos-2.x/tos/lib/tossim/hashtable.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x110601678"/>
        <typename><typedef-ref name="hashtable_t" ref="0x110601a50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="dev_t" ref="0x110415898" loc="258:/usr/include/stdlib.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="dev_t" ref="0x110415898"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_rune_t" ref="0x110132ad8" loc="107:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_rune_t" ref="0x110132ad8"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int32_t" ref="0x11040bde8" loc="90:/usr/include/i386/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int32_t" ref="0x11040bde8"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast8_t" ref="0x110151b78" loc="83:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_fast8_t" ref="0x110151b78"/></typename>
      </type-int>
    </typedef>
    <typedef name="snr_lqi_t" ref="0x111183408" loc="13:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="snr_lqi" ref="0x111184968"/>
        <typename><typedef-ref name="snr_lqi_t" ref="0x111183408"/></typename>
      </type-tag>
    </typedef>
    <typedef name="idtype_t" ref="0x110334bf8" loc="83:/usr/include/sys/wait.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x110334210"/>
        <typename><typedef-ref name="idtype_t" ref="0x110334bf8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_RuneCharClass" ref="0x1105160c8" loc="96:/usr/include/runetype.h">
      <type-tag size="I:20" alignment="I:4"><struct-ref ref="0x110518c70"/>
        <typename><typedef-ref name="_RuneCharClass" ref="0x1105160c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_int16_t" ref="0x1102cf020" loc="432:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nx_int16_t">
        <typename><typedef-ref name="nx_int16_t" ref="0x1102cf020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pid_t" ref="0x110143800" loc="111:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_pid_t" ref="0x110143800"/></typename>
      </type-int>
    </typedef>
    <typedef name="ucontext_t" ref="0x110393520" loc="227:/usr/include/sys/_structs.h">
      <type-tag size="I:56" alignment="I:8"><struct-ref name="__darwin_ucontext" ref="0x11038a860"/>
        <typename><typedef-ref name="ucontext_t" ref="0x110393520"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TestNetworkMsg" ref="0x1109956f8" loc="173:TestNetwork.h">
      <documentation loc="1:TestNetworkAppC.nc">
        <short>&#10; Testnework for TDMA simulation in Tossim.</short>
        <long>&#10; Testnework for TDMA simulation in Tossim. &#10; @author Bo Li&#10; @version $Revision: 0.1 $ $Date: 2011/03/25 21:53:58 $&#10;</long>
      </documentation>
      <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="TestNetworkMsg" ref="0x11099bb00"/>
        <typename><typedef-ref name="TestNetworkMsg" ref="0x1109956f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="register_t" ref="0x11040a5b8" loc="98:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="register_t" ref="0x11040a5b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_key_t" ref="0x1101451a8" loc="118:/usr/include/sys/_types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_pthread_key_t" ref="0x1101451a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="rlim_t" ref="0x1103a4a50" loc="89:/usr/include/sys/resource.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="rlim_t" ref="0x1103a4a50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_natural_t" ref="0x11012f020" loc="50:/usr/include/i386/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_natural_t" ref="0x11012f020"/></typename>
      </type-int>
    </typedef>
    <typedef name="ssize_t" ref="0x110300148" loc="155:/usr/include/string.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ssize_t" ref="0x110300148"/></typename>
      </type-int>
    </typedef>
    <typedef name="sig_atomic_t" ref="0x110333918" loc="39:/usr/include/i386/signal.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="sig_atomic_t" ref="0x110333918"/></typename>
      </type-int>
    </typedef>
    <typedef name="int32_t" ref="0x11014c490" loc="39:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int32_t" ref="0x11014c490"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_mbstate_t" ref="0x110131448" loc="81:/usr/include/i386/_types.h">
      <type-tag size="I:128" alignment="I:8"><union-ref ref="0x11012fb98"/>
        <typename><typedef-ref name="__darwin_mbstate_t" ref="0x110131448"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint64_t" ref="0x11014d778" loc="64:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint64_t" ref="0x11014d778"/></typename>
      </type-int>
    </typedef>
    <typedef name="syscall_arg_t" ref="0x1104154d0" loc="128:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="syscall_arg_t" ref="0x1104154d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_atomic_t" ref="0x110aa1cb0" loc="88:/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__nesc_atomic_t" ref="0x110aa1cb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_sigset_t" ref="0x110148738" loc="131:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_sigset_t" ref="0x110148738"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int64_t" ref="0x1102d9508" loc="444:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nxle_int64_t">
        <typename><typedef-ref name="nxle_int64_t" ref="0x1102d9508"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int16_t" ref="0x1102d1730" loc="442:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nxle_int16_t">
        <typename><typedef-ref name="nxle_int16_t" ref="0x1102d1730"/></typename>
      </type-int>
    </typedef>
    <typedef name="imaxdiv_t" ref="0x110158540" loc="244:/usr/include/inttypes.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x110158138"/>
        <typename><typedef-ref name="imaxdiv_t" ref="0x110158540"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least32_t" ref="0x110150408" loc="74:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_least32_t" ref="0x110150408"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_mutex_t" ref="0x110145708" loc="120:/usr/include/sys/_types.h">
      <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_mutex_t" ref="0x1101392b0"/>
        <typename><typedef-ref name="__darwin_pthread_mutex_t" ref="0x110145708"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__mbstate_t" ref="0x110131020" loc="79:/usr/include/i386/_types.h">
      <type-tag size="I:128" alignment="I:8"><union-ref ref="0x11012fb98"/>
        <typename><typedef-ref name="__mbstate_t" ref="0x110131020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="wint_t" ref="0x1105088f8" loc="70:/usr/include/runetype.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wint_t" ref="0x1105088f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="stack_t" ref="0x110393088" loc="218:/usr/include/sys/_structs.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_sigaltstack" ref="0x11038bce0"/>
        <typename><typedef-ref name="stack_t" ref="0x110393088"/></typename>
      </type-tag>
    </typedef>
    <typedef name="message_footer_t" ref="0x11091a770" loc="48:/opt/tinyos-2.x/tos/lib/tossim/platform_message.h">
      <type-tag size="I:2" alignment="I:1"><union-ref name="message_footer" ref="0x11091a148"/>
        <typename><typedef-ref name="message_footer_t" ref="0x11091a770"/></typename>
      </type-tag>
    </typedef>
    <typedef name="off_t" ref="0x1105a6bf8" loc="414:/usr/include/stdio.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="off_t" ref="0x1105a6bf8"/></typename>
      </type-int>
    </typedef>
    <typedef name="ct_rune_t" ref="0x1103c0a48" loc="81:/usr/include/stdlib.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ct_rune_t" ref="0x1103c0a48"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int64_t" ref="0x1102cfd70" loc="434:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nx_int64_t">
        <typename><typedef-ref name="nx_int64_t" ref="0x1102cfd70"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_once_t" ref="0x110146228" loc="124:/usr/include/sys/_types.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_once_t" ref="0x11013a540"/>
        <typename><typedef-ref name="__darwin_pthread_once_t" ref="0x110146228"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int8_t" ref="0x110125c90" loc="37:/usr/include/i386/_types.h">
      <documentation loc="503:/usr/include/sys/cdefs.h">
        <short>***************************************&#10;  Public darwin-specific feature macros&#10;****************************************</short>
      </documentation>
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__int8_t" ref="0x110125c90"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast16_t" ref="0x110153020" loc="84:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_fast16_t" ref="0x110153020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_wint_t" ref="0x110132e70" loc="110:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wint_t" ref="0x110132e70"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintmax_t" ref="0x1101547a0" loc="115:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintmax_t" ref="0x1101547a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_addr_t" ref="0x11090a148" loc="8:/opt/tinyos-2.x/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_am_addr_t" ref="0x11090a148"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint16_t" ref="0x1102cdb28" loc="436:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_uint16_t" ref="0x1102cdb28"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fsblkcnt_t" ref="0x11013fc20" loc="97:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_fsblkcnt_t" ref="0x11013fc20"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast32_t" ref="0x1101513e8" loc="81:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_fast32_t" ref="0x1101513e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least16_t" ref="0x11014f020" loc="69:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_least16_t" ref="0x11014f020"/></typename>
      </type-int>
    </typedef>
    <typedef name="useconds_t" ref="0x1113cc4b0" loc="114:/usr/include/unistd.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="useconds_t" ref="0x1113cc4b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="ldiv_t" ref="0x1103c9228" loc="105:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x1103cad68"/>
        <typename><typedef-ref name="ldiv_t" ref="0x1103c9228"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int64_t" ref="0x11040a208" loc="95:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_int64_t" ref="0x11040a208"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int16_t" ref="0x11040ba50" loc="85:/usr/include/i386/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_int16_t" ref="0x11040ba50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_va_list" ref="0x1101322f0" loc="96:/usr/include/i386/_types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x1101124a0"/></type-tag>
        <typename><typedef-ref name="__darwin_va_list" ref="0x1101322f0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="siginfo_t" ref="0x110397088" loc="205:/usr/include/sys/signal.h">
      <type-tag size="I:104" alignment="I:8"><struct-ref name="__siginfo" ref="0x11039a490"/>
        <typename><typedef-ref name="siginfo_t" ref="0x110397088"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_id_t" ref="0x110140870" loc="100:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_id_t" ref="0x110140870"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_wctype_t" ref="0x11014b9d0" loc="42:/usr/include/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wctype_t" ref="0x11014b9d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least64_t" ref="0x1101507f0" loc="75:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_least64_t" ref="0x1101507f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int32_t" ref="0x11012dc30" loc="44:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__int32_t" ref="0x11012dc30"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ptrdiff_t" ref="0x110131a38" loc="84:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ptrdiff_t" ref="0x110131a38"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_intptr_t" ref="0x11012eb40" loc="49:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_intptr_t" ref="0x11012eb40"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_condattr_t" ref="0x110144ce8" loc="117:/usr/include/sys/_types.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_condattr_t" ref="0x110137948"/>
        <typename><typedef-ref name="__darwin_pthread_condattr_t" ref="0x110144ce8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="double_t" ref="0x110448558" loc="68:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/math.h">
      <type-float cname="double" size="I:8" alignment="I:8">
        <typename><typedef-ref name="double_t" ref="0x110448558"/></typename>
      </type-float>
    </typedef>
    <typedef name="lqi_dist_t" ref="0x1111845a8" loc="7:/opt/tinyos-2.x/tos/lib/tossim/sim_lqi.h">
      <documentation loc="24:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x111188df0"/>
        <typename><typedef-ref name="lqi_dist_t" ref="0x1111845a8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="bool" ref="0x1105cd658" loc="57:/opt/tinyos-2.x/tos/lib/tossim/tos.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1105cd658"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_hash_t" ref="0x11071c388" loc="63:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <documentation loc="24:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:488" alignment="I:8"><struct-ref name="sim_noise_hash_t" ref="0x11071d020"/>
        <typename><typedef-ref name="sim_noise_hash_t" ref="0x11071c388"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_pthread_mutexattr_t" ref="0x110145cb8" loc="122:/usr/include/sys/_types.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_mutexattr_t" ref="0x110139be0"/>
        <typename><typedef-ref name="__darwin_pthread_mutexattr_t" ref="0x110145cb8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_pthread_t" ref="0x110148320" loc="130:/usr/include/sys/_types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:1184" alignment="I:8"><struct-ref name="_opaque_pthread_t" ref="0x11013c0b8"/></type-tag>
        <typename><typedef-ref name="__darwin_pthread_t" ref="0x110148320"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__gnuc_va_list" ref="0x110601158" loc="40:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include/stdarg.h">
      <documentation loc="24:/opt/tinyos-2.x/tos/lib/tossim/sim_log.h">
        <short>&#10; The TOSSIM logging system.</short>
        <long>&#10; The TOSSIM logging system. Unlike in TinyOS 1.x, this logging&#10; system supports an arbitrary number of channels, denoted by&#10; a string identifier. A channel can be connected to any number&#10; of outputs, and a debug statement can be associated with any&#10; number of channels.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x1101124a0"/></type-tag>
        <typename><typedef-ref name="__gnuc_va_list" ref="0x110601158"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="nxle_uint8_t" ref="0x1102d9bd8" loc="445:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
        <typename><typedef-ref name="nxle_uint8_t" ref="0x1102d9bd8"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_off_t" ref="0x1104150c8" loc="120:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_off_t" ref="0x1104150c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="int64_t" ref="0x11014c810" loc="44:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int64_t" ref="0x11014c810"/></typename>
      </type-int>
    </typedef>
    <typedef name="int16_t" ref="0x11014c148" loc="34:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int16_t" ref="0x11014c148"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_mach_port_name_t" ref="0x110141610" loc="107:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_mach_port_name_t" ref="0x110141610"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast64_t" ref="0x1101517b0" loc="82:/opt/local/lib/gcc46/gcc/x86_64-apple-darwin12/4.6.4/include-fixed/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast64_t" ref="0x1101517b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_wctrans_t" ref="0x11014b5b8" loc="40:/usr/include/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wctrans_t" ref="0x11014b5b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="uid_t" ref="0x1103921c8" loc="172:/usr/include/sys/signal.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uid_t" ref="0x1103921c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_time_t" ref="0x110416cd0" loc="119:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_time_t" ref="0x110416cd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_t" ref="0x1109179e0" loc="19:/opt/tinyos-2.x/tos/types/message.h">
      <type-tag size="I:172" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110918490"/>
        <typename><typedef-ref name="message_t" ref="0x1109179e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_uint64_t" ref="0x1102d2968" loc="438:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nx_uint64_t">
        <typename><typedef-ref name="nx_uint64_t" ref="0x1102d2968"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_useconds_t" ref="0x110149448" loc="134:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_useconds_t" ref="0x110149448"/></typename>
      </type-int>
    </typedef>
    <typedef name="sig_t" ref="0x11039edb0" loc="348:/usr/include/sys/signal.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="sig_t" ref="0x11039edb0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="node_t" ref="0x11067fc00" loc="54:/opt/tinyos-2.x/tos/lib/tossim/heap.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="node" ref="0x11067f440"/>
        <typename><typedef-ref name="node_t" ref="0x11067fc00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_int8_t" ref="0x1102c88e8" loc="431:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
        <typename><typedef-ref name="nx_int8_t" ref="0x1102c88e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_node_t" ref="0x11071a598" loc="75:/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-tag size="I:80" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x11071c7a8"/>
        <typename><typedef-ref name="sim_noise_node_t" ref="0x11071a598"/></typename>
      </type-tag>
    </typedef>
    <typedef name="id_t" ref="0x1103333d8" loc="95:/usr/include/sys/wait.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="id_t" ref="0x1103333d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_ssize_t" ref="0x110416180" loc="116:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_ssize_t" ref="0x110416180"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_uuid_string_t" ref="0x110149e28" loc="136:/usr/include/sys/_types.h">
      <type-array elements="I:37" size="I:37" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__darwin_uuid_string_t" ref="0x110149e28"/></typename>
      </type-array>
    </typedef>
    <typedef name="nxle_uint32_t" ref="0x1102d89f0" loc="447:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nxle_uint32_t">
        <typename><typedef-ref name="nxle_uint32_t" ref="0x1102d89f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uart_id_t" ref="0x1109032c0" loc="72:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <documentation loc="60:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uart_id_t" ref="0x1109032c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="_RuneLocale" ref="0x1105225e8" loc="127:/usr/include/runetype.h">
      <type-tag size="I:3208" alignment="I:8"><struct-ref ref="0x1105126d0"/>
        <typename><typedef-ref name="_RuneLocale" ref="0x1105225e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_pthread_rwlock_t" ref="0x1101467a0" loc="126:/usr/include/sys/_types.h">
      <type-tag size="I:200" alignment="I:8"><struct-ref name="_opaque_pthread_rwlock_t" ref="0x11013ae58"/>
        <typename><typedef-ref name="__darwin_pthread_rwlock_t" ref="0x1101467a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_receiveDone_task" ref="0x110d5a5f0" loc="45:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AsyncReceiveAdapterP.nc">
      <component-ref qname="AsyncReceiveAdapterP"/>
      <type-array elements="I:0" size="I:0" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendDone_task" ref="0x110d773b0" loc="44:/Users/wangwenchen/wcps_apps/pure-tdma/sim/AsyncSendAdapterP.nc">
      <component-ref qname="AsyncSendAdapterP"/>
      <type-array elements="I:1" size="I:4" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="logentry_t" ref="0x110dd9488" loc="71:/opt/tinyos-2.x/apps/wustl/upma/lib/macs/fewhx4/PureTDMASchedulerP.nc">
      <component-ref qname="PureTDMASchedulerP"/>
      <type-tag size="I:1027" alignment="I:1"><nx_struct-ref name="logentry_t" scoped="" ref="0x110ddb380"/>
        <typename><typedef-ref name="logentry_t" scoped="" ref="0x110dd9488"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_syncDoneTask" ref="0x1111880c0" loc="36:/opt/tinyos-2.x/tos/chips/cc2420/control/sim/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="receive_message_t" ref="0x11126f1d0" loc="64:/opt/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:72" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x111270cc8"/>
        <typename><typedef-ref name="receive_message_t" scoped="" ref="0x11126f1d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_read_rssi_task" ref="0x1112d0590" loc="640:/opt/tinyos-2.x/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-array elements="I:3" size="I:12" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_startDoneTask" ref="0x1113d73b0" loc="93:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:4" size="I:16" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_stopDoneTask" ref="0x1113d83b0" loc="98:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:5" size="I:20" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendDoneTask" ref="0x111343230" loc="143:/Users/wangwenchen/wcps_apps/pure-tdma/sim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:6" size="I:24" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="queue_entry_t" ref="0x1115cb1f8" loc="49:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-tag size="I:8" alignment="I:8"><struct-ref scoped="" ref="0x1115cce78"/>
        <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x1115cb1f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_errorTask" ref="0x11157f3b0" loc="161:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_CancelTask" ref="0x1115dc418" loc="118:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
  </typedefs>
</nesc>
