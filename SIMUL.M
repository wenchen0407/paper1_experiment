function [ret,x0,str,ts,xts]=simul(t,x,u,flag);
%SIMUL	is the M-file description of the SIMULINK system named SIMUL.
%	The block-diagram can be displayed by typing: SIMUL.
%
%	SYS=SIMUL(T,X,U,FLAG) returns depending on FLAG certain
%	system values given time point, T, current state vector, X,
%	and input vector, U.
%	FLAG is used to indicate the type of output to be returned in SYS.
%
%	Setting FLAG=1 causes SIMUL to return state derivatives, FLAG=2
%	discrete states, FLAG=3 system outputs and FLAG=4 next sample
%	time. For more information and other options see SFUNC.
%
%	Calling SIMUL with a FLAG of zero:
%	[SIZES]=SIMUL([],[],[],0),  returns a vector, SIZES, which
%	contains the sizes of the state vector and other parameters.
%		SIZES(1) number of states
%		SIZES(2) number of discrete states
%		SIZES(3) number of outputs
%		SIZES(4) number of inputs
%		SIZES(5) number of roots (currently unsupported)
%		SIZES(6) direct feedthrough flag
%		SIZES(7) number of sample times
%
%	For the definition of other parameters in SIZES, see SFUNC.
%	See also, TRIM, LINMOD, LINSIM, EULER, RK23, RK45, ADAMS, GEAR.

% Note: This M-file is only used for saving graphical information;
%       after the model is loaded into memory an internal model
%       representation is used.

% the system will take on the name of this mfile:
sys = mfilename;
new_system(sys)
simver(1.3)
if (0 == (nargin + nargout))
     set_param(sys,'Location',[10,65,663,525])
     open_system(sys)
end;
set_param(sys,'algorithm',     'RK-45')
set_param(sys,'Start time',    '0')
set_param(sys,'Stop time',     'Tf')
set_param(sys,'Min step size', 'dtint')
set_param(sys,'Max step size', 'dtint')
set_param(sys,'Relative error','tol')
set_param(sys,'Return vars',   '')


%     Subsystem  ['Sensor',13,'Noises'].

new_system([sys,'/',['Sensor',13,'Noises']])
set_param([sys,'/',['Sensor',13,'Noises']],'Location',[10,56,245,496])


%     Subsystem  ['Sensor',13,'Noises/Sensor Noise 1'].

new_system([sys,'/',['Sensor',13,'Noises/Sensor Noise 1']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 1']],'Location',[54,341,339,470])

add_block('built-in/Outport',[sys,'/',['Sensor',13,'Noises/Sensor Noise 1/Out_1']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 1/Out_1']],...
		'position',[230,40,250,60])

add_block('built-in/Gain',[sys,'/',['Sensor',13,'Noises/Sensor Noise 1/Gain']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 1/Gain']],...
		'Gain','[sqrt(Cov)]/[sqrt(Ts)]',...
		'position',[155,31,195,69])

add_block('built-in/Zero-Order Hold',[sys,'/',['Sensor',13,'Noises/Sensor Noise 1/Zero-Order',13,'Hold']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 1/Zero-Order',13,'Hold']],...
		'Sample time','Ts',...
		'position',[85,34,120,66])

add_block('built-in/White Noise',[sys,'/',['Sensor',13,'Noises/Sensor Noise 1/White Noise']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 1/White Noise']],...
		'Seed','seed',...
		'position',[25,40,45,60])
add_line([sys,'/',['Sensor',13,'Noises/Sensor Noise 1']],[50,50;80,50])
add_line([sys,'/',['Sensor',13,'Noises/Sensor Noise 1']],[200,50;225,50])
add_line([sys,'/',['Sensor',13,'Noises/Sensor Noise 1']],[125,50;150,50])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 1']],...
		'Mask Display','plot(t(:),r2(:))',...
		'Mask Type','Continuous White Noise.')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 1']],...
		'Mask Dialogue','White noise for continuous (s-domain) systems.\nBand-limited using zero-order-hold.|Noise Power:|Sample Time:|Seed')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 1']],...
		'Mask Translate','Cov = @1; Ts = @2; seed = @3; r = rand(1,12); r2 = [r(1),r;r,r(12)]; t =[1:13;1:13];')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 1']],...
		'Mask Help','Implemented using white noise into Zero-Order Hold block. The seed and power can be vectors of the same length to produce a vector of white noise sources. For faster simulation, set sample time to the highest value possible but in accordance with the fastest dynamics of system.')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 1']],...
		'Mask Entries','[0.001/10000]\/[0.001]\/[555]\/')


%     Finished composite block ['Sensor',13,'Noises/Sensor Noise 1'].

set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 1']],...
		'orientation',2,...
		'position',[140,42,185,78])


%     Subsystem  ['Sensor',13,'Noises/Sensor Noise 6'].

new_system([sys,'/',['Sensor',13,'Noises/Sensor Noise 6']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 6']],'Location',[54,341,339,470])

add_block('built-in/Outport',[sys,'/',['Sensor',13,'Noises/Sensor Noise 6/Out_1']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 6/Out_1']],...
		'position',[230,40,250,60])

add_block('built-in/Gain',[sys,'/',['Sensor',13,'Noises/Sensor Noise 6/Gain']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 6/Gain']],...
		'Gain','[sqrt(Cov)]/[sqrt(Ts)]',...
		'position',[155,31,195,69])

add_block('built-in/Zero-Order Hold',[sys,'/',['Sensor',13,'Noises/Sensor Noise 6/Zero-Order',13,'Hold']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 6/Zero-Order',13,'Hold']],...
		'Sample time','Ts',...
		'position',[85,34,120,66])

add_block('built-in/White Noise',[sys,'/',['Sensor',13,'Noises/Sensor Noise 6/White Noise']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 6/White Noise']],...
		'Seed','seed',...
		'position',[25,40,45,60])
add_line([sys,'/',['Sensor',13,'Noises/Sensor Noise 6']],[50,50;80,50])
add_line([sys,'/',['Sensor',13,'Noises/Sensor Noise 6']],[200,50;225,50])
add_line([sys,'/',['Sensor',13,'Noises/Sensor Noise 6']],[125,50;150,50])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 6']],...
		'Mask Display','plot(t(:),r2(:))',...
		'Mask Type','Continuous White Noise.')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 6']],...
		'Mask Dialogue','White noise for continuous (s-domain) systems.\nBand-limited using zero-order-hold.|Noise Power:|Sample Time:|Seed')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 6']],...
		'Mask Translate','Cov = @1; Ts = @2; seed = @3; r = rand(1,12); r2 = [r(1),r;r,r(12)]; t =[1:13;1:13];')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 6']],...
		'Mask Help','Implemented using white noise into Zero-Order Hold block. The seed and power can be vectors of the same length to produce a vector of white noise sources. For faster simulation, set sample time to the highest value possible but in accordance with the fastest dynamics of system.')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 6']],...
		'Mask Entries','[0.001/10000]\/[0.001]\/[378144266]\/')


%     Finished composite block ['Sensor',13,'Noises/Sensor Noise 6'].

set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 6']],...
		'orientation',2,...
		'position',[140,352,185,388])


%     Subsystem  ['Sensor',13,'Noises/Sensor Noise 5'].

new_system([sys,'/',['Sensor',13,'Noises/Sensor Noise 5']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 5']],'Location',[54,341,339,470])

add_block('built-in/Outport',[sys,'/',['Sensor',13,'Noises/Sensor Noise 5/Out_1']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 5/Out_1']],...
		'position',[230,40,250,60])

add_block('built-in/Gain',[sys,'/',['Sensor',13,'Noises/Sensor Noise 5/Gain']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 5/Gain']],...
		'Gain','[sqrt(Cov)]/[sqrt(Ts)]',...
		'position',[155,31,195,69])

add_block('built-in/Zero-Order Hold',[sys,'/',['Sensor',13,'Noises/Sensor Noise 5/Zero-Order',13,'Hold']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 5/Zero-Order',13,'Hold']],...
		'Sample time','Ts',...
		'position',[85,34,120,66])

add_block('built-in/White Noise',[sys,'/',['Sensor',13,'Noises/Sensor Noise 5/White Noise']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 5/White Noise']],...
		'Seed','seed',...
		'position',[25,40,45,60])
add_line([sys,'/',['Sensor',13,'Noises/Sensor Noise 5']],[50,50;80,50])
add_line([sys,'/',['Sensor',13,'Noises/Sensor Noise 5']],[200,50;225,50])
add_line([sys,'/',['Sensor',13,'Noises/Sensor Noise 5']],[125,50;150,50])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 5']],...
		'Mask Display','plot(t(:),r2(:))',...
		'Mask Type','Continuous White Noise.')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 5']],...
		'Mask Dialogue','White noise for continuous (s-domain) systems.\nBand-limited using zero-order-hold.|Noise Power:|Sample Time:|Seed')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 5']],...
		'Mask Translate','Cov = @1; Ts = @2; seed = @3; r = rand(1,12); r2 = [r(1),r;r,r(12)]; t =[1:13;1:13];')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 5']],...
		'Mask Help','Implemented using white noise into Zero-Order Hold block. The seed and power can be vectors of the same length to produce a vector of white noise sources. For faster simulation, set sample time to the highest value possible but in accordance with the fastest dynamics of system.')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 5']],...
		'Mask Entries','[0.001/10000]\/[0.001]\/[1276390893]\/')


%     Finished composite block ['Sensor',13,'Noises/Sensor Noise 5'].

set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 5']],...
		'orientation',2,...
		'position',[140,287,185,323])


%     Subsystem  ['Sensor',13,'Noises/Sensor Noise 4'].

new_system([sys,'/',['Sensor',13,'Noises/Sensor Noise 4']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 4']],'Location',[54,341,339,470])

add_block('built-in/Outport',[sys,'/',['Sensor',13,'Noises/Sensor Noise 4/Out_1']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 4/Out_1']],...
		'position',[230,40,250,60])

add_block('built-in/Gain',[sys,'/',['Sensor',13,'Noises/Sensor Noise 4/Gain']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 4/Gain']],...
		'Gain','[sqrt(Cov)]/[sqrt(Ts)]',...
		'position',[155,31,195,69])

add_block('built-in/Zero-Order Hold',[sys,'/',['Sensor',13,'Noises/Sensor Noise 4/Zero-Order',13,'Hold']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 4/Zero-Order',13,'Hold']],...
		'Sample time','Ts',...
		'position',[85,34,120,66])

add_block('built-in/White Noise',[sys,'/',['Sensor',13,'Noises/Sensor Noise 4/White Noise']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 4/White Noise']],...
		'Seed','seed',...
		'position',[25,40,45,60])
add_line([sys,'/',['Sensor',13,'Noises/Sensor Noise 4']],[50,50;80,50])
add_line([sys,'/',['Sensor',13,'Noises/Sensor Noise 4']],[200,50;225,50])
add_line([sys,'/',['Sensor',13,'Noises/Sensor Noise 4']],[125,50;150,50])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 4']],...
		'Mask Display','plot(t(:),r2(:))',...
		'Mask Type','Continuous White Noise.')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 4']],...
		'Mask Dialogue','White noise for continuous (s-domain) systems.\nBand-limited using zero-order-hold.|Noise Power:|Sample Time:|Seed')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 4']],...
		'Mask Translate','Cov = @1; Ts = @2; seed = @3; r = rand(1,12); r2 = [r(1),r;r,r(12)]; t =[1:13;1:13];')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 4']],...
		'Mask Help','Implemented using white noise into Zero-Order Hold block. The seed and power can be vectors of the same length to produce a vector of white noise sources. For faster simulation, set sample time to the highest value possible but in accordance with the fastest dynamics of system.')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 4']],...
		'Mask Entries','[0.001/10000]\/[0.001]\/[1278763832]\/')


%     Finished composite block ['Sensor',13,'Noises/Sensor Noise 4'].

set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 4']],...
		'orientation',2,...
		'position',[140,227,185,263])


%     Subsystem  ['Sensor',13,'Noises/Sensor Noise 3'].

new_system([sys,'/',['Sensor',13,'Noises/Sensor Noise 3']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 3']],'Location',[54,341,339,470])

add_block('built-in/Outport',[sys,'/',['Sensor',13,'Noises/Sensor Noise 3/Out_1']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 3/Out_1']],...
		'position',[230,40,250,60])

add_block('built-in/Gain',[sys,'/',['Sensor',13,'Noises/Sensor Noise 3/Gain']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 3/Gain']],...
		'Gain','[sqrt(Cov)]/[sqrt(Ts)]',...
		'position',[155,31,195,69])

add_block('built-in/Zero-Order Hold',[sys,'/',['Sensor',13,'Noises/Sensor Noise 3/Zero-Order',13,'Hold']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 3/Zero-Order',13,'Hold']],...
		'Sample time','Ts',...
		'position',[85,34,120,66])

add_block('built-in/White Noise',[sys,'/',['Sensor',13,'Noises/Sensor Noise 3/White Noise']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 3/White Noise']],...
		'Seed','seed',...
		'position',[25,40,45,60])
add_line([sys,'/',['Sensor',13,'Noises/Sensor Noise 3']],[50,50;80,50])
add_line([sys,'/',['Sensor',13,'Noises/Sensor Noise 3']],[200,50;225,50])
add_line([sys,'/',['Sensor',13,'Noises/Sensor Noise 3']],[125,50;150,50])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 3']],...
		'Mask Display','plot(t(:),r2(:))',...
		'Mask Type','Continuous White Noise.')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 3']],...
		'Mask Dialogue','White noise for continuous (s-domain) systems.\nBand-limited using zero-order-hold.|Noise Power:|Sample Time:|Seed')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 3']],...
		'Mask Translate','Cov = @1; Ts = @2; seed = @3; r = rand(1,12); r2 = [r(1),r;r,r(12)]; t =[1:13;1:13];')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 3']],...
		'Mask Help','Implemented using white noise into Zero-Order Hold block. The seed and power can be vectors of the same length to produce a vector of white noise sources. For faster simulation, set sample time to the highest value possible but in accordance with the fastest dynamics of system.')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 3']],...
		'Mask Entries','[0.001/10000]\/[0.001]\/[575523602]\/')


%     Finished composite block ['Sensor',13,'Noises/Sensor Noise 3'].

set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 3']],...
		'orientation',2,...
		'position',[140,167,185,203])


%     Subsystem  ['Sensor',13,'Noises/Sensor Noise 2'].

new_system([sys,'/',['Sensor',13,'Noises/Sensor Noise 2']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 2']],'Location',[54,341,339,470])

add_block('built-in/Outport',[sys,'/',['Sensor',13,'Noises/Sensor Noise 2/Out_1']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 2/Out_1']],...
		'position',[230,40,250,60])

add_block('built-in/Gain',[sys,'/',['Sensor',13,'Noises/Sensor Noise 2/Gain']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 2/Gain']],...
		'Gain','[sqrt(Cov)]/[sqrt(Ts)]',...
		'position',[155,31,195,69])

add_block('built-in/Zero-Order Hold',[sys,'/',['Sensor',13,'Noises/Sensor Noise 2/Zero-Order',13,'Hold']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 2/Zero-Order',13,'Hold']],...
		'Sample time','Ts',...
		'position',[85,34,120,66])

add_block('built-in/White Noise',[sys,'/',['Sensor',13,'Noises/Sensor Noise 2/White Noise']])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 2/White Noise']],...
		'Seed','seed',...
		'position',[25,40,45,60])
add_line([sys,'/',['Sensor',13,'Noises/Sensor Noise 2']],[50,50;80,50])
add_line([sys,'/',['Sensor',13,'Noises/Sensor Noise 2']],[200,50;225,50])
add_line([sys,'/',['Sensor',13,'Noises/Sensor Noise 2']],[125,50;150,50])
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 2']],...
		'Mask Display','plot(t(:),r2(:))',...
		'Mask Type','Continuous White Noise.')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 2']],...
		'Mask Dialogue','White noise for continuous (s-domain) systems.\nBand-limited using zero-order-hold.|Noise Power:|Sample Time:|Seed')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 2']],...
		'Mask Translate','Cov = @1; Ts = @2; seed = @3; r = rand(1,12); r2 = [r(1),r;r,r(12)]; t =[1:13;1:13];')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 2']],...
		'Mask Help','Implemented using white noise into Zero-Order Hold block. The seed and power can be vectors of the same length to produce a vector of white noise sources. For faster simulation, set sample time to the highest value possible but in accordance with the fastest dynamics of system.')
set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 2']],...
		'Mask Entries','[0.001/10000]\/[0.001]\/[253731698]\/')


%     Finished composite block ['Sensor',13,'Noises/Sensor Noise 2'].

set_param([sys,'/',['Sensor',13,'Noises/Sensor Noise 2']],...
		'orientation',2,...
		'position',[140,102,185,138])

add_block('built-in/Mux',[sys,'/',['Sensor',13,'Noises/Mux2']])
set_param([sys,'/',['Sensor',13,'Noises/Mux2']],...
		'orientation',2,...
		'hide name',0,...
		'inputs','6',...
		'position',[45,115,75,225])

add_block('built-in/Outport',[sys,'/',['Sensor',13,'Noises/out_1']])
set_param([sys,'/',['Sensor',13,'Noises/out_1']],...
		'orientation',2,...
		'position',[15,160,35,180])
add_line([sys,'/',['Sensor',13,'Noises']],[135,370;90,370;80,220])
add_line([sys,'/',['Sensor',13,'Noises']],[135,305;100,305;100,200;80,200])
add_line([sys,'/',['Sensor',13,'Noises']],[135,245;105,245;105,180;80,180])
add_line([sys,'/',['Sensor',13,'Noises']],[135,185;115,185;115,160;80,160])
add_line([sys,'/',['Sensor',13,'Noises']],[135,120;115,120;115,140;80,140])
add_line([sys,'/',['Sensor',13,'Noises']],[135,60;105,60;105,120;80,120])
add_line([sys,'/',['Sensor',13,'Noises']],[40,170;40,170])


%     Finished composite block ['Sensor',13,'Noises'].

set_param([sys,'/',['Sensor',13,'Noises']],...
		'orientation',2,...
		'position',[545,125,575,165])

add_block('built-in/Transfer Fcn',[sys,'/',['Kanai-Tajimi',13,'Filter']])
set_param([sys,'/',['Kanai-Tajimi',13,'Filter']],...
		'Numerator','numeq',...
		'Denominator','deneq',...
		'position',[100,92,175,128])


%     Subsystem  ['Band-Limited',13,'White Noise'].

new_system([sys,'/',['Band-Limited',13,'White Noise']])
set_param([sys,'/',['Band-Limited',13,'White Noise']],'Location',[54,341,339,470])

add_block('built-in/Outport',[sys,'/',['Band-Limited',13,'White Noise/Out_1']])
set_param([sys,'/',['Band-Limited',13,'White Noise/Out_1']],...
		'position',[230,40,250,60])

add_block('built-in/Gain',[sys,'/',['Band-Limited',13,'White Noise/Gain']])
set_param([sys,'/',['Band-Limited',13,'White Noise/Gain']],...
		'Gain','[sqrt(Cov)]/[sqrt(Ts)]',...
		'position',[155,31,195,69])

add_block('built-in/Zero-Order Hold',[sys,'/',['Band-Limited',13,'White Noise/Zero-Order',13,'Hold']])
set_param([sys,'/',['Band-Limited',13,'White Noise/Zero-Order',13,'Hold']],...
		'Sample time','Ts',...
		'position',[85,34,120,66])

add_block('built-in/White Noise',[sys,'/',['Band-Limited',13,'White Noise/White Noise']])
set_param([sys,'/',['Band-Limited',13,'White Noise/White Noise']],...
		'Seed','seed',...
		'position',[25,40,45,60])
add_line([sys,'/',['Band-Limited',13,'White Noise']],[50,50;80,50])
add_line([sys,'/',['Band-Limited',13,'White Noise']],[200,50;225,50])
add_line([sys,'/',['Band-Limited',13,'White Noise']],[125,50;150,50])
set_param([sys,'/',['Band-Limited',13,'White Noise']],...
		'Mask Display','plot(t(:),r2(:))',...
		'Mask Type','Continuous White Noise.')
set_param([sys,'/',['Band-Limited',13,'White Noise']],...
		'Mask Dialogue','White noise for continuous (s-domain) systems.\nBand-limited using zero-order-hold.|Noise Power:|Sample Time:|Seed')
set_param([sys,'/',['Band-Limited',13,'White Noise']],...
		'Mask Translate','Cov = @1; Ts = @2; seed = @3; r = rand(1,12); r2 = [r(1),r;r,r(12)]; t =[1:13;1:13];')
set_param([sys,'/',['Band-Limited',13,'White Noise']],...
		'Mask Help','Implemented using white noise into Zero-Order Hold block. The seed and power can be vectors of the same length to produce a vector of white noise sources. For faster simulation, set sample time to the highest value possible but in accordance with the fastest dynamics of system.')
set_param([sys,'/',['Band-Limited',13,'White Noise']],...
		'Mask Entries','[2*pi]\/[0.001]\/[101077219]\/')


%     Finished composite block ['Band-Limited',13,'White Noise'].

set_param([sys,'/',['Band-Limited',13,'White Noise']],...
		'position',[35,92,80,128])

add_block('built-in/From File',[sys,'/',['Earthquake',13,'(in Volts, time scaled)']])
set_param([sys,'/',['Earthquake',13,'(in Volts, time scaled)']],...
		'File name','elc_a.mat',...
		'position',[65,31,175,59])

add_block('built-in/To Workspace',[sys,'/',['Command Signal ',13,'to Workspace']])
set_param([sys,'/',['Command Signal ',13,'to Workspace']],...
		'mat-name','usignal',...
		'buffer','[n 1 dts]',...
		'position',[80,182,130,198])

add_block('built-in/Mux',[sys,'/','Mux'])
set_param([sys,'/','Mux'],...
		'hide name',0,...
		'inputs','2',...
		'position',[280,71,310,104])

add_block('built-in/State-Space',[sys,'/',['Plant',13,'(Evaluation Model)']])
set_param([sys,'/',['Plant',13,'(Evaluation Model)']],...
		'A','At',...
		'B','Bt',...
		'C','Ct',...
		'D','Dt',...
		'position',[345,69,420,111])

add_block('built-in/To Workspace',[sys,'/',['Z Vector to',13,'Workspace']])
set_param([sys,'/',['Z Vector to',13,'Workspace']],...
		'mat-name','zout',...
		'buffer','[n 1 dts]',...
		'position',[475,82,525,98])


%     Subsystem  'Subsystem'.

new_system([sys,'/','Subsystem'])
set_param([sys,'/','Subsystem'],'Location',[156,56,960,841])

add_block('built-in/Inport',[sys,'/','Subsystem/in_1'])
set_param([sys,'/','Subsystem/in_1'],...
		'orientation',1,...
		'position',[250,10,270,30])

add_block('built-in/Demux',[sys,'/','Subsystem/Demux1'])
set_param([sys,'/','Subsystem/Demux1'],...
		'orientation',1,...
		'hide name',0,...
		'outputs','13',...
		'position',[67,50,573,75])

add_block('built-in/Mux',[sys,'/','Subsystem/Mux2'])
set_param([sys,'/','Subsystem/Mux2'],...
		'orientation',1,...
		'hide name',0,...
		'inputs','6',...
		'position',[268,320,392,335])

add_block('built-in/Inport',[sys,'/','Subsystem/in_2'])
set_param([sys,'/','Subsystem/in_2'],...
		'orientation',1,...
		'Port','2',...
		'position',[600,320,620,340])

add_block('built-in/Demux',[sys,'/','Subsystem/Demux2'])
set_param([sys,'/','Subsystem/Demux2'],...
		'orientation',1,...
		'hide name',0,...
		'outputs','6',...
		'position',[164,395,596,415])

add_block('built-in/Sum',[sys,'/','Subsystem/Sum'])
set_param([sys,'/','Subsystem/Sum'],...
		'orientation',1,...
		'position',[325,360,345,375])

add_block('built-in/Mux',[sys,'/','Subsystem/Mux  '])
set_param([sys,'/','Subsystem/Mux  '],...
		'orientation',1,...
		'hide name',0,...
		'inputs','11',...
		'position',[45,675,655,690])

add_block('built-in/Transfer Fcn',[sys,'/',['Subsystem/~Integrator ',13,'GA']])
set_param([sys,'/',['Subsystem/~Integrator ',13,'GA']],...
		'orientation',1,...
		'Numerator','[39.5 0]',...
		'Denominator','[39.5 8.89 1]',...
		'position',[483,470,577,510])

add_block('built-in/Transfer Fcn',[sys,'/',['Subsystem/~Integrator ',13,'Am']])
set_param([sys,'/',['Subsystem/~Integrator ',13,'Am']],...
		'orientation',1,...
		'Numerator','[39.5 0]',...
		'Denominator','[39.5 8.89 1]',...
		'position',[438,530,532,570])

add_block('built-in/Transfer Fcn',[sys,'/',['Subsystem/~Integrator ',13,'A3']])
set_param([sys,'/',['Subsystem/~Integrator ',13,'A3']],...
		'orientation',1,...
		'Numerator','[39.5 0]',...
		'Denominator','[39.5 8.89 1]',...
		'position',[368,580,462,620])

add_block('built-in/Transfer Fcn',[sys,'/',['Subsystem/~Integrator ',13,'A2']])
set_param([sys,'/',['Subsystem/~Integrator ',13,'A2']],...
		'orientation',1,...
		'Numerator','[39.5 0]',...
		'Denominator','[39.5 8.89 1]',...
		'position',[253,540,347,580])

add_block('built-in/Transfer Fcn',[sys,'/',['Subsystem/~Integrator ',13,'A1']])
set_param([sys,'/',['Subsystem/~Integrator ',13,'A1']],...
		'orientation',1,...
		'Numerator','[39.5 0]',...
		'Denominator','[39.5 8.89 1]',...
		'position',[237,470,333,505])

add_block('built-in/Outport',[sys,'/','Subsystem/out_1'])
set_param([sys,'/','Subsystem/out_1'],...
		'orientation',1,...
		'position',[340,720,360,740])

add_block('built-in/Note',[sys,'/','Subsystem/xm'])
set_param([sys,'/','Subsystem/xm'],...
		'position',[210,145,215,150])

add_block('built-in/Note',[sys,'/','Subsystem/a1'])
set_param([sys,'/','Subsystem/a1'],...
		'position',[410,120,415,125])

add_block('built-in/Note',[sys,'/','Subsystem/a2'])
set_param([sys,'/','Subsystem/a2'],...
		'position',[450,135,455,140])

add_block('built-in/Note',[sys,'/','Subsystem/a3'])
set_param([sys,'/','Subsystem/a3'],...
		'position',[490,151,495,156])

add_block('built-in/Note',[sys,'/','Subsystem/am'])
set_param([sys,'/','Subsystem/am'],...
		'position',[530,135,535,140])

add_block('built-in/Note',[sys,'/','Subsystem/ga'])
set_param([sys,'/','Subsystem/ga'],...
		'position',[570,145,575,150])
add_line([sys,'/','Subsystem'],[330,340;330,355])
add_line([sys,'/','Subsystem'],[335,380;380,390])
add_line([sys,'/','Subsystem'],[345,420;345,440;185,440;185,670])
add_line([sys,'/','Subsystem'],[345,440;345,470;405,470;405,520;300,520;300,535])
add_line([sys,'/','Subsystem'],[275,420;275,430;285,430;285,465])
add_line([sys,'/','Subsystem'],[275,430;175,430;175,655;130,655;130,670])
add_line([sys,'/','Subsystem'],[555,420;530,420;530,465])
add_line([sys,'/','Subsystem'],[485,420;470,420;470,515;485,525])
add_line([sys,'/','Subsystem'],[415,420;415,575])
add_line([sys,'/','Subsystem'],[285,510;240,510;240,635;390,635;390,660;405,670])
add_line([sys,'/','Subsystem'],[300,585;300,630;400,630;400,645;460,645;460,670])
add_line([sys,'/','Subsystem'],[415,625;515,625;515,670])
add_line([sys,'/','Subsystem'],[485,575;570,575;570,670])
add_line([sys,'/','Subsystem'],[530,515;625,515;625,670])
add_line([sys,'/','Subsystem'],[530,450;530,455;215,455;215,640;350,640;350,670])
add_line([sys,'/','Subsystem'],[470,450;205,450;205,650;295,650;295,670])
add_line([sys,'/','Subsystem'],[415,445;195,445;195,660;240,670])
add_line([sys,'/','Subsystem'],[205,420;165,420;165,535;75,535;75,670])
add_line([sys,'/','Subsystem'],[260,35;320,45])
add_line([sys,'/','Subsystem'],[610,345;340,355])
add_line([sys,'/','Subsystem'],[350,695;350,715])
add_line([sys,'/','Subsystem'],[560,80;560,215;380,215;380,315])
add_line([sys,'/','Subsystem'],[520,80;520,205;360,205;360,315])
add_line([sys,'/','Subsystem'],[200,80;200,205;280,205;280,315])
add_line([sys,'/','Subsystem'],[400,80;400,155;300,155;300,315])
add_line([sys,'/','Subsystem'],[440,80;440,170;320,170;320,315])
add_line([sys,'/','Subsystem'],[480,80;480,190;340,190;340,315])


%     Finished composite block 'Subsystem'.

set_param([sys,'/','Subsystem'],...
		'orientation',1,...
		'hide name',0,...
		'position',[417,160,528,255])

add_block('built-in/Mux',[sys,'/','Mux1'])
set_param([sys,'/','Mux1'],...
		'orientation',1,...
		'hide name',0,...
		'position',[480,315,520,335])

add_block('built-in/Demux',[sys,'/','Demux'])
set_param([sys,'/','Demux'],...
		'orientation',1,...
		'hide name',0,...
		'outputs','11',...
		'position',[459,275,591,295])

add_block('built-in/Saturation',[sys,'/','Saturation'])
set_param([sys,'/','Saturation'],...
		'orientation',2,...
		'Lower Limit','-3',...
		'Upper Limit','3',...
		'position',[445,333,475,357])

add_block('built-in/S-Function',[sys,'/',' Quantizer '])
set_param([sys,'/',' Quantizer '],...
		'orientation',2,...
		'function name','quantize',...
		'parameters','q',...
		'Mask Display','plot([-4,4],[0,0],[0,0],[-4,4],[-3,-2,-2,-1,-1,0,0,1,1,2,2,3,3,4]-0.5,[-3,-3,-2,-2,-1,-1,0,0,1,1,2,2,3,3])')
set_param([sys,'/',' Quantizer '],...
		'Mask Type','Quantizer',...
		'Mask Dialogue','Discretizes input at given interval.|Quantization interval:',...
		'Mask Translate','q = @1;',...
		'Mask Help','Quantizes input in given intervals. ')
set_param([sys,'/',' Quantizer '],...
		'Mask Entries','qint\/',...
		'position',[385,332,415,358])

add_block('built-in/Saturation',[sys,'/','Saturation '])
set_param([sys,'/','Saturation '],...
		'orientation',2,...
		'Lower Limit','-3',...
		'Upper Limit','3',...
		'position',[205,333,235,357])

add_block('built-in/S-Function',[sys,'/','Quantizer'])
set_param([sys,'/','Quantizer'],...
		'orientation',2,...
		'function name','quantize',...
		'parameters','q',...
		'Mask Display','plot([-4,4],[0,0],[0,0],[-4,4],[-3,-2,-2,-1,-1,0,0,1,1,2,2,3,3,4]-0.5,[-3,-3,-2,-2,-1,-1,0,0,1,1,2,2,3,3])')
set_param([sys,'/','Quantizer'],...
		'Mask Type','Quantizer',...
		'Mask Dialogue','Discretizes input at given interval.|Quantization interval:',...
		'Mask Translate','q = @1;',...
		'Mask Help','Quantizes input in given intervals. ')
set_param([sys,'/','Quantizer'],...
		'Mask Entries','qint\/',...
		'position',[145,332,175,358])

add_block('built-in/Discrete State-Space',[sys,'/','Discrete Controller'])
set_param([sys,'/','Discrete Controller'],...
		'orientation',2,...
		'A','Ad',...
		'B','Bd',...
		'C','Cd',...
		'D','Dd',...
		'Sample time','0.001',...
		'position',[255,323,370,367])

add_block('built-in/Unit Delay',[sys,'/','Unit Delay'])
set_param([sys,'/','Unit Delay'],...
		'orientation',2,...
		'Sample time','0.0002',...
		'position',[80,337,120,353])

add_block('built-in/To Workspace',[sys,'/',['Time Vector ',13,'to Workspace']])
set_param([sys,'/',['Time Vector ',13,'to Workspace']],...
		'mat-name','time',...
		'buffer','[n 1 dts]',...
		'position',[120,247,170,263])

add_block('built-in/Clock',[sys,'/','Clock'])
set_param([sys,'/','Clock'],...
		'position',[75,245,95,265])
add_line(sys,[315,90;340,90])
add_line(sys,[100,255;115,255])
add_line(sys,[425,90;470,90])
add_line(sys,[140,345;125,345])
add_line(sys,[250,345;240,345])
add_line(sys,[200,345;180,345])
add_line(sys,[440,345;420,345])
add_line(sys,[380,345;375,345])
add_line(sys,[485,300;485,310])
add_line(sys,[495,300;495,310])
add_line(sys,[505,300;505,310])
add_line(sys,[515,300;515,310])
add_line(sys,[500,340;500,345;480,345])
add_line(sys,[445,90;445,155])
add_line(sys,[475,260;525,270])
add_line(sys,[180,45;245,45;245,80;275,80])
add_line(sys,[540,145;500,155])
add_line(sys,[85,110;95,110])
add_line(sys,[75,345;50,345;50,165;245,165;245,95;275,95])
add_line(sys,[50,190;75,190])

drawnow

% Return any arguments.
if (nargin | nargout)
	% Must use feval here to access system in memory
	if (nargin > 3)
		if (flag == 0)
			eval(['[ret,x0,str,ts,xts]=',sys,'(t,x,u,flag);'])
		else
			eval(['ret =', sys,'(t,x,u,flag);'])
		end
	else
		[ret,x0,str,ts,xts] = feval(sys);
	end
else
	drawnow % Flash up the model and execute load callback
end
